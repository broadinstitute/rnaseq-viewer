{"version":3,"sources":["components/SideBarUtils.jsx","components/optionsPanels/ColorPicker.jsx","constants.js","utils/googleAuth.js","redux/selectors.js","components/SelectedDataPanel.jsx","redux/utils/reducerFactories.js","redux/utils/modalReducer.js","components/Modal.jsx","components/EditLocusList.jsx","components/AddRows.jsx","components/SearchRows.jsx","components/LeftSideBar.jsx","components/optionsPanels/BamOptionsPanel.jsx","components/optionsPanels/VcfOptionsPanel.jsx","components/optionsPanels/SpliceJunctionsOptionsPanel.jsx","components/optionsPanels/GcnvOptionsPanel.jsx","components/RightSideBar.jsx","components/About.jsx","components/UserInfo.jsx","components/Header.jsx","utils/throttle.js","components/IGV.jsx","components/LoginAndShowIGV.jsx","components/RequestStatus.jsx","utils/localStorage.js","redux/initialState.js","components/InitialSettingsForm.jsx","components/BaseLayout.jsx","redux/rootReducer.js","App.js","index.js"],"names":["CategoryH3","styled","h3","_templateObject","StyledPopup","Popup","_templateObject2","ColorLegendIcon","Icon","_templateObject3","OptionDiv","div","_templateObject4","OptionInputDiv","_templateObject5","OptionInput","input","_templateObject6","ColorSwatchBorder","ColorSwatch","attrs","flowing","ColorPicker","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","color","setState","colorChangedHandler","hex","state","_createClass","key","value","_this2","React","createElement","on","position","trigger","style","background","this","content","SwatchesPicker","onChangeComplete","handleApply","onChange","newColor","Component","SJ_MOTIFS","googleSignIn","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","authInstance","wrap","_context2","prev","next","gapi","auth2","getAuthInstance","sent","isSignedIn","get","signIn","stop","apply","arguments","getGoogleUserEmail","_ref3","_callee3","user","profile","_context3","abrupt","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","_ref4","_callee4","_context4","reloadAuthResponse","getAuthResponse","access_token","getLocus","locus","getRightSideBarLocusList","rightSideBarLocusList","getLeftSideBarLocusList","leftSideBarLocusList","getGenome","genome","getRowsInCategories","rowsInCategories","getSelectedRowNamesByCategoryName","selectedRowNamesByCategoryName","getSelectedSamplesByCategoryNameAndRowName","selectedSamplesByCategoryNameAndRowName","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getGcnvOptions","gcnvOptions","getUser","getIsGoogleLoginRequired","isGoogleLoginRequired","getInitialSettingsUrl","initialSettingsUrl","getAllDataTypes","createSelector","_toConsumableArray","reduce","acc","category","rows","forEach","row","data","filter","type","map","dataType","add","Set","getDataTypesUsersCanToggle","dataTypes","size","getEnabledDataTypes","dataTypesToShow","allDataTypes","dataTypesUsersCanToggle","includes","getRowsByCategoryName","_objectSpread","categoryName","getSelectedRowsByCategoryName","rowsByCategoryName","Object","entries","_ref","_slicedToArray","selectedRowNames","name","getTracks","trackOrder","selectedRowsByCategoryName","trackOrderArray","enabledDataTypes","igvTracks","i","junctionsTrack","coverageTrack","j","computeTrackOrder","trackName","indexOf","concat","label","console","log","url","push","format","indexURL","height","trackHeight","min","trackMin","max","trackMax","autoscale","highlightSamples","selectedSamples","sampleName","sampleSettings","onlyHandleClicksForHighlightedSamples","oauthToken","order","rowName","error","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","minSamplesWithThisJunction","maxSamplesWithThisJunction","minPercentSamplesWithThisJunction","maxPercentSamplesWithThisJunction","minJunctionEndsVisible","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","undefined","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelWith","labelWithInParen","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","delimiter","nameField","warn","indexed","displayMode","endsWith","viewAsPairs","showSoftClips","tracks","gencodeGeneTrackOrder","searchable","visibilityWindow","SelectedDataCategory","span","DeleteButton","Button","basic","icon","SampleNameText","SamplePanel","sample","hideSample","updateSampleSettings","numSelectedSamplesInRow","whiteSpace","onClick","marginLeft","connect","dispatch","updateGcnvOptions","newSettings","updates","hideRow","selectedSamplesByRowName","sampleSettingsByRowNameAndSampleName","result","categoryObj","_ref5","_ref6","margin","length","zeroActionsReducer","createSingleValueReducer","updateActionType","initialState","debug","reducer","action","newValue","createSingleObjectReducer","newState","createArrayReducer","actionTypeSuffix","Array","isArray","values","valuesToRemove","v","modals","updatesById","shallowCopy","id","obj","createObjectsByIdReducer","getModalOpen","modalName","open","ButtonLink","padding","fontWeight","ContainerDiv","StyledButton","CustomModal","_React$PureComponent","_len","args","_key","doClose","handleClose","close","handleSave","cloneElement","Modal","isOpen","onClose","Header","title","floated","Content","children","tabIndex","PureComponent","defaultProps","ownProps","e","preventDefault","confirmed","getState","confirmOnClose","confirming","LinkButton","a","EditLocusListButtonAndModal","_this$props","locusList","setLocusList","newLocusList","textAreaValue","split","Boolean","Form","Field","control","TextArea","minHeight","defaultValue","onKeyUp","target","placeholder","join","EditLocusList","setLocus","ExampleDiv","ExamplePath","SUPPORTED_FILE_EXTENSIONS","AddRowsButtonAndModal","warningMessage","errorMessage","trim","invalidPaths","newRowsByRowName","dataPath","pathTokens","fileName","matchingExtensions","keys","ext","filePrefix","replace","newRows","addRows","_this$parseTextAreaVa","parseTextAreaValueToRows","getInitialState","_this$state","fullTitle","handleModalSave","handleModalClose","fileType","Message","SearchPanelContainer","StyledSearch","Search","INITIAL_STATE","isLoading","results","SearchRows","idTokens","getSelectedSamplesForRow","updateSelectedRowNames","updateSelectedSamples","getSelectedRowNames","getSelectedSamplesByRowName","resultsByCategoryName","resultsCounter","newResult","_","some","isRowSelected","inputStringRegExp","dataItemsWithSamples","samples","test","isSampleSelected","matchingRowsByCategoryName","addMatchingSamplesFromRow","setTimeout","RegExp","escapeRegExp","addRowsToHide","addSamplesToHide","addMatchingRowsAndSamples","useCategories","resultsArray","item","actionLabel","className","loading","onResultSelect","handleResultSelect","onFocus","handleSearchChange","onSearchChange","actionType","CategoryDetails","DataTypeIcon","dataTypeIconColors","junctions","coverage","alignment","vcf","gcnv_bed","default","dataTypeLabels","bed","gff3","gtf","genePred","bigBed","RowColorLabelsContainer","NoWrapDiv","ShowTrackTypesPanel","updateDataTypesToShow","checkBoxes","charAt","toUpperCase","slice","Checkbox","toLocaleString","checked","toLowerCase","RowColorLabelsWithPopup","d","paddingRight","paddingLeft","colSpan","fontSize","marginTop","s","navigator","clipboard","writeText","CategoryPanel","RowsPanel","RowPanel","AddRows","data-row","RowDetails","description","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","LeftSideBar","SelectedDataPanel","updateSjOptions","updateVcfOptions","updateBamOptions","editedFields","keyCode","handleTextInput","parseInt","compact","OptionBox","StyledRadio","Radio","ColorByLegend","width","RightSideBar","SpliceJunctionsOptionsPanel","GcnvOptionsPanel","BamOptionsPanel","VcfOptionsPanel","AboutLink","href","UserInfo","googleUserEmail","HeaderRow","Grid","Row","Column1","Column","Column2","throttle","delay","fn","timerId","clearTimeout","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","popupData","clickState","features","clickedFeatures","featureData","feature","end","genomicLocation","start","config","isVisible","attributes","chr","strand","annotated_junction","toString","uniquely_mapped","multi_mapped","maximum_spliced_alignment_overhang","num_samples_with_this_junction","num_samples_total","percent_samples_with_this_junction","toFixed","info","fd","monkeyPatchPopupData","track","subTrack","IGV","element","container","ref","setContainerElement","nextProps","junctionTrackDisplaySettingsChanged","vcfTrackDisplaySettingsChanged","alignmentTrackDisplaySettingsChanged","gcnvTrackDisplaySettingsChanged","gcnvTrackHighlightedSamplesChanged","isEqual","trackId","getTrackId","existingTrackViews","browser","trackViews","existingTrackView","existingTrackConfig","ignoreNextTrackPropsAfterOrderChangedEvent","nextTrackByTrackNameAndType","_callee","nextTrack","trackView","_context","shouldTrackBeReloaded","getIgvTrackView","updateConfig","postInit","repaintViews","ignoreNextTrackRemovedEvent","removeTrackByName","_x","loadTrack","then","ignoreNextLocusChangedEvent","_componentDidMount","locusChangedHandler","trackRemovedHandler","trackOrderChangedHandler","igvBrowserOptions","_this3","igv","createBrowser","window","igvBrowser","event","trackNamesInOrder","currentIGVLocus","$searchInput","val","nextIGVLocus","search","reloadRemoveAndAddTracks","newLocus","trackNames","SignInButtonContainer","InfoContainer","LoginAndShowIGV","show","userChangedHandler","dataPathCounter","buckets","startsWith","bucket","from","signInError","textAlign","GoogleLogin","clientId","TGG_VIEWER_CLIENT_ID","theme","buttonText","disabled","onSuccess","handleGoogleSignIn","onFailure","cookiePolicy","Promise","resolve","load","client","init","scope","discoveryDocs","t0","t1","details","RequestStatus","status","IN_PROGRESS","SUCCEEDED","successMessage","ERROR","CACHE","DEFAULT_STATE","alignmentShading","KEYS_TO_PERSIST_IN_LOCAL_STORAGE","getStateFromLocalStorage","serializedState","localStorage","getItem","jsonString","LZString","decompress","JSON","parse","err","loadState","KEYS_TO_PERSIST_IN_URL","getStateFromUrlHash","REVERSE_KEY_NAME_LOOKUP","hashString","location","hash","keyValue","keyValueList","jsurl","updateLocalStorageAndUrl","stringify","compress","setItem","saveState","hashKeyValueList","StyledDiv","StyledInput","Input","StyledButton2","InitialSettingsForm","overrideLocalSettings","globalState","updateInitialSettingsUrl","resetGlobalState","stateFromLocalStorage","stateFromUrlHash","isYaml","isJson","isUnknown","response","fileContents","settings","filteredSettings","Error","fetch","ok","statusText","text","yaml","safeLoad","_x2","urlParts","bucketName","objectPath","_args2","requestStatus","loadInitialSettingsUrl","NONE","_x3","EXCLUDED_KEYS","globalStateForExport","encodeURIComponent","textInputValue","applyInitialSettingsUrl","align","download","exportCurrentSettings","newUrl","LeftSideBarColumn","RightSideBarColumn","MiddleColumn","otherReducers","combineReducers","assign","updatedRows","existingNames","previousList","updatedList","trace","previousSelectedSamplesByRowName","previousSampleSettingsByRowNameAndSampleName","updatedSelectedSamplesByRowName","updatedSampleSettingsByRowNameAndSampleName","previousSampleSettingsBySampleName","newSampleSettingsBySampleName","mergedSamplesSettingsBySampleName","mergedSampleSettings","modalReducers","rootReducer","nextState","createReduxStore","computeInitialState","createStore","compose","applyMiddleware","thunkMiddleware","App","Provider","store","BaseLayout","ReactDOM","render","document","getElementById"],"mappings":"kgCAGO,IAAMA,EAAaC,IAAOC,GAAEC,KAKtBC,EAAcH,YAAOI,IAAPJ,CAAaK,KAI3BC,EAAkBN,YAAOO,IAAPP,CAAYQ,KAI9BC,EAAYT,IAAOU,IAAGC,KAKtBC,EAAiBZ,YAAOS,EAAPT,CAAiBa,KAIlCC,EAAcd,IAAOe,MAAKC,K,qnBChBvC,IAAMC,EAAoBjB,IAAOU,IAAGR,KAS9BgB,EAAclB,IAAOU,IAAGL,KASxBF,EAAcH,YAAOI,KAAOe,MAAM,CAAEC,SAAS,GAA/BpB,CAAsCQ,KAyD3Ca,EA3CE,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAEf,SAAAA,EAAYK,GAAQ,IAADC,EAGuB,OAHvBC,YAAA,KAAAP,GACjBM,EAAAH,EAAAK,KAAA,KAAMH,GAAMI,YAAAC,YAAAJ,GAAA,gBAKC,SAACK,GACdL,EAAKM,SAAS,CAAED,aACjBF,YAAAC,YAAAJ,GAAA,eAEa,SAACK,GACbL,EAAKD,MAAMQ,oBAAoBF,EAAMG,QARrCR,EAAKS,MAAQ,CAAEJ,MAAOL,EAAKD,MAAMM,OAAOL,EA8BzC,OA7BAU,YAAAhB,EAAA,EAAAiB,IAAA,SAAAC,MAAA,WAUS,IAADC,EAAA,KACP,OACEC,IAAAC,cAACvC,EAAW,CACVwC,GAAG,QACHC,SAAS,cACTC,QACEJ,IAAAC,cAACzB,EAAiB,KAChBwB,IAAAC,cAACxB,EAAW,CAAC4B,MAAO,CAAEC,WAAYC,KAAKZ,MAAMJ,UAGjDiB,QACER,IAAAC,cAACQ,iBAAc,CACblB,MAAOgB,KAAKZ,MAAMJ,MAClBmB,iBAAkBH,KAAKI,YACvBC,SAAU,SAACC,GAAQ,OAAKd,EAAKP,SAAS,CAAED,MAAOsB,aAKxDjC,EAnCc,CAASoB,IAAMc,WCxCnBC,EAAY,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,iB,uCC4BnEC,EAAY,eAAAC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCC,KAAKC,MAAMC,kBAAiB,OAArC,KAAZP,EAAYE,EAAAM,OACGR,EAAaS,WAAWC,MAAK,CAAAR,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAC1CJ,EAAaW,SAAQ,wBAAAT,EAAAU,UAAAb,OAE9B,kBALwB,OAAAJ,EAAAkB,MAAA,KAAAC,YAAA,GAOZC,EAAkB,eAAAC,EAAApB,YAAAC,IAAAC,MAAG,SAAAmB,IAAA,IAAAjB,EAAAkB,EAAAC,EAAA,OAAAtB,IAAAI,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACLC,KAAKC,MAAMC,kBAAiB,OAArC,GAAZP,EAAYoB,EAAAZ,KACA,CAADY,EAAAhB,KAAA,eAAAgB,EAAAC,OAAA,SACR,MAAI,OAGiC,OADxCH,EAAOlB,GAAgBA,EAAasB,aAAetB,EAAasB,YAAYZ,MAC5ES,EAAUD,GAAQA,EAAKK,kBAAiBH,EAAAC,OAAA,SACvCF,GAAWA,EAAQK,YAAU,wBAAAJ,EAAAR,UAAAK,OACrC,kBAR8B,OAAAD,EAAAH,MAAA,KAAAC,YAAA,GAUlBW,EAAoB,eAAAC,EAAA9B,YAAAC,IAAAC,MAAG,SAAA6B,IAAA,IAAA3B,EAAAkB,EAAA,OAAArB,IAAAI,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EAEPC,KAAKC,MAAMC,kBAAiB,OACgC,GADjFP,EAAY4B,EAAApB,KACZU,EAAOlB,GAAgBA,EAAasB,aAAetB,EAAasB,YAAYZ,MAC7EV,EAAa,CAAD4B,EAAAxB,KAAA,eAAAwB,EAAAP,OAAA,SACR,MAAI,OAIZ,OAFIrB,EAAaS,WAAWC,OAC3BQ,EAAKW,qBACND,EAAAP,OAAA,SACMH,EAAKY,kBAAkBC,cAAY,wBAAAH,EAAAhB,UAAAe,OAC3C,kBAXgC,OAAAD,EAAAb,MAAA,KAAAC,YAAA,GCtCpBkB,GAAW,SAAC3D,GAAK,OAAKA,EAAM4D,OAC5BC,GAA2B,SAAC7D,GAAK,OAAKA,EAAM8D,uBAC5CC,GAA0B,SAAC/D,GAAK,OAAKA,EAAMgE,sBAC3CC,GAAY,SAACjE,GAAK,OAAKA,EAAMkE,QAE7BC,GAAsB,SAACnE,GAAK,OAAKA,EAAMoE,kBACvCC,GAAoC,SAACrE,GAAK,OAAKA,EAAMsE,gCACrDC,GAA6C,SAACvE,GAAK,OAAKA,EAAMwE,yCAE9DC,GAAe,SAACzE,GAAK,OAAKA,EAAM0E,WAChCC,GAAgB,SAAC3E,GAAK,OAAKA,EAAM4E,YACjCC,GAAgB,SAAC7E,GAAK,OAAKA,EAAM8E,YACjCC,GAAiB,SAAC/E,GAAK,OAAKA,EAAMgF,aAClCC,GAAU,SAACjF,GAAK,OAAKA,EAAM6C,MAC3BqC,GAA2B,SAAClF,GAAK,OAAKA,EAAMmF,uBAC5CC,GAAwB,SAACpF,GAAK,OAAKA,EAAMqF,oBAEzCC,GAAkBC,YAC7BpB,IACA,SAACC,GACC,OAAAoB,YAAWpB,EAAiBqB,QAAO,SAACC,EAAKC,GASvC,OARAA,EAASC,KAAKC,SAAQ,SAACC,GACjBA,EAAIC,MACYD,EAAIC,KAAKC,QAAO,SAACD,GAAI,OAAKA,EAAKE,QAAMC,KAAI,SAACH,GAAI,OAAKA,EAAKE,QAChEJ,SAAQ,SAACM,GACjBT,EAAIU,IAAID,SAIPT,IACN,IAAIW,SAIEC,GAA6Bf,YACxCpB,IACA,SAACC,GACC,OAAAoB,YAAWpB,EAAiBqB,QAAO,SAACC,EAAKC,GAWvC,OAVAA,EAASC,KAAKC,SAAQ,SAACC,GACrB,GAAIA,EAAIC,KAAM,CACZ,IAAMQ,EAAYT,EAAIC,KAAKC,QAAO,SAACD,GAAI,OAAKA,EAAKE,QAAMC,KAAI,SAACH,GAAI,OAAKA,EAAKE,QACtE,IAAII,IAAIE,GAAWC,MAAQ,GAC7BD,EAAUV,SAAQ,SAACM,GACjBT,EAAIU,IAAID,UAKTT,IACN,IAAIW,SAGEI,GAAsBlB,YACjCD,GACAgB,IAlDgC,SAACtG,GAAK,OAAKA,EAAM0G,mBAoDjD,SAACC,EAAcC,EAAyBF,GACtC,OAAOC,EAAaX,QAAO,SAACG,GAAQ,OAAMS,EAAwBC,SAASV,IAAYO,EAAgBG,SAASV,SAGvGW,GAAwBvB,YACnCpB,IACA,SAACC,GACC,OAAOA,EAAiBqB,QAAO,SAACC,EAAKC,GACnC,OAAAoB,YAAA,GAAYrB,EAAGhG,YAAA,GAAGiG,EAASqB,aAAerB,EAASC,SAClD,OAIMqB,GAAgC1B,YAC3ClB,GACAyC,IACA,SAACxC,EAAgC4C,GAC/B,OAAOC,OAAOC,QAAQ9C,GAAgCmB,QAAO,SAACC,EAAG2B,GAAwC,IAAD/F,EAAAgG,YAAAD,EAAA,GAApCL,EAAY1F,EAAA,GAAEiG,EAAgBjG,EAAA,GAChG,OAAK4F,EAAmBF,GAGxBD,YAAA,GAAYrB,EAAGhG,YAAA,GAAGsH,EAAeE,EAAmBF,GAAchB,QAAO,SAACF,GAAG,OAAKyB,EAAiBV,SAASf,EAAI0B,WAFvG9B,IAGR,OAIM+B,GAAYlC,YACvB0B,GACA1C,IA5E2B,SAACvE,GAAK,OAAKA,EAAM0H,aA8E5CjB,GACAhC,GACAE,GACAE,GACAE,IACA,SACE4C,EACAnD,EACAoD,EACAC,EACAnD,EACAE,EACAE,EACAE,GAEA,IAAM8C,EAAY,GAElBX,OAAOC,QAAQO,GAA4B9B,SAAQ,SAAAlD,GAAA,IAAAU,EAAAiE,YAAA3E,EAAA,GAAEqE,EAAY3D,EAAA,GAAc,OAAAA,EAAA,GAAmBwC,SAAQ,SAACC,EAAKiC,GAC9G,IAAIC,EACAC,GACHnC,EAAIC,MAAQ,IAAIF,SAAQ,SAACE,EAAMmC,GAE9B,GAAKL,EAAiBhB,SAASd,EAAKE,MAApC,CAKA,IAAMkC,EAAoB,SAACC,GACzB,IAAIV,EAAaE,EAAgBS,QAAQD,GAMzC,OALoB,IAAhBV,EACFA,GAAc,IAEdA,EAAiB,IAAJK,EAAUG,EAElBR,GAGT,GAAkB,aAAd3B,EAAKE,KAAqB,CAE5B,IAAMmC,EAAS,GAAAE,OAAMxC,EAAI0B,KAAI,KAAAc,OAAIvC,EAAKwC,OAAS,IACzCb,EAAaS,EAAkBC,GACrCI,QAAQC,IAAI,UAADH,OAAWF,EAAS,MAAAE,OAAKvC,EAAK2C,IAAG,mBAAAJ,OAAkBZ,IAE9DI,EAAUa,KAAK,CACb1C,KAAM,OACN2C,OAAQ,OACRpB,KAAMY,EACNM,IAAK3C,EAAK2C,IACVG,SAAU9C,EAAK8C,UAAQ,GAAAP,OAAOvC,EAAK2C,IAAG,QACtCI,OAAQ9D,EAAY+D,YACpBC,IAAKhE,EAAYiE,SACjBC,IAAKlE,EAAYmE,SACjBC,UAAWpE,EAAYoE,UACvBC,oBAAqB7E,EAAwCwC,IAAiB,IAAIsC,iBAAmB,IAAIxD,EAAI0B,OAAS,IAAI/B,QACxH,SAACC,EAAK6D,GAEJ,OADA7D,EAAI6D,OAAkB/E,EAAwCwC,IAAiB,IAAIwC,gBAAkB,IAAI1D,EAAI0B,OAAS,IAAI+B,IAAe,IAAI3J,OFjJjH,OEkJrB8F,IACN,IACL+D,sCAAuCzE,EAAYyE,sCACnDC,WAAYtG,EACZuG,MAAOjC,EACPkC,QAAS9D,EAAI0B,KACbR,aAAcA,SAGb,GAAkB,cAAdjB,EAAKE,KAAsB,CAClC,GAAI+B,EAEF,YADAQ,QAAQqB,MAAM,+CAAgD/D,GAIhEkC,EAAiB,CACf/B,KAAM,kBACN2C,OAAQ,MACRF,IAAK3C,EAAK2C,IACVG,SAAU9C,EAAK8C,UAAQ,GAAAP,OAAOvC,EAAK2C,IAAG,QACtCgB,WAAYtG,EACZoE,KAAM1B,EAAI0B,KACVmC,MAAOxB,EAAkBrC,EAAI0B,MAC7BsB,OAAQpE,EAAUqE,YAClBe,uBAAwBpF,EAAUoF,uBAClCC,cAAerF,EAAUqF,cACzBC,4BAA6BtF,EAAUsF,4BACvCC,4BAA6BvF,EAAUuF,4BACvCC,2BAA4BxF,EAAUwF,2BACtCC,2BAA4BzF,EAAUyF,2BACtCC,kCAAmC1F,EAAU0F,kCAC7CC,kCAAmC3F,EAAU2F,kCAC7CC,uBAAwB5F,EAAU4F,uBAClCC,iBAAkB7F,EAAU6F,iBAC5BC,oBAAqB9F,EAAU8F,oBAC/BC,QAAS/F,EAAU+F,QACnBC,8BAAiEC,IAAvCjG,EAAUgG,yBAAyChG,EAAUgG,yBFxL5C,EEyL3CE,WAAYlG,EAAUmG,mBAAqB,IAAOnG,EAAUoG,oBAAsB,SAAMH,EACxFI,UAAWrG,EAAUqG,UACrBC,iBAAkBtG,EAAUsG,iBAC5BC,uBAAwBvG,EAAUwG,cAClCC,yBAA0BzG,EAAU0G,gBACpCC,WAAYjK,EAAU4E,QAAO,SAACsF,GAAK,OAAK5G,EAAU,YAAD4D,OAAagD,OAC9D1B,QAAS9D,EAAI0B,KACbR,aAAcA,QAGb,GAAkB,aAAdjB,EAAKE,KAAqB,CACjC,GAAIgC,EAEF,YADAO,QAAQqB,MAAM,8CAA+C/D,GAI/DmC,EAAgB,CACdhC,KAAM,MACN2C,OAAQ,SACRF,IAAK3C,EAAK2C,IACVgB,WAAYtG,EACZoE,KAAM1B,EAAI0B,KACVmC,MAAOxB,EAAkBrC,EAAI0B,MAC7BsB,OAAQpE,EAAUqE,YAClBa,QAAS9D,EAAI0B,KACbR,aAAcA,GAGZjB,EAAK2C,IAAI7B,SAAS,cACpBoB,EAAcrI,MAAQ,SAACO,GAYrB,OAVIA,EAAQ,GACN,mBAEGA,EAAQ,GACX,iBAGA,sBAOP,GAAI,CAAC,MAAO,OAAQ,MAAO,WAAY,cAAe,QAAS,aAAc,YAAa,SAAU,SAAS0G,SAASd,EAAKE,MAAO,CAErI,IAAMmC,EAAS,GAAAE,OAAMxC,EAAI0B,KAAI,KAAAc,OAAIvC,EAAKwC,OAAS,IACzCb,EAAaS,EAAkBC,GACrCI,QAAQC,IAAI,UAADH,OAAWF,EAAS,MAAAE,OAAKvC,EAAK2C,IAAG,MAAAJ,OAAKvC,EAAKE,KAAI,kBAAAqC,OAAiBZ,IAE3EI,EAAUa,KAAK,CACb1C,KAAM,aACN2C,OAAQ7C,EAAKE,KACbuB,KAAMY,EACNuB,MAAOjC,EACPgB,IAAK3C,EAAK2C,IACV6C,UAAWxF,EAAKwF,UAChBC,UAAWzF,EAAKyF,UAChB9B,WAAYtG,EACZyF,SAAU9C,EAAK8C,UAAQ,GAAAP,OAAOvC,EAAK2C,IAAG,QACtCI,OAAQ,MAGVN,QAAQiD,KAAK,eAAgB,CAC3BxF,KAAM,aACN2C,OAAQ7C,EAAKE,KACbuB,KAAMY,EACNuB,MAAOjC,EACPgB,IAAK3C,EAAK2C,IACV6C,UAAWxF,EAAKwF,UAChBC,UAAWzF,EAAKyF,UAChB9B,WAAYtG,EACZyF,SAAU9C,EAAK8C,UAAQ,GAAAP,OAAOvC,EAAK2C,IAAG,QACtCI,OAAQ,WAGP,IAAmB,QAAd/C,EAAKE,MAAkBF,EAAK2C,IAAI7B,SAAS,UAAYgB,EAAiBhB,SAAS,OAAQ,CAE/F,IAAMuB,EAAS,GAAAE,OAAMxC,EAAI0B,KAAI,KAAAc,OAAIvC,EAAKwC,OAAS,OACzCb,EAAaS,EAAkBC,GACrCI,QAAQC,IAAI,UAADH,OAAWF,EAAS,MAAAE,OAAKvC,EAAK2C,IAAG,mBAAAJ,OAAkBZ,IAE9DI,EAAUa,KAAK,CACb1C,KAAM,UACN2C,OAAQ,MACRF,IAAK3C,EAAK2C,IACVG,SAAU9C,EAAK8C,UAAQ,GAAAP,OAAOvC,EAAK2C,IAAG,QACtCgD,SAAS,EACTlE,KAAMY,EACNuB,MAAOjC,EACPiE,YAAa/G,EAAW+G,YACxBjC,WAAYtG,EACZwG,QAAS9D,EAAI0B,KACbR,aAAcA,SAGb,GAAkB,cAAdjB,EAAKE,MAAwBF,EAAK2C,IAAI7B,SAAS,SAAWd,EAAK2C,IAAI7B,SAAS,SAAU,CAE7F,IAAMuB,EAAS,GAAAE,OAAMxC,EAAI0B,KAAI,KAAAc,OAAIvC,EAAKwC,OAAS,OACzCb,EAAaS,EAAkBC,GACrCI,QAAQC,IAAI,UAADH,OAAWF,EAAS,MAAAE,OAAKvC,EAAK2C,IAAG,mBAAAJ,OAAkBZ,IAE9DI,EAAUa,KAAK,CACb1C,KAAM,YACNyC,IAAK3C,EAAK2C,IACVG,SAAU9C,EAAK8C,WAAa,GAAAP,OAAGvC,EAAK2C,KAAMkD,SAAS,QAAO,GAAAtD,OAAMvC,EAAK2C,IAAG,SAAU,GAAAJ,OAAGvC,EAAK2C,KAAMkD,SAAS,OAAM,GAAAtD,OAAMvC,EAAK2C,IAAG,QAAS,MACtIgD,SAAS,EACTlE,KAAMY,EACNuB,MAAOjC,EACPoB,OAAQhE,EAAWiE,YACnB0B,QAAS3F,EAAW2F,QACpBoB,YAAa/G,EAAW+G,YACxBC,cAAehH,EAAWgH,cAC1BpC,WAAYtG,EACZwG,QAAS9D,EAAI0B,KACbR,aAAcA,UA1LhBwB,QAAQC,IAAI,0BAADH,OAA2BvC,EAAK2C,SA+L3CT,GAAiBD,GACnBQ,QAAQC,IAAI,UAADH,OAAWN,EAAeR,KAAI,MAAAc,OAAKN,EAAeU,IAAG,OAAAJ,OAAML,EAAcS,IAAG,mBAAAJ,OAAkBN,EAAe2B,QACxH7B,EAAUa,KAAK,CACb1C,KAAM,SACNuB,KAAMQ,EAAeR,KACrBmC,MAAO3B,EAAe2B,MACtBb,OAAQpE,EAAUqE,YAClBgD,OAAQ,CAAC9D,EAAeD,GACxB4B,QAAS9D,EAAI0B,KACbR,aAAcA,KAEPgB,GACTQ,QAAQC,IAAI,UAADH,OAAWN,EAAeR,KAAI,MAAAc,OAAKN,EAAeU,IAAG,mBAAAJ,OAAkBN,EAAe2B,QACjG7B,EAAUa,KAAKX,IACNC,IACTO,QAAQC,IAAI,UAADH,OAAWL,EAAcT,KAAI,MAAAc,OAAKL,EAAcS,IAAG,mBAAAJ,OAAkBL,EAAc0B,QAC9F7B,EAAUa,KAAKV,UAKnB,IAEI+D,EAAwBpE,EAAgBS,QAFf,qBAwB7B,OArB+B,IAA3B2D,EACFA,GAAyB,IAEzBA,EAAwB,QAG1BlE,EAAUa,KAAK,CACbnB,KAV2B,oBAW3BoB,OAAQ,UACRF,IAAK,6EACLG,SAAU,iFACV6C,SAAS,EACTO,YAAY,EACZnD,OAAQ,IACRoD,kBAAmB,EACnBP,YAAa,WACbhC,MAAOqC,EACPpM,MAAO,kBACP8J,WAAYtG,IAGP0E,K,yZCxVX,IAAMqE,GAAuBvO,IAAOwO,KAAItO,MAKlCuO,GAAezO,YAAO0O,KAAQvN,MAAM,CAAEwN,OAAO,EAAMC,MAAM,GAA1C5O,CAAiDK,MAKhEwO,GAAiB7O,IAAOwO,KAAIhO,MAM5BsO,GAAc,SAAHrF,GAAA,IAAML,EAAYK,EAAZL,aAAc4C,EAAOvC,EAAPuC,QAAS+C,EAAMtF,EAANsF,OAAQnD,EAAcnC,EAAdmC,eAAgBoD,EAAUvF,EAAVuF,WAAYC,EAAoBxF,EAApBwF,qBAAsBC,EAAuBzF,EAAvByF,wBAAuB,OAC7HzM,IAAAC,cAAA,OAAKI,MAAO,CAAEqM,WAAY,WACxB1M,IAAAC,cAAC+L,GAAY,CAACW,QAAS,kBAAMJ,EAAW5F,EAAc4C,EAAS+C,EAAQG,KACrEzM,IAAAC,cAACnC,IAAI,CAACqJ,KAAK,YAEbnH,IAAAC,cAACmM,GAAc,KAAEE,GACjBtM,IAAAC,cAAA,QAAMI,MAAO,CAAEuM,WAAY,QACzB5M,IAAAC,cAACrB,EAAW,CACViB,IAAKsJ,EAAe5J,MACpBA,MAAO4J,EAAe5J,OH9Bc,OG+BpCE,oBAAqB,SAACoB,GAAQ,OAAK2L,EAAqB7F,EAAc4C,EAAS+C,EAAQ,CAAE/M,MAAOsB,UA8GzFgM,gBAjDS,SAAClN,GAAK,MAAM,CAClCwE,wCAAyCD,GAA2CvE,OAG3D,SAACmN,GAAQ,MAAM,CACxCC,kBAAmB,SAACC,GAClBF,EAAS,CACPlH,KAAM,sBACNqH,QAASD,KAGbE,QAAS,SAACvG,EAAc4C,GACtBuD,EAAS,CACPlH,KAAM,4BACNe,eACAO,iBAAkB,CAACqC,MAGvBgD,WAAY,SAAC5F,EAAc4C,EAAS+C,EAAQG,GACtCA,GAA2B,GAE7BK,EAAS,CACPlH,KAAM,4BACNe,eACAO,iBAAkB,CAACqC,KAIvBuD,EAAS,CACPlH,KAAM,0BACNe,eACAwG,yBAAwB9N,YAAA,GACrBkK,EAAU,CAAC+C,OAIlBE,qBAAsB,SAAC7F,EAAc4C,EAAS+C,EAAQU,GACpDF,EAAS,CACPlH,KAAM,yBACNe,eACAyG,qCAAoC/N,YAAA,GACjCkK,EAAOlK,YAAA,GACLiN,EAASU,UAOLH,EA9FW,SAAH5L,GAAgG,IAA1FkD,EAAuClD,EAAvCkD,wCAAyC+I,EAAOjM,EAAPiM,QAASX,EAAUtL,EAAVsL,WAAYC,EAAoBvL,EAApBuL,qBACnFa,EAAS,GAiCf,OAhCAvG,OAAOC,QAAQ5C,GAAyCqB,SAAQ,SAAAlD,GAAkC,IAADU,EAAAiE,YAAA3E,EAAA,GAA/BqE,EAAY3D,EAAA,GAAEsK,EAAWtK,EAAA,GACzF8D,OAAOC,QAAQuG,EAAYrE,iBAAmB,IAAIzD,SAAQ,SAAA+H,GAAiC,IAADC,EAAAvG,YAAAsG,EAAA,GAA9BhE,EAAOiE,EAAA,GAAEvE,EAAeuE,EAAA,GAClFH,EAAO/E,KACLtI,IAAAC,cAAA,OAAKJ,IAAG,GAAAoI,OAAKtB,EAAY,MAAAsB,OAAKsB,IAC5BvJ,IAAAC,cAAA,OAAKI,MAAO,CAAEqM,WAAY,SAAUe,OAAQ,qBAO1CzN,IAAAC,cAAC6L,GAAoB,QAAA7D,OAAKtB,EAAY,MAAAsB,OAAKsB,KAG3CN,EAAgBpD,KAAI,SAACyG,GAAM,OACzBtM,IAAAC,cAACoM,GAAW,CACVxM,IAAKyM,EACL3F,aAAcA,EACd4C,QAASA,EACT+C,OAAQA,EACRnD,iBAAkBmE,EAAYnE,gBAAkB,IAAII,IAAY,IAAI+C,IAAW,GAC/EY,QAASA,EACTX,WAAYA,EACZC,qBAAsBA,EACtBC,wBAAyBxD,EAAgByE,oBAQhDL,EAAOK,OAAS,EAAIL,EAAS,Q,8BC9CzBM,GAAqB,WAAiB,IAAhBhO,EAAKyC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG,GACzC,OAAOzC,GA6BIiO,GAA2B,SAACC,EAAkBC,GAAiC,IAAnBC,EAAK3L,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,IAAAA,UAAA,GACtE4L,EAAU,WAAmC,IAAlCrO,EAAKyC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG0L,EAAcG,EAAM7L,UAAAsL,OAAA,EAAAtL,UAAA,QAAAkI,EAC3C,IAAK2D,EACH,OAAOtO,EAGT,OAAQsO,EAAOrI,MACb,KAAKiI,EACH,YAAwBvD,IAApB2D,EAAOC,UACT/F,QAAQqB,MAAM,WAADvB,OAAY4F,EAAgB,2CAA2CI,GAC7EtO,IAELoO,GACF5F,QAAQC,IAAI,wCAAyC6F,EAAQ,uBAAwBtO,EAAO,OAAQsO,EAAOC,UAEtGD,EAAOC,UAEhB,QACE,OAAOvO,IAIb,OAAOqO,GA2CIG,GAA4B,SAACN,GAAwD,IAAtCC,EAAY1L,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG,GAAI2L,EAAK3L,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,IAAAA,UAAA,GAC5E4L,EAAU,WAAmC,IAAlCrO,EAAKyC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG0L,EAAcG,EAAM7L,UAAAsL,OAAA,EAAAtL,UAAA,QAAAkI,EAC3C,IAAK2D,EACH,OAAOtO,EAGT,OAAQsO,EAAOrI,MACb,KAAKiI,EACH,QAAuBvD,IAAnB2D,EAAOhB,QAET,OADA9E,QAAQqB,MAAM,WAADvB,OAAY4F,EAAgB,0CAA0CI,GAC5EtO,EAGT,IAAMyO,EAAQ1H,YAAA,GAAQ/G,EAAM,GAAIsO,EAAOhB,SAIvC,OAHIc,GACF5F,QAAQC,IAAI,yCAA0C6F,EAAQ,uBAAwBtO,EAAO,OAAQyO,GAEhGA,EAET,QACE,OAAOzO,IAIb,OAAOqO,GA6CIK,GAAqB,SAACC,GAAwD,IAAtCR,EAAY1L,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG,GAAI2L,EAAK3L,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,IAAAA,UAAA,GACrE4L,EAAU,WAAmC,IAAlCrO,EAAKyC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG0L,EAAcG,EAAM7L,UAAAsL,OAAA,EAAAtL,UAAA,QAAAkI,EAC3C,IAAK2D,EACH,OAAOtO,EAGT,OAAQsO,EAAOrI,MACb,IAAI,OAAJqC,OAAYqG,GACZ,IAAI,OAAJrG,OAAYqG,GACZ,IAAI,UAAJrG,OAAeqG,GACb,IAAKC,MAAMC,QAAQP,EAAOQ,QAExB,OADAtG,QAAQqB,MAAM,WAADvB,OAAYgG,EAAOrI,KAAI,yDAAyDqI,GACtFtO,EAGT,IAAIyO,EACJ,GAAIH,EAAOrI,OAAI,OAAAqC,OAAYqG,GACzBF,EAAQjJ,YAAO8I,EAAOQ,aACjB,GAAIR,EAAOrI,OAAI,OAAAqC,OAAYqG,GAChCF,EAAQ,GAAAnG,OAAA9C,YAAOxF,GAAKwF,YAAK8I,EAAOQ,aAC3B,CACL,IAAMC,EAAiBT,EAAOQ,OAC9BL,EAAWzO,EAAMgG,QAAO,SAACgJ,GAAC,OAAMD,EAAelI,SAASmI,MAM1D,OAHIZ,GACF5F,QAAQC,IAAI,wCAAyC6F,EAAQ,uBAAwBtO,EAAO,OAAQyO,GAE/FA,EAGT,QACE,OAAOzO,IAIb,OAAOqO,GC3NM,IACbY,ODyQsC,SAACf,EAAkBhO,GAA2C,IAAtCiO,EAAY1L,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG,GAAI2L,EAAK3L,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,IAAAA,UAAA,GAChF4L,EAAU,WAAmC,IAAlCrO,EAAKyC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG0L,EAAcG,EAAM7L,UAAAsL,OAAA,EAAAtL,UAAA,QAAAkI,EAC3C,IAAK2D,EACH,OAAOtO,EAGT,OAAQsO,EAAOrI,MACb,KAAKiI,EACH,QAA2BvD,IAAvB2D,EAAOY,YAET,OADA1G,QAAQqB,MAAM,WAADvB,OAAY4F,EAAgB,8CAA8CI,GAChFtO,EAET,IAAIsN,EAAUgB,EAAOY,YACrB,GAAIhP,EAAK,CACP,KAAMA,KAAOoN,GACX,OAAOtN,EAETsN,EAAUA,EAAQpN,GAEpB,IAAMiP,EAAWpI,YAAA,GAAQ/G,GAezB,OAdAmH,OAAOC,QAAQkG,GAASzH,SAAQ,SAAAwB,GAAgB,IAAD/F,EAAAgG,YAAAD,EAAA,GAAb+H,EAAE9N,EAAA,GAAE+N,EAAG/N,EAAA,GAC5B,MAAP+N,SAEKF,EAAYC,GACVD,EAAYC,GACrBD,EAAYC,GAAGrI,YAAA,GAAQoI,EAAYC,GAAI,GAAIC,GAE3CF,EAAYC,GAAGrI,YAAA,GAAQsI,MAIvBjB,GACF5F,QAAQC,IAAI,wCAAyC6F,EAAQ,wBAAyBtO,EAAO,OAAQmP,GAEhGA,EAET,QACE,OAAOnP,IAIb,OAAOqO,EClTCiB,CAjBiB,uBAqBdC,GAAe,SAACvP,EAAOwP,GAAS,OAAKxP,EAAMiP,OAAOO,IAAcxP,EAAMiP,OAAOO,GAAWC,M,m2BCf9F,IAAMC,GAAa9R,YAAO0O,KAAQvN,MAAM,CAAEwN,OAAO,GAA9B3O,CAAqCE,MAIhD,SAACwB,GAAK,OAAKA,EAAMqQ,SAAW,KAC9B,SAACrQ,GAAK,OAAKA,EAAMM,OAAS,aAEpB,SAACN,GAAK,OAAKA,EAAMsQ,YAAc,aAoB5CC,GAAejS,IAAOU,IAAGL,MAKzB6R,GAAelS,YAAO0O,IAAP1O,CAAcQ,MAM7B2R,GAAW,SAAAC,GAAA7Q,YAAA4Q,EAAAC,GAAA,IAAA5Q,EAAAC,YAAA0Q,GAAA,SAAAA,IAAA,IAAAxQ,EAAAC,YAAA,KAAAuQ,GAAA,QAAAE,EAAAxN,UAAAsL,OAAAmC,EAAA,IAAAtB,MAAAqB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA1N,UAAA0N,GAoBd,OApBc5Q,EAAAH,EAAAK,KAAA+C,MAAApD,EAAA,OAAAkJ,OAAA4H,IAAAxQ,YAAAC,YAAAJ,GAAA,eAED,WACZ,IAAI6Q,GAAU,EACV7Q,EAAKD,MAAM+Q,cACbD,EAAU7Q,EAAKD,MAAM+Q,eAEnBD,GACF7Q,EAAKD,MAAMgR,WAEd5Q,YAAAC,YAAAJ,GAAA,cAEY,WACX,IAAI6Q,GAAU,EACV7Q,EAAKD,MAAMiR,aACbH,EAAU7Q,EAAKD,MAAMiR,cAEnBH,GACF7Q,EAAKD,MAAMgR,WAEd/Q,EAmBA,OAnBAU,YAAA8P,EAAA,EAAA7P,IAAA,SAAAC,MAAA,WAGC,IAAMM,EAAUG,KAAKtB,MAAMmB,QAAUJ,IAAMmQ,aAAa5P,KAAKtB,MAAMmB,QAAS,CAAEuM,QAASpM,KAAKtB,MAAMmQ,OAAU,KAC5G,OACEpP,IAAAC,cAACmQ,KAAK,CAAChB,KAAM7O,KAAKtB,MAAMoR,OAAQjQ,QAASA,EAASkQ,QAAS/P,KAAKyP,YAAa7J,KAAM5F,KAAKtB,MAAMkH,MAC5FnG,IAAAC,cAACmQ,KAAMG,OAAM,KACVhQ,KAAKtB,MAAMuR,MACZxQ,IAAAC,cAACoP,GAAU,CAACoB,QAAQ,QAAQ9D,QAASpM,KAAKyP,YAAa7D,KAAMnM,IAAAC,cAACnC,IAAI,CAACqJ,KAAK,SAAS5H,MAAM,YAEzFS,IAAAC,cAACmQ,KAAMM,QAAO,KACXnQ,KAAKtB,MAAM0R,UAEd3Q,IAAAC,cAACuP,GAAY,KACXxP,IAAAC,cAACwP,GAAY,CAACmB,SAAU,EAAGjE,QAASpM,KAAKyP,YAAapK,KAAK,UAAS,UACpE5F,IAAAC,cAACwP,GAAY,CAACmB,SAAU,EAAGjE,QAASpM,KAAK2P,WAAYtK,KAAK,SAASrG,MAAM,QAASgB,KAAKtB,MAAMiR,WAAa,OAAS,YAI1HR,EAvCc,CAAS1P,IAAM6Q,eA0ChCnB,GAAYoB,aAAe,CACzB3K,KAAM,SAgBR,IAgBe0G,gBAhBS,SAAClN,EAAOoR,GAAQ,MAAM,CAC5CV,OAAQnB,GAAavP,EAAOoR,EAAS5B,eAGZ,SAACrC,EAAUiE,GACpC,MAAO,CACL3B,KAAM,SAAC4B,GD1Gc,IAAC7B,EC2GpB6B,EAAEC,iBACFnE,GD5GoBqC,EC4GD4B,EAAS5B,UD5GM,SAACrC,GAAQ,OAC/CA,EAAS,CAAElH,KAJc,qBAIYiJ,YAAWxP,YAAA,GAAK8P,EAAY,CAAEC,MAAM,UC6GvEa,MAAO,WD1Ge,IAACd,EAAW+B,EC2GhCpE,GD3GqBqC,EC2GD4B,EAAS5B,UD3GG+B,GC2GQ,ED3GM,SAACpE,EAAUqE,GACzDA,IAAWvC,OAAOO,GAAWiC,iBAAmBF,EAClDpE,EAAS,CAAElH,KATY,qBASciJ,YAAWxP,YAAA,GAAK8P,EAAY,CAAEkC,YAAY,MAE/EvE,EAAS,CAAElH,KAXY,qBAWciJ,YAAWxP,YAAA,GAAK8P,EAAY,CAAEC,MAAM,EAAOiC,YAAY,EAAOD,eAAgB,gBC4GxGvE,CAA6C6C,I,6FClH5D,IAAM4B,GAAa/T,IAAOgU,EAAC9T,MAIrB+T,GAA2B,SAAA7B,GAAA7Q,YAAA0S,EAAA7B,GAAA,IAAA5Q,EAAAC,YAAAwS,GAE/B,SAAAA,EAAYvS,GAAQ,IAADC,EAAAC,YAAA,KAAAqS,GACjBtS,EAAAH,EAAAK,KAAA,KAAMH,GAAMI,YAAAC,YAAAJ,GAAA,UASL,WAAO,IAADuS,EAKTvS,EAAKD,MAHPyS,EAASD,EAATC,UACAvK,EAAIsK,EAAJtK,KACAwK,EAAYF,EAAZE,aAGInB,EAAK,gBAAAvI,OAAmBd,GAE9B,OACEnH,IAAAC,cAACmQ,GAAK,CACJI,MAAOA,EACPrK,KAAK,QACLgJ,UAAWqB,EACXpQ,QACEJ,IAAAC,cAACqR,GAAU,MAENI,GAAa,IAAIhE,OAAS,EACvB1N,IAAAC,cAAA,WAAKD,IAAAC,cAAA,WAAM,mBACXD,IAAAC,cAAA,WAAK,+BAIfiQ,WAAY,WACV,IAAM0B,EAAe1S,EAAK2S,cAAcC,MAAM,UAAUnM,OAAOoM,SAG/D,OAFAJ,EAAaC,IAEN,IAGT5R,IAAAC,cAAC+R,KAAI,KACHhS,IAAAC,cAAC+R,KAAKC,MAAK,CACTC,QAASC,KACT9R,MAAO,CAAE+R,UAAW,SACpBC,aAAcnT,EAAK2S,cACnBS,QAAS,SAACtB,GAAQ9R,EAAK2S,cAAgBb,EAAEuB,OAAOzS,OAChD0S,YAAY,6OAKhBxS,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,SAAG,UAAa,6NAIxB,IApDGyR,EACExS,EAAKD,MADPyS,UAGgD,OAAlDxS,EAAK2S,eAAiBH,GAAa,IAAIe,KAAK,MAAMvT,EACnD,OAAAsS,EAV8B,CAASxR,IAAM6Q,eAmFjC6B,GAhBO,SAAH1L,GAAA,IAAMG,EAAIH,EAAJG,KAAMuK,EAAS1K,EAAT0K,UAAWiB,EAAQ3L,EAAR2L,SAAUhB,EAAY3K,EAAZ2K,aAAY,OAC9D3R,IAAAC,cAAA,WAEIyR,EAAU7L,KAAI,SAACtC,EAAOmE,GAAC,OAAK1H,IAAAC,cAAA,OAAKJ,IAAG,GAAAoI,OAAK1E,EAAK,KAAA0E,OAAIP,IAAMA,EAAI,EAAE,UAAS1H,IAAAC,cAACqR,GAAU,CAAC3E,QAAS,WAAQgG,EAASpP,KAAWA,OAE1HvD,IAAAC,cAACuR,GAA2B,CAACrK,KAAMA,EAAMuK,UAAWA,EAAWC,aAAcA,M,8iBCvEjF,IAAML,GAAa/T,IAAOgU,EAAC9T,MAMrBmV,GAAarV,IAAOU,IAAGL,MAQvBiV,GAActV,IAAOwO,KAAIhO,MAKzBL,GAAcH,YAAOI,KAAOe,MAAM,CAAEyB,SAAU,gBAAhC5C,CAAiDW,MAGxD4U,GAA4B,CACvC,UAAW,WACX,MAAO,WACP,iBAAkB,YAClB,uBAAwB,YACxB,oBAAqB,YACrB,0BAA2B,YAE3B,OAAQ,MACR,QAAS,MAET,OAAQ,MACR,UAAW,MAEX,OAAQ,MACR,YAAa,MAEb,YAAa,WACb,eAAgB,WAEhB,OAAQ,MACR,UAAW,MACX,QAAS,MACT,OAAQ,MACR,UAAW,MACX,YAAa,WACb,UAAW,UAIPC,GAAqB,SAAApD,GAAA7Q,YAAAiU,EAAApD,GAAA,IAAA5Q,EAAAC,YAAA+T,GAUzB,SAAAA,EAAY9T,GAAQ,IAADC,EAGkB,OAHlBC,YAAA,KAAA4T,GACjB7T,EAAAH,EAAAK,KAAA,KAAMH,GAAMI,YAAAC,YAAAJ,GAAA,mBATI,WAChB,MAAO,CACL2S,cAAe,GACfmB,eAAgB,KAChBC,aAAc,SAEjB5T,YAAAC,YAAAJ,GAAA,4BAQ0B,SAAC2S,GAC1B,IAAKA,EAAcqB,OACjB,MAAO,CAAE3N,KAAM,GAAI0N,aAAc,MAGnC,IAAIA,EAAe,KACbE,EAAe,GAGfC,EAFYvB,EAAcC,MAAM,UAAUnM,OAAOoM,SAEpB3M,QAAO,SAACC,EAAKgO,GAC9C,IAAMC,EAAaD,EAASvB,MAAM,KAC5ByB,EAAWD,EAAWA,EAAW5F,OAAS,GAC1C8F,EAAqB1M,OAAO2M,KAAKX,IAA2BnN,QAAO,SAAC+N,GAAG,OAAKH,EAAShI,SAASmI,MACpG,GAAkC,IAA9BF,EAAmB9F,OACrByF,EAAa7K,KAAK+K,OACb,CACL,IAAMK,EAAMF,EAAmB,GACzBG,EAAaJ,EAASK,QAAQF,EAAK,IACpCrO,EAAIsO,KACPtO,EAAIsO,GAAc,CAAEjO,KAAM,KAG5BL,EAAIsO,GAAYxM,KAAOwM,EACvBtO,EAAIsO,GAAYjO,KAAK4C,KACnB,CAAE1C,KAAMkN,GAA0BY,GAAMrL,IAAKgL,IAGjD,OAAOhO,IACN,IAMH,OAJI8N,EAAazF,OAAS,IACxBuF,EAAY,2DAAAhL,OAA8DkL,EAAaV,KAAK,QAGvF,CAAEoB,QAAS/M,OAAO2H,OAAO2E,GAAmBH,mBACpD5T,YAAAC,YAAAJ,GAAA,mBAEiB,WAAO,IAErB4U,EACE5U,EAAKD,MADP6U,QAIAjC,EACE3S,EAAKS,MADPkS,cAAakC,EAGmB7U,EAAK8U,yBAAyBnC,GAAxDgC,EAAOE,EAAPF,QAASZ,EAAYc,EAAZd,aACjB,OAAIA,GACF/T,EAAKM,SAAS,CAAEyT,aAAcA,KACvB,IAEPa,EAAQD,GACR3U,EAAKM,SAASN,EAAK+U,oBACZ,MAEV5U,YAAAC,YAAAJ,GAAA,oBAEkB,WAEjB,OADAA,EAAKM,SAASN,EAAK+U,oBACZ,KACR5U,YAAAC,YAAAJ,GAAA,UAEQ,WAAO,IAADuS,EAITvS,EAAKD,MAFPuR,EAAKiB,EAALjB,MACApQ,EAAOqR,EAAPrR,QAAO8T,EAOLhV,EAAKS,MAHPkS,EAAaqC,EAAbrC,cACAmB,EAAckB,EAAdlB,eACAC,EAAYiB,EAAZjB,aAGIkB,EAAS,GAAAlM,OAAMuI,EAAK,SAE1B,OACExQ,IAAAC,cAACmQ,GAAK,CACJI,MAAO2D,EACPhO,KAAK,QACLgJ,UAAWgF,EACX/T,QAASA,EACT8P,WAAYhR,EAAKkV,gBACjBpE,YAAa9Q,EAAKmV,kBAElBrU,IAAAC,cAAA,WAAK,mDAEHD,IAAAC,cAACvC,GAAW,CAAC0C,QAASJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEoN,OAAQ,YAActG,KAAK,4BAA8B3G,QAC5FR,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,UAAU,IAACD,IAAAC,cAAA,WACdD,IAAAC,cAAA,WAAM,6EACoED,IAAAC,cAAA,WAC1ED,IAAAC,cAAA,WAAM,WACED,IAAAC,cAAA,WACRD,IAAAC,cAAC2S,GAAU,KAAC,4CAC+B5S,IAAAC,cAAA,WAAM,uCACXD,IAAAC,cAAA,WAAM,sDACSD,IAAAC,cAAA,WAAM,yCACnBD,IAAAC,cAAA,WAAM,iDACED,IAAAC,cAAA,YACnC,wCACwBD,IAAAC,cAAC4S,GAAW,KAAC,qCAA+C,4EAAyE7S,IAAAC,cAAA,WAAM,qCACzID,IAAAC,cAAA,WACvCD,IAAAC,cAAA,WAAM,uEAC8DD,IAAAC,cAAA,WACpED,IAAAC,cAAA,OAAKI,MAAO,CAAEoN,OAAQ,cACpBzN,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UAAID,IAAAC,cAAA,UAAI,IAACD,IAAAC,cAAA,SAAG,oBAAoB,KAAMD,IAAAC,cAAA,UAAI,IAACD,IAAAC,cAAA,SAAG,qBAAqB,MAClE6G,OAAOC,QAAQ+L,IAA2BnN,QAAO,SAAAqB,GAAK,OAALC,YAAAD,EAAA,GAAK,GAAWuE,SAAS,WAAS1F,KAClF,SAAAvD,EAAkBoF,GAAC,IAAA1E,EAAAiE,YAAA3E,EAAA,GAAjBoR,EAAG1Q,EAAA,GAAEsR,EAAQtR,EAAA,UAAShD,IAAAC,cAAA,MAAIJ,IAAG,GAAAoI,OAAKyL,EAAG,KAAAzL,OAAIqM,EAAQ,KAAArM,OAAIP,IAAK1H,IAAAC,cAAA,UAAKyT,GAAS1T,IAAAC,cAAA,UAAKqU,aAQ3FtU,IAAAC,cAAA,YAEFD,IAAAC,cAAC+R,KAAI,KACHhS,IAAAC,cAACkS,KAAQ,CACP9R,MAAO,CAAE+R,UAAW,SACpBtS,MAAO+R,EACPjR,SAAU,SAACoQ,GACT9R,EAAKM,SAAS,CAAEqS,cAAeb,EAAEuB,OAAOzS,SAE1C0S,YAAY,wBAKhBxS,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,SAAG,UAAa,8LAEjB+S,GACAhT,IAAAC,cAACsU,KAAO,CAAChV,MAAM,UACZyT,GAIHC,GACAjT,IAAAC,cAACsU,KAAO,CAAChV,MAAM,OACZ0T,OAlJT/T,EAAKS,MAAQT,EAAK+U,kBAAiB/U,EACpC,OAAA6T,EAdwB,CAAS/S,IAAM6Q,eAuM3BhE,eAAQ,MAVI,SAACC,GAAQ,MAAM,CACxCgH,QAAS,SAACnN,EAAcpB,GACtBuH,EAAS,CACPlH,KAAM,WACNe,aAAcA,EACdpB,KAAMA,QAKGsH,EA1BC,SAAHU,GAAA,IAAMjI,EAAQiI,EAARjI,SAAUwO,EAAOvG,EAAPuG,QAAO,OAClC9T,IAAAC,cAAA,WACED,IAAAC,cAAC8S,GAAqB,CACpBvC,MAAK,OAAAvI,OAAS3C,EAASqB,cACvBA,aAAcrB,EAASqB,aACvBmN,QAAS,SAACvO,GAAI,OAAKuO,EAAQxO,EAASqB,aAAcpB,IAClDnF,QAASJ,IAAAC,cAACqR,GAAU,KAAC,OAA8B,IAAzBhM,EAASC,KAAKmI,OAAepI,EAASqB,aAAe,KAAK,e,+uBCrO1F,IAAM6N,GAAuBjX,IAAOU,IAAGR,MAIjCgX,GAAelX,YAAOmX,KAAPnX,CAAcK,MA+B7B+W,GAAgB,CAAEC,WAAW,EAAOC,QAAS,GAAI/U,MAAO,IAExDgV,GAAU,SAAAjW,GAAAC,YAAAgW,EAAAjW,GAAA,IAAAE,EAAAC,YAAA8V,GAEd,SAAAA,IAAe,IAAD5V,EAEc,OAFdC,YAAA,KAAA2V,GACZ5V,EAAAH,EAAAK,KAAA,MAAOC,YAAAC,YAAAJ,GAAA,sBAIY,SAAC8R,EAAChK,GAAkB,IAAdqG,EAAMrG,EAANqG,OACzBnO,EAAKM,SAAS,CAAEM,MAAO,KAEvB,IAAMiV,EAAW1H,EAAO0B,GAAG+C,MAAM,MAC3B7D,EAAS8G,EAAS,GAClBpO,EAAeoO,EAAS,GACxBxL,EAAUwL,EAAS,GACnB7L,EAAa6L,EAAS,GAExB7L,IACa,QAAX+E,GAEO/O,EAAK8V,yBAAyBrO,EAAc4C,GAASmE,QAAU,IADxExO,EAAKD,MAAMgW,uBAAuBhH,EAAQtH,EAAc,CAAC4C,IAI3DrK,EAAKD,MAAMiW,sBAAsBjH,EAAQtH,EAAYtH,YAAA,GAAKkK,EAAU,CAACL,MAErEhK,EAAKD,MAAMgW,uBAAuBhH,EAAQtH,EAAc,CAAC4C,OAE5DlK,YAAAC,YAAAJ,GAAA,uBAEqB,SAACyH,GAAY,OAAMzH,EAAKD,MAAMgF,+BAA+B0C,IAAiB,MAAGtH,YAAAC,YAAAJ,GAAA,iBAEvF,SAACyH,EAAc4C,GAAO,OAAKrK,EAAKiW,oBAAoBxO,GAAcH,SAAS+C,MAAQlK,YAAAC,YAAAJ,GAAA,+BAErE,SAACyH,GAAY,OAAOzH,EAAKD,MAAMkF,wCAAwCwC,IAAiB,IAAIsC,iBAAmB,MAAG5J,YAAAC,YAAAJ,GAAA,4BAErH,SAACyH,EAAc4C,GAAO,OAAMrK,EAAKkW,4BAA4BzO,GAAc4C,IAAY,MAAGlK,YAAAC,YAAAJ,GAAA,oBAElG,SAACyH,EAAc4C,EAAS+C,GAAM,OAAKpN,EAAK8V,yBAAyBrO,EAAc4C,GAAS/C,SAAS8F,MAAOjN,YAAAC,YAAAJ,GAAA,iBAE3G,SAACmW,EAAuBC,GActC,OAbAxO,OAAO2M,KAAKvU,EAAKD,MAAMgF,gCAAgCuB,SAAQ,SAACmB,GAC1D2O,GA3CuB,IA4C3BpW,EAAKD,MAAMgF,+BAA+B0C,GAAcnB,SAAQ,SAAC+D,GAC/D,KAAI+L,GA7CqB,IA6CzB,CACAD,EAAsB1O,GAAgB0O,EAAsB1O,IAAiB,GAC7E,IAAM4O,EAAY,CAAEtH,OAAQ,SAAUtH,eAAc4C,WAC/CiM,KAAEC,KAAKJ,EAAsB1O,GAAe4O,KAC/CF,EAAsB1O,GAAc2B,KAAKiN,GACzCD,GAAkB,UAKjBA,KACRjW,YAAAC,YAAAJ,GAAA,oBAEkB,SAACmW,EAAuBC,GAiBzC,OAhBAxO,OAAO2M,KAAKvU,EAAKD,MAAMkF,yCAAyCqB,SAAQ,SAACmB,GACnE2O,GA5DuB,IA6D3BxO,OAAO2M,KAAKvU,EAAKkW,4BAA4BzO,IAAenB,SAAQ,SAAC+D,GAC/D+L,GA9DqB,KA8D0BpW,EAAKwW,cAAc/O,EAAc4C,IACpFrK,EAAK8V,yBAAyBrO,EAAc4C,GAAS/D,SAAQ,SAAC8G,GAC5D,KAAIgJ,GAhEmB,IAgEvB,CACAD,EAAsB1O,GAAgB0O,EAAsB1O,IAAiB,GAC7E,IAAM4O,EAAY,CAAEtH,OAAQ,SAAUtH,eAAc4C,UAAS+C,UACxDkJ,KAAEC,KAAKJ,EAAsB1O,GAAe4O,KAC/CF,EAAsB1O,GAAc2B,KAAKiN,GACzCD,GAAkB,aAMnBA,KACRjW,YAAAC,YAAAJ,GAAA,6BAE2B,SAACyH,EAAclB,EAAKkQ,EAAmBN,EAAuBC,GACxF,IAAK7P,EAAIC,KACP,OAAO4P,EAGT,IAAMM,EAAuBnQ,EAAIC,KAAKC,QAAO,SAACD,GAAI,OAAKA,EAAKmQ,SAAWnQ,EAAKmQ,QAAQnI,OAAS,KAyB7F,OAxBIkI,EAAqBlI,OAAS,GAChCvF,QAAQiD,KAAK,qIAIfwK,EAAqBpQ,SAAQ,SAACE,IAC3BA,EAAKmQ,SAAW,IAAIrQ,SAAQ,SAAC8G,GAC5B,KAAIgJ,GA3FqB,KA4FrBK,EAAkBG,KAAKxJ,GAAS,CAClC+I,EAAsB1O,GAAgB0O,EAAsB1O,IAAiB,GAC7E,IAAM4O,EAAY,CAChBtH,OAAQ/O,EAAKwW,cAAc/O,EAAclB,EAAI0B,OAASjI,EAAK6W,iBAAiBpP,EAAclB,EAAI0B,KAAMmF,GAAU,SAAW,MACzH3F,eACA4C,QAAS9D,EAAI0B,KACbmF,UAEGkJ,KAAEC,KAAKJ,EAAsB1O,GAAe4O,KAC/CF,EAAsB1O,GAAc2B,KAAKiN,GACzCD,GAAkB,UAMnBA,KACRjW,YAAAC,YAAAJ,GAAA,6BAE2B,SAACyW,EAAmBN,EAAuBC,GACrE,IAAMU,EAA6B,GAqCnC,OApCA9W,EAAKD,MAAM8E,iBAAiByB,SAAQ,SAACF,GACnC,KAAIgQ,GAlHuB,IAkH3B,CAAsD,IAC9C3O,EAAiBrB,EAAjBqB,aACRrB,EAASC,KAAKC,SAAQ,SAACC,GACrB,KAAI6P,GArHqB,IAqHzB,CAEA,GAAIK,EAAkBG,KAAKrQ,EAAI0B,MAAO,CACpC6O,EAA2BrP,GAAgBqP,EAA2BrP,IAAiB,GACvFqP,EAA2BrP,GAAc2B,KAAK7C,GAE9C4P,EAAsB1O,GAAgB0O,EAAsB1O,IAAiB,GAC7E,IAAM4O,EAAY,CAChBtH,OAAQ/O,EAAKwW,cAAc/O,EAAclB,EAAI0B,MAAQ,SAAW,MAChER,eACA4C,QAAS9D,EAAI0B,MAEVqO,KAAEC,KAAKJ,EAAsB1O,GAAe4O,KAC/CF,EAAsB1O,GAAc2B,KAAKiN,GACzCD,GAAkB,GAItBA,EAAiBpW,EAAK+W,0BAA0BtP,EAAclB,EAAKkQ,EAAmBN,EAAuBC,WAKjHxO,OAAOC,QAAQiP,GAA4BxQ,SAAQ,SAAAvE,GAA2B,IAADqB,EAAA2E,YAAAhG,EAAA,GAAxB0F,EAAYrE,EAAA,GAAEiD,EAAIjD,EAAA,GACjEgT,GA7IuB,KA8I3BD,EAAsB1O,GAAgB0O,EAAsB1O,IAAiB,GAC7EpB,EAAKC,SAAQ,SAACC,GACR6P,GAhJqB,KAiJzBA,EAAiBpW,EAAK+W,0BAA0BtP,EAAclB,EAAK,KAAM4P,EAAuBC,WAI7FA,KACRjW,YAAAC,YAAAJ,GAAA,sBAEoB,SAAC8R,EAAChO,GAAiB,IAAblD,EAAKkD,EAALlD,MACzBZ,EAAKM,SAAS,CAAEoV,WAAW,EAAM9U,UAEjCoW,YAAW,WACT,GAAIhX,EAAKS,MAAMG,MAAM4N,OAAS,EAC5B,OAAOxO,EAAKM,SAASmV,IAGvB,IAAMgB,EAAoB,IAAIQ,OAAOX,KAAEY,aAAalX,EAAKS,MAAMG,OAAQ,KAEjEuV,EAAwB,GAC1BC,EAAiB,EAGjBK,EAAkBG,KAAK,UACzBR,EAAiBpW,EAAKmX,cAAchB,EAAuBC,KAGzDK,EAAkBG,KAAK,SAAWH,EAAkBG,KAAK,kBAE3DR,EAAiBpW,EAAKoX,iBAAiBjB,EAAuBC,IAIhEpW,EAAKqX,0BAA0BZ,EAAmBN,EAAuBC,GAEzE,IAAMkB,EAAgBtX,EAAKD,MAAM8E,iBAAiB2J,OAAS,EACrDmH,EAAU2B,EAAgB,GAAK,GAyBrC,OAxBA1P,OAAO2M,KAAK4B,GAAuB7P,SAAQ,SAACmB,GACtC6P,IACF3B,EAAQlO,GAAgB,CAAEQ,KAAMR,EAAckO,QAAS,KAEzD,IAAM4B,EAAeD,EAAgB3B,EAAQlO,GAAckO,QAAUA,EACrEQ,EAAsB1O,GAAcnB,SAAQ,SAACkR,GAC3C,GAAIA,EAAKpK,OAAQ,CACf,IAAMqK,EAA8B,QAAhBD,EAAKzI,OAAmB,cAAgB,cAC5DwI,EAAanO,KAAK,CAChByG,GAAG,GAAD9G,OAAKyO,EAAKzI,OAAM,MAAAhG,OAAKtB,EAAY,MAAAsB,OAAKyO,EAAKnN,QAAO,MAAAtB,OAAKyO,EAAKpK,QAC9DkE,MAAM,GAADvI,OAAK0O,EAAW,KAAA1O,OAAIyO,EAAKnN,QAAO,OAAAtB,OAAMyO,EAAKpK,QAChDsK,UAA2B,QAAhBF,EAAKzI,OAAmB,WAAa,WAE7C,CACL,IAAM0I,EAA8B,QAAhBD,EAAKzI,OAAmB,OAAS,OACrDwI,EAAanO,KAAK,CAChByG,GAAG,GAAD9G,OAAKyO,EAAKzI,OAAM,MAAAhG,OAAKtB,EAAY,MAAAsB,OAAKyO,EAAKnN,SAC7CiH,MAAM,GAADvI,OAAK0O,EAAW,KAAA1O,OAAIyO,EAAKnN,SAC9BqN,UAA2B,QAAhBF,EAAKzI,OAAmB,WAAa,cAMjD/O,EAAKM,SAAS,CACnBoV,WAAW,EACXC,cAED,MACJxV,YAAAC,YAAAJ,GAAA,UAEQ,WAAO,IAADgV,EACyBhV,EAAKS,MAAnCiV,EAASV,EAATU,UAAW9U,EAAKoU,EAALpU,MAAO+U,EAAOX,EAAPW,QAE1B,OACE7U,IAAAC,cAACuU,GAAoB,KACnBxU,IAAAC,cAAC3C,EAAU,KAAC,eACZ0C,IAAAC,cAACwU,GAAY,CACXnP,SAAUpG,EAAKD,MAAM8E,iBAAiB2J,OAAS,EAC/CmJ,QAASjC,EACTkC,eAAgB5X,EAAK6X,mBACrBC,QAAS9X,EAAK+X,mBACdC,eAAgBhY,EAAK+X,mBACrBzE,YAAY,cACZqC,QAASA,EACT/U,MAAOA,QA1NbZ,EAAKS,MAAQgV,GAAazV,EAC3B,OAAA4V,EALa,CAAS9U,IAAMc,WAqQhB+L,gBAzBS,SAAClN,GAAK,MAAM,CAClCoE,iBAAkBD,GAAoBnE,GACtCsE,+BAAgCD,GAAkCrE,GAClEwE,wCAAyCD,GAA2CvE,OAG3D,SAACmN,GAAQ,MAAM,CACxCmI,uBAAwB,SAACkC,EAAYxQ,EAAcO,GACjD4F,EAAS,CACPlH,KAAK,GAADqC,OAAKkP,EAAU,uBACnBxQ,eACAO,sBAIJgO,sBAAuB,SAACiC,EAAYxQ,EAAcwG,GAChDL,EAAS,CACPlH,KAAK,GAADqC,OAAKkP,EAAU,qBACnBxQ,eACAwG,iCAMSN,CAA6CiI,I,wwBChS5D,IAAMsC,GAAkB7Z,IAAOU,IAAGR,MAO5B4Z,GAAe9Z,IAAOU,IAAIS,MAAM,CAAEyI,KAAM,QAAzB5J,CAAkCK,MAC5C,SAACqB,GAAK,OAAKA,EAAMM,SACN,SAACN,GAAK,OAAKA,EAAMM,SACjB,SAACN,GAAK,OAAKA,EAAMM,SAQjC+X,GAAqB,CACzBC,UAAW,UACXC,SAAU,UACVC,UAAW,UACXC,IAAK,UACLC,SAAU,UACVC,QAAS,WAGLC,GAAiB,CACrBL,SAAU,WACVD,UAAW,mBACXG,IAAK,iBACLC,SAAU,OACVF,UAAW,cACXK,IAAK,oBACLC,KAAM,qBACNC,IAAK,oBACLC,SAAU,yBACVC,OAAQ,wBAGJ5G,GAAa/T,IAAOgU,EAACxT,MAMrBoa,GAA0B5a,IAAOwO,KAAI7N,MAKrCka,GAAY7a,IAAOU,IAAGG,MAWtBia,GAAsB,SAAHrR,GAA8E,IAAxET,EAAuBS,EAAvBT,wBAAyBiB,EAAgBR,EAAhBQ,iBAAkB8Q,EAAqBtR,EAArBsR,sBACxE,GAAI/R,EAAwBmH,OAAS,EACnC,OAAO,KAET,IAAM6K,EAAapT,YAAIoB,GAAyBV,KAAI,SAACC,EAAU4B,GAC7D,IAAMQ,EAAQ2P,GAAe/R,IAAcA,EAAS0S,OAAO,GAAGC,cAAgB3S,EAAS4S,MAAM,GAC7F,OACE1Y,IAAAC,cAACjC,EAAS,CAAC6B,IAAG,GAAAoI,OAAKnC,EAAQ,KAAAmC,OAAIP,IAC7B1H,IAAAC,cAAC0Y,IAAQ,CAACzQ,MAAK,GAAAD,OAAKC,EAAM0Q,kBAAoBC,QAASrR,EAAiBhB,SAASV,GAAWlF,SAAU,SAACoQ,EAAGtL,GAAI,OAAK4S,EAAsB5S,EAAKmT,QAAU,MAAQ,SAAU,CAAC/S,OAC3K9F,IAAAC,cAACkY,GAAuB,KAACnY,IAAAC,cAACtC,IAAK,CAAC6C,QAAO,oCAAAyH,OAAsCC,EAAM4Q,cAAa,wDAAA7Q,OAAuDC,EAAM4Q,cAAa,wCAAwC3Y,SAAS,eAAeC,QAASJ,IAAAC,cAACoX,GAAY,CAAC9X,MAAO+X,GAAmBxR,IAAawR,GAAmBM,iBAIjU,OACE5X,IAAAC,cAAA,WACED,IAAAC,cAAC3C,EAAU,KAAC,oBACXib,IAWDQ,GAA0B,SAAH9X,GAAiB,IAAXwE,EAAGxE,EAAHwE,IAMjC,OAAQzF,IAAAC,cAACtC,IAAK,CACZgB,SAAO,EACP6B,QACER,IAAAC,cAAA,aACED,IAAAC,cAAA,cAEKwF,EAAIC,MAAQ,IAAIG,KAAI,SAACmT,EAAGtR,GAAC,OACxB1H,IAAAC,cAAA,MAAIJ,IAAG,GAAAoI,OAAK+Q,EAAE3Q,IAAG,KAAAJ,OAAI+Q,EAAEpT,KAAI,KAAAqC,OAAIP,IAC7B1H,IAAAC,cAAA,MAAII,MAAO,CAAE4Y,aAAc,SACzBjZ,IAAAC,cAAA,SAAI+Y,EAAEpT,OAASiS,GAAemB,EAAEpT,OAASoT,EAAEpT,KAAK6S,eAAe,MAEjEzY,IAAAC,cAAA,UACED,IAAAC,cAACmY,GAAS,KAAEY,EAAE3Q,MAEhBrI,IAAAC,cAAA,MAAII,MAAO,CAAEd,MAAO,OAAQmN,WAAY,SAAUwM,YAAa,SAC5DF,EAAEnD,QAAO,IAAA5N,OAAO+Q,EAAEnD,QAAQnI,OAAM,aAAc,UAKvD1N,IAAAC,cAAA,UAAID,IAAAC,cAAA,MAAIkZ,QAAS,GAAGnZ,IAAAC,cAAA,OAAKI,MAAO,CAAE+Y,SAAU,QAAS7Z,MAAO,OAAQ8Z,UAAW,SAAU,6BAI/FlZ,SAAS,eACTC,QACEJ,IAAAC,cAACkY,GAAuB,CAACxL,QA/BC,WAC5B,IAAM2M,GAAK7T,EAAIC,MAAQ,IAAIG,KAAI,SAACmT,GAAC,OAAKA,EAAE3Q,OAAKoK,KAAK,MAClD8G,UAAUC,UAAUC,UAAUH,MA+BvB7T,EAAIC,MAAQ,IAAIG,KAAI,SAACmT,EAAGtR,GAAC,OAAK1H,IAAAC,cAACoX,GAAY,CAACxX,IAAG,GAAAoI,OAAK+Q,EAAE3Q,IAAG,KAAAJ,OAAI+Q,EAAEpT,KAAI,KAAAqC,OAAIP,GAAKnI,MAAO+X,GAAmB0B,EAAEpT,OAAS0R,GAAmBM,cAI3IvX,MAAO,CAAEuM,WAAY,UAQnB8M,GAAgB,SAAHpX,GAAA,IAAMgD,EAAQhD,EAARgD,SAAU2P,EAAsB3S,EAAtB2S,uBAAsB,OACvDjV,IAAAC,cAAA,WACED,IAAAC,cAAC3C,EAAU,KAAEgI,EAASqB,cAEpBrB,EAASC,KAAKmI,QAAU,IAAM1N,IAAAC,cAACmX,GAAe,WAAAnP,OAAQ3C,EAASC,KAAKmI,OAAM,OAG1EpI,EAASC,KAAKmI,OAAS,GACvB1N,IAAAC,cAAA,WACED,IAAAC,cAACqR,GAAU,CAAC3E,QACV,SAACqE,GACCA,EAAEC,iBACFgE,EAAuB,MAAO3P,EAASqB,aAAc,MAGxD,kBAYHgT,GAAY,SAAH3W,GAAA,IAAMe,EAAgBf,EAAhBe,iBAAkBE,EAA8BjB,EAA9BiB,+BAAgCgR,EAAsBjS,EAAtBiS,uBAAsB,OAC3FlR,EAAiB8B,KAAI,SAACP,EAAUoC,GAAC,OAC/B1H,IAAAC,cAAA,OAAKJ,IAAG,GAAAoI,OAAK3C,EAASqB,aAAY,KAAAsB,OAAIP,IACpC1H,IAAAC,cAACyZ,GAAa,CAACpU,SAAUA,EAAU2P,uBAAwBA,IAEzD3P,EAASC,KAAKM,KAAI,SAACJ,EAAKoC,GACtB,IAAMX,EAAmBjD,EAA+BqB,EAASqB,eAAiB,GAClF,OAAO3G,IAAAC,cAAC2Z,GAAQ,CAAC/Z,IAAG,GAAAoI,OAAKxC,EAAI0B,KAAI,KAAAc,OAAIJ,GAAKpC,IAAKA,EAAKkB,aAAcrB,EAASqB,aAAcO,iBAAkBA,EAAkB+N,uBAAwBA,OAGvJvN,IAAM3D,EAAiB2J,OAAS,EAAI1N,IAAAC,cAAC4Z,GAAO,CAACvU,SAAUA,IAAe,UAWxEsU,GAAW,SAAHrM,GAAA,IAAM9H,EAAG8H,EAAH9H,IAAKkB,EAAY4G,EAAZ5G,aAAcO,EAAgBqG,EAAhBrG,iBAAkB+N,EAAsB1H,EAAtB0H,uBAAsB,OAC7EjV,IAAAC,cAACmY,GAAS,KACRpY,IAAAC,cAAC0Y,IAAQ,CACPzQ,MAAOzC,EAAI0B,KACX0R,QAAS3R,EAAiBV,SAASf,EAAI0B,MACvC2S,WAAUrU,EAAI0B,KACdvG,SAAU,SAACoQ,EAAGtL,GAAI,OAAKuP,EAAuBvP,EAAKmT,QAAU,MAAQ,SAAUlS,EAAc,CAACjB,EAAK,iBAErG1F,IAAAC,cAAC8Z,GAAU,CAACtU,IAAKA,IACjBzF,IAAAC,cAAC8Y,GAAuB,CAACtT,IAAKA,MAmC5BsU,GAAa,SAAHvM,GAAiB,IAAX/H,EAAG+H,EAAH/H,IACpB,OACEA,EAAIuU,YACAha,IAAAC,cAACvC,EAAW,CACZiB,SAAO,EACP6B,QAASiF,EAAIuU,aAAeha,IAAAC,cAAA,OAAKga,wBAAyB,CAAEC,OAAQC,IAAUC,SAAS3U,EAAIuU,gBAC3F7Z,SAAS,eACTC,QACEJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEuM,WAAY,QAAUzF,KAAK,8BAG5C,MAOFkT,GAAW,SAAA1K,GAAA7Q,YAAAub,EAAA1K,GAAA,IAAA5Q,EAAAC,YAAAqb,GAAA,SAAAA,IAAA,OAAAlb,YAAA,KAAAkb,GAAAtb,EAAAoD,MAAA,KAAAC,WAmCd,OAnCcxC,YAAAya,EAAA,EAAAxa,IAAA,SAAAC,MAAA,WAGb,IAAA2R,EAWIlR,KAAKtB,MATPyS,EAASD,EAATC,UACA3N,EAAgB0N,EAAhB1N,iBACAwC,EAAuBkL,EAAvBlL,wBACAiB,EAAgBiK,EAAhBjK,iBACAvD,EAA8BwN,EAA9BxN,+BACA0O,EAAQlB,EAARkB,SACAhB,EAAYF,EAAZE,aACA2G,EAAqB7G,EAArB6G,sBACArD,EAAsBxD,EAAtBwD,uBAGF,OACEjV,IAAAC,cAAA,WACED,IAAAC,cAACyS,GAAa,CAACvL,KAAK,gBAAgBuK,UAAWA,EAAWiB,SAAUA,EAAUhB,aAAcA,IAC5F3R,IAAAC,cAACoY,GAAmB,CAClB9R,wBAAyBA,EACzBiB,iBAAkBA,EAClB8Q,sBAAuBA,IAEzBtY,IAAAC,cAAC6U,GAAU,MACX9U,IAAAC,cAAC9B,EAAc,KAEb6B,IAAAC,cAACqa,GAAiB,OAEpBta,IAAAC,cAAC0Z,GAAS,CACR5V,iBAAkBA,EAClBE,+BAAgCA,EAChCgR,uBAAwBA,SAG/BoF,EAnCc,CAASra,IAAM6Q,eAwGjBhE,gBAtDS,SAAClN,GAAK,MAAM,CAClC+R,UAAWhO,GAAwB/D,GACnCoE,iBAAkBD,GAAoBnE,GACtC4G,wBAAyBN,GAA2BtG,GACpD6H,iBAAkBpB,GAAoBzG,GACtCsE,+BAAgCD,GAAkCrE,OAGzC,SAACmN,GAAQ,MAAM,CACxC6F,SAAU,SAACpP,GACTuJ,EAAS,CACPlH,KAAM,eACNsI,SAAU3K,KAGdoO,aAAc,SAACD,GACb5E,EAAS,CACPlH,KAAM,+BACN6I,OAAQiD,KAGZ4G,sBAAuB,SAACnB,EAAYjR,GAClC4G,EAAS,CACPlH,KAAK,GAADqC,OAAKkP,EAAU,uBACnB1I,OAAQvI,KAGZ+O,uBAAwB,SAACkC,EAAYxQ,EAAcO,GACjD4F,EAAS,CACPlH,KAAK,GAADqC,OAAKkP,EAAU,uBACnBxQ,eACAO,sBAGJqT,gBAAiB,SAACvN,GAChBF,EAAS,CACPlH,KAAM,oBACNqH,QAASD,KAGbwN,iBAAkB,SAACxN,GACjBF,EAAS,CACPlH,KAAM,qBACNqH,QAASD,KAGbyN,iBAAkB,SAACzN,GACjBF,EAAS,CACPlH,KAAM,qBACNqH,QAASD,QAKAH,CAA6CwN,IC/WtDK,GAAe,GAqDN7N,gBAbS,SAAClN,GAAK,MAAM,CAClC8E,WAAYD,GAAc7E,OAGD,SAACmN,GAAQ,MAAM,CACxC2N,iBAAkB,SAACzN,GACjBF,EAAS,CACPlH,KAAM,qBACNqH,QAASD,QAKAH,EAnDS,SAAH7F,GAA0C,IAApCvC,EAAUuC,EAAVvC,WAAYgW,EAAgBzT,EAAhByT,iBAarC,OACEza,IAAAC,cAAA,WACED,IAAAC,cAAC3C,EAAU,KAAC,aAAU0C,IAAAC,cAAA,WAAM,WAAoBD,IAAAC,cAAA,WAChDD,IAAAC,cAACjC,EAAS,KAACgC,IAAAC,cAAC0Y,IAAQ,CAACzQ,MAAM,gBAAgB2Q,QAASpU,EAAW+G,YAAa5K,SAAU,SAACoQ,EAAGtL,GAAI,OAAK+U,EAAiB,CAAEjP,YAAa9F,EAAKmT,cACxI7Y,IAAAC,cAACjC,EAAS,KAACgC,IAAAC,cAAC0Y,IAAQ,CAACzQ,MAAM,kBAAkB2Q,QAASpU,EAAWgH,cAAe7K,SAAU,SAACoQ,EAAGtL,GAAI,OAAK+U,EAAiB,CAAEhP,cAAe/F,EAAKmT,cAC9I7Y,IAAAC,cAACjC,EAAS,KAAC,YAETgC,IAAAC,cAAA,UAAQH,MAAO2E,EAAW2F,QAASxJ,SAAU,SAACoQ,GAAC,OAAKyJ,EAAiB,CAAErQ,QAAS4G,EAAEuB,OAAOzS,UACvFE,IAAAC,cAAA,UAAQH,MAAM,UAAS,UACvBE,IAAAC,cAAA,UAAQH,MAAM,qBAAoB,wBAClCE,IAAAC,cAAA,UAAQH,MAAM,mBAAkB,oBAChCE,IAAAC,cAAA,UAAQH,MAAM,kBAAiB,sBAC/BE,IAAAC,cAAA,UAAQH,MAAM,QAAO,UAGzBE,IAAAC,cAAC9B,EAAc,KAAC,iBAAc6B,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,gBAAAoI,OAAkBxD,EAAWiE,aAAe9C,KAAK,OAAOyM,aAAc5N,EAAWiE,YAAa4J,QAAS,SAACtB,GAAC,OA3BnI,SAACA,EAAG7J,GAAwB,IAAlBrH,EAAKsC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG,KACtB,KAAd4O,EAAE2J,QACJF,EAAgB/T,YAAC,GAAKjC,EAAW,GAAIiW,KAErCA,GAAavT,GAAQrH,EAuBuI8a,CAAgB5J,EAAG,cAAe6J,SAAS7J,EAAEuB,OAAOzS,MAAO,QAAQ,OAC/NE,IAAAC,cAAC9B,EAAc,KAAC6B,IAAAC,cAACgM,IAAM,CAAC6O,SAAO,EAAC3U,KAAK,QAAQwG,QApBvB,WACxB8N,EAAgB/T,YAAC,GAAKjC,EAAW,GAAIiW,OAmBsC,cCChE7N,gBAbS,SAAClN,GAAK,MAAM,CAClC4E,WAAYD,GAAc3E,OAGD,SAACmN,GAAQ,MAAM,CACxC0N,iBAAkB,SAACxN,GACjBF,EAAS,CACPlH,KAAM,qBACNqH,QAASD,QAKAH,EAjCS,SAAH7F,GAA0C,IAApCzC,EAAUyC,EAAVzC,WAAYiW,EAAgBxT,EAAhBwT,iBACrC,OACExa,IAAAC,cAAA,WACED,IAAAC,cAAC3C,EAAU,KAAC,aAAU0C,IAAAC,cAAA,WAAM,WAAoBD,IAAAC,cAAA,WAChDD,IAAAC,cAACjC,EAAS,KAAC,qBAETgC,IAAAC,cAAA,UAAQH,MAAOyE,EAAW+G,YAAa1K,SAAU,SAACoQ,GAAC,OAAKwJ,EAAiB,CAAElP,YAAa0F,EAAEuB,OAAOzS,UAC/FE,IAAAC,cAAA,UAAQH,MAAM,aAAY,YAC1BE,IAAAC,cAAA,UAAQH,MAAM,YAAW,UACzBE,IAAAC,cAAA,UAAQH,MAAM,YAAW,gB,uRCL5B,IAAMib,GAAYxd,IAAOU,IAAGR,MAI7Bud,GAAczd,YAAO0d,KAAP1d,CAAaK,MAQ3Bsd,GAAgB,SAAHlU,GAAwC,IAAlC3C,EAAS2C,EAAT3C,UAAWuW,EAAe5T,EAAf4T,gBAClC,MAA0B,WAAtBvW,EAAU+F,QAEVpK,IAAAC,cAAA,WACED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,aAAe,QAC5DS,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,UAAWqN,WAAY,UAAY,UAI5D,UAAtBvI,EAAU+F,QAGVpK,IAAAC,cAAA,WACED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,qBAAuB,UAAOS,IAAAC,cAAA,WAC3ED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,mBAAqB,UAAOS,IAAAC,cAAA,WACzED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,sBAAwB,UAAOS,IAAAC,cAAA,WAC5ED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,qBAAuB,UAAOS,IAAAC,cAAA,WAC3ED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,qBAAuB,UAAOS,IAAAC,cAAA,WAC3ED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,oBAAsB,UAAOS,IAAAC,cAAA,WAC1ED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,qBAAuB,kBAAeS,IAAAC,cAAA,YAI/D,mBAAtBoE,EAAU+F,SAAsD,aAAtB/F,EAAU+F,QAEpDpK,IAAAC,cAAA,WAAK,UACID,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,UAAWqN,WAAY,UAAY,kBAEvF5M,IAAAC,cAAC5B,EAAW,CACVuH,KAAK,OACL/F,IAAG,aAAAoI,OAAe5D,EAAUgG,0BAC5BgI,kBAAqD/H,IAAvCjG,EAAUgG,yBAAyChG,EAAUgG,yBbpD9B,EaqD7CiI,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,6BACnC3Q,MAAO,CAAE8a,MAAO,UAChB,cAEFnb,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,WAGzB,wBAAtB8E,EAAU+F,QAEVpK,IAAAC,cAAA,WACED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,aAAe,mBAAgBS,IAAAC,cAAA,WAC5ED,IAAAC,cAACpC,EAAe,CAACsJ,KAAK,OAAO9G,MAAO,CAAEd,MAAO,YAAc,mBAI1DS,IAAAC,cAAA,aAQHya,GAAe,GAsMN7N,gBAbS,SAAClN,GAAK,MAAM,CAClC0E,UAAWD,GAAazE,OAGC,SAACmN,GAAQ,MAAM,CACxCyN,gBAAiB,SAACvN,GAChBF,EAAS,CACPlH,KAAM,oBACNqH,QAASD,QAKAH,EApMqB,SAAH5L,GAAwC,IAAlCoD,EAASpD,EAAToD,UAAWkW,EAAetZ,EAAfsZ,gBAC1CK,EAAkB,SAAC5J,EAAG7J,GAAwB,IAAlBrH,EAAKsC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG,KACtB,KAAd4O,EAAE2J,QACJJ,EAAe7T,YAAC,GAAKrC,EAAU,GAAIqW,KAEnCA,GAAavT,GAAQrH,GAOzB,OACEE,IAAAC,cAAA,WACED,IAAAC,cAAC3C,EAAU,KAAC,2BAAoC0C,IAAAC,cAAA,WAChDD,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAAC,SACHgC,IAAAC,cAAA,WACND,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,uBAAuBf,KAAK,+BAA+B0R,QAA8C,IAArCxU,EAAU4F,uBAA8BrJ,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAEtQ,uBAAwB,OAChNjK,IAAAC,cAACvC,EAAW,CACV8C,QAAQ,yEACRL,SAAS,cACTC,QACEJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEuM,WAAY,OAASzF,KAAK,8BAE3CnH,IAAAC,cAAA,WACFD,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,uBAAuBf,KAAK,+BAA+B0R,QAA8C,IAArCxU,EAAU4F,uBAA8BrJ,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAEtQ,uBAAwB,OAChNjK,IAAAC,cAACvC,EAAW,CACV8C,QAAQ,uHACRL,SAAS,cACTC,QACEJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEuM,WAAY,OAASzF,KAAK,8BAE3CnH,IAAAC,cAAA,WACFD,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,gBAAgBf,KAAK,+BAA+B0R,QAA8C,IAArCxU,EAAU4F,uBAA8BrJ,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAEtQ,uBAAwB,OACzMjK,IAAAC,cAACvC,EAAW,CACV8C,QAAQ,4BACRL,SAAS,cACTC,QACEJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEuM,WAAY,OAASzF,KAAK,gCAKjDnH,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAAC,gBAETgC,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,OAAOf,KAAK,eAAe0R,SAAUxU,EAAUmG,qBAAuBnG,EAAUoG,oBAAqB7J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE/P,oBAAoB,EAAOC,qBAAqB,OACjOzK,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,OAAOf,KAAK,eAAe0R,QAASxU,EAAUmG,mBAAoB5J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE/P,oBAAoB,EAAMC,qBAAqB,OAC7LzK,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,QAAQf,KAAK,eAAe0R,QAASxU,EAAUoG,oBAAqB7J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE/P,oBAAoB,EAAOC,qBAAqB,SAGpMzK,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAACgC,IAAAC,cAAC0Y,IAAQ,CAACzQ,MAAM,uBAAuB2Q,SAAUxU,EAAUwG,cAAejK,SAAU,SAACoQ,EAAGtL,GAAI,OAAK6U,EAAgB,CAAE1P,eAAgBnF,EAAKmT,cACnJ7Y,IAAAC,cAACjC,EAAS,KAACgC,IAAAC,cAAC0Y,IAAQ,CAACzQ,MAAM,uBAAuB2Q,SAAUxU,EAAU0G,gBAAiBnK,SAAU,SAACoQ,EAAGtL,GAAI,OAAK6U,EAAgB,CAAExP,iBAAkBrF,EAAKmT,eAEzJ7Y,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAAA,WACED,IAAAC,cAACjC,EAAS,KAAC,0BAAkC,YACpCgC,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,yBAAAoI,OAA2B5D,EAAUoF,wBAA0B7D,KAAK,OAAOyM,aAAchO,EAAUoF,uBAAwB6I,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,yBAA0B6J,SAAS7J,EAAEuB,OAAOzS,MAAO,SAE5OE,IAAAC,cAAA,WACED,IAAAC,cAACjC,EAAS,KAAC,gBAAwB,YAC1BgC,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,eAAAoI,OAAiB5D,EAAUqF,eAAiB9D,KAAK,OAAOyM,aAAchO,EAAUqF,cAAe4I,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,gBAAiB6J,SAAS7J,EAAEuB,OAAOzS,MAAO,SAEvME,IAAAC,cAAA,WACED,IAAAC,cAACjC,EAAS,KAAC,yBACTgC,IAAAC,cAACvC,EAAW,CACV8C,QAAQ,8OACRL,SAAS,cACTC,QACEJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEuM,WAAY,OAASzF,KAAK,+BAGnC,WACJnH,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,yBAAAoI,OAA2B5D,EAAUsF,6BAA+B/D,KAAK,OAAOyM,aAAchO,EAAUsF,4BAA6B2I,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,8BAA+B6J,SAAS7J,EAAEuB,OAAOzS,MAAO,UAG5PE,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAAA,WACED,IAAAC,cAACjC,EAAS,KAAC,+BAAuC,YACzCgC,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,8BAAAoI,OAAgC5D,EAAUuF,6BAA+BhE,KAAK,OAAOyM,aAAchO,EAAUuF,4BAA6B0I,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,8BAA+B6J,SAAS7J,EAAEuB,OAAOzS,MAAO,SAEhQE,IAAAC,cAAA,WACED,IAAAC,cAACjC,EAAS,KAAC,2BACTgC,IAAAC,cAACvC,EAAW,CACV8C,QAAQ,oLACRL,SAAS,cACTC,QACEJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEuM,WAAY,OAASzF,KAAK,+BAI/CnH,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,mCAAAoI,OAAqC5D,EAAUwF,4BAA8BjE,KAAK,OAAOyM,aAAchO,EAAUwF,2BAA4ByI,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,6BAA8B6J,SAAS7J,EAAEuB,OAAOzS,MAAO,QAAQ,wBAAaE,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,mCAAAoI,OAAqC5D,EAAUyF,4BAA8BlE,KAAK,OAAOyM,aAAchO,EAAUyF,2BAA4BwI,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,6BAA8B6J,SAAS7J,EAAEuB,OAAOzS,MAAO,SAErgBE,IAAAC,cAAA,WACED,IAAAC,cAACjC,EAAS,KAAC,2BACTgC,IAAAC,cAACvC,EAAW,CACV8C,QAAQ,8LACRL,SAAS,cACTC,QACEJ,IAAAC,cAACnC,IAAI,CAACuC,MAAO,CAAEuM,WAAY,OAASzF,KAAK,+BAI/CnH,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,2CAAAoI,OAA6C5D,EAAU0F,mCAAqCnE,KAAK,OAAOyM,aAAchO,EAAU0F,kCAAmCuI,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,oCAAqC6J,SAAS7J,EAAEuB,OAAOzS,MAAO,QAAQ,wBAAaE,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,2CAAAoI,OAA6C5D,EAAU2F,mCAAqCpE,KAAK,OAAOyM,aAAchO,EAAU2F,kCAAmCsI,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,oCAAqC6J,SAAS7J,EAAEuB,OAAOzS,MAAO,UAGjkBE,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAAA,WACED,IAAAC,cAACjC,EAAS,KAAC,0BAET+C,EAAU8E,KAAI,SAACoF,GAAK,OAAKjL,IAAAC,cAACjC,EAAS,CAAC6B,IAAKoL,GAAOjL,IAAAC,cAAC0Y,IAAQ,CAACzQ,MAAK,QAAAD,OAAUgD,GAAS4N,SAAUxU,EAAU,YAAD4D,OAAagD,IAAUrK,SAAU,SAACoQ,EAAGtL,GAAI,OAAK6U,EAAelb,YAAC,GAAD,YAAA4I,OAAgBgD,IAAWvF,EAAKmT,kBAGtM7Y,IAAAC,cAAC9B,EAAc,KAAC,iBAAc6B,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,gBAAAoI,OAAkB5D,EAAUqE,aAAe9C,KAAK,OAAOyM,aAAchO,EAAUqE,YAAa4J,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,cAAe6J,SAAS7J,EAAEuB,OAAOzS,MAAO,QAAQ,OAC7NE,IAAAC,cAAC9B,EAAc,KAAC6B,IAAAC,cAACgM,IAAM,CAAC6O,SAAO,EAAC3U,KAAK,QAAQwG,QA5GzB,WACxB4N,EAAe7T,YAAC,GAAKrC,EAAU,GAAIqW,OA2G0C,WAE3E1a,IAAAC,cAAC3C,EAAU,KAAC,mBAAgB0C,IAAAC,cAAA,WAAM,WAAoBD,IAAAC,cAAA,WACtDD,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAAC,aACXgC,IAAAC,cAACjC,EAAS,KACRgC,IAAAC,cAAA,UAAQH,MAAOuE,EAAU+F,QAASxJ,SAAU,SAACoQ,GAAC,OAAKuJ,EAAgB,CAAEnQ,QAAS4G,EAAEuB,OAAOzS,UACrFE,IAAAC,cAAA,UAAQH,MAAM,UAAS,UACvBE,IAAAC,cAAA,UAAQH,MAAM,SAAQ,wBACtBE,IAAAC,cAAA,UAAQH,MAAM,kBAAiB,2BAC/BE,IAAAC,cAAA,UAAQH,MAAM,YAAW,iBACzBE,IAAAC,cAAA,UAAQH,MAAM,uBAAsB,sBAEtCE,IAAAC,cAACib,GAAa,CAAC7W,UAAWA,EAAWuW,gBAAiBA,MAG1D5a,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAAC,sBACXgC,IAAAC,cAACjC,EAAS,KACRgC,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,oBAAoBf,KAAK,sBAAsB0R,QAAiC,oBAAxBxU,EAAUqG,UAAiC9J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE7P,UAAW,uBAC1L1K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,gBAAgBf,KAAK,sBAAsB0R,QAAiC,mBAAxBxU,EAAUqG,UAAgC9J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE7P,UAAW,sBACrL1K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,0BAA0Bf,KAAK,sBAAsB0R,QAAiC,+BAAxBxU,EAAUqG,UAA4C9J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE7P,UAAW,kCAC3M1K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,0BAA0Bf,KAAK,sBAAsB0R,QAAiC,mCAAxBxU,EAAUqG,UAAgD9J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE7P,UAAW,sCAC/M1K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,QAAQf,KAAK,sBAAsB0R,QAAiC,UAAxBxU,EAAUqG,UAAuB9J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE7P,UAAW,eAGxK1K,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAAC,sBACXgC,IAAAC,cAACjC,EAAS,KACRgC,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,OAAOf,KAAK,uBAAuB0R,SAAUxU,EAAUsG,iBAAkB/J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE5P,iBAAkB,UACvK3K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,oBAAoBf,KAAK,uBAAuB0R,QAAwC,oBAA/BxU,EAAUsG,iBAAwC/J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE5P,iBAAkB,uBACzM3K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,gBAAgBf,KAAK,uBAAuB0R,QAAwC,mBAA/BxU,EAAUsG,iBAAuC/J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE5P,iBAAkB,sBACpM3K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,iBAAiBf,KAAK,uBAAuB0R,QAAwC,yBAA/BxU,EAAUsG,iBAA6C/J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE5P,iBAAkB,4BAC3M3K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,0BAA0Bf,KAAK,uBAAuB0R,QAAwC,+BAA/BxU,EAAUsG,iBAAmD/J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE5P,iBAAkB,kCAC1N3K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,0BAA0Bf,KAAK,uBAAuB0R,QAAwC,mCAA/BxU,EAAUsG,iBAAuD/J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE5P,iBAAkB,sCAC9N3K,IAAAC,cAAC+a,GAAW,CAAC9S,MAAM,QAAQf,KAAK,uBAAuB0R,QAAwC,UAA/BxU,EAAUsG,iBAA8B/J,SAAU,SAACoQ,EAAGtL,GAAI,OAAKA,EAAKmT,SAAW0B,EAAgB,CAAE5P,iBAAkB,eAGvL3K,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAAC,uBACXgC,IAAAC,cAACjC,EAAS,KACRgC,IAAAC,cAAA,UAAQH,MAAOuE,EAAU6F,iBAAkBtJ,SAAU,SAACoQ,GAAC,OAAKuJ,EAAgB,CAAErQ,iBAAkB8G,EAAEuB,OAAOzS,UACvGE,IAAAC,cAAA,UAAQH,MAAM,kBAAiB,2BAC/BE,IAAAC,cAAA,UAAQH,MAAM,YAAW,iBACzBE,IAAAC,cAAA,UAAQH,MAAM,uBAAsB,qBACpCE,IAAAC,cAAA,UAAQH,MAAM,8BAA6B,mCAIjDE,IAAAC,cAAC8a,GAAS,KACR/a,IAAAC,cAACjC,EAAS,KAAC,2BACXgC,IAAAC,cAACjC,EAAS,KACRgC,IAAAC,cAAA,UAAQH,MAAOuE,EAAU8F,oBAAqBvJ,SAAU,SAACoQ,GAAC,OAAKuJ,EAAgB,CAAEpQ,oBAAqB6G,EAAEuB,OAAOzS,UAC7GE,IAAAC,cAAA,UAAQH,MAAM,UAAS,UACvBE,IAAAC,cAAA,UAAQH,MAAM,YAAW,YACzBE,IAAAC,cAAA,UAAQH,MAAM,aAAY,oBClPhC4a,GAAe,GA4CN7N,gBAbS,SAAClN,GAAK,MAAM,CAClCgF,YAAaD,GAAe/E,OAGH,SAACmN,GAAQ,MAAM,CACxCC,kBAAmB,SAACC,GAClBF,EAAS,CACPlH,KAAM,sBACNqH,QAASD,QAKAH,EA1CU,SAAH7F,GAA4C,IAAtCrC,EAAWqC,EAAXrC,YAAaoI,EAAiB/F,EAAjB+F,kBACjC6N,EAAkB,SAAC5J,EAAG7J,GAAwB,IAAlBrH,EAAKsC,UAAAsL,OAAA,QAAApD,IAAAlI,UAAA,GAAAA,UAAA,GAAG,KACtB,KAAd4O,EAAE2J,QACJ5N,EAAiBrG,YAAC,GAAK/B,EAAY,GAAI+V,KAEvCA,GAAavT,GAAQrH,GAQzB,OACEE,IAAAC,cAAA,WACED,IAAAC,cAAC3C,EAAU,KAAC,gBAAyB0C,IAAAC,cAAA,WACrCD,IAAAC,cAAC9B,EAAc,KAAC6B,IAAAC,cAAC0Y,IAAQ,CAACzQ,MAAM,qCAAqC2Q,SAAUlU,EAAYyE,sCAAuCxI,SAAU,SAACoQ,EAAGtL,GAAI,OAAKqH,EAAiBrG,YAAC,GAAK/B,EAAY,CAACyE,uCAAwC1D,EAAKmT,eAC1O7Y,IAAAC,cAAC9B,EAAc,KAAC,UAAO6B,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,SAAAoI,OAAWtD,EAAYiE,UAAYhD,KAAK,OAAOyM,aAAc1N,EAAYiE,SAAU0J,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,WAAY6J,SAAS7J,EAAEuB,OAAOzS,MAAO,QAAQ,WAC1ME,IAAAC,cAAC9B,EAAc,KAAC,UAAO6B,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,SAAAoI,OAAWtD,EAAYmE,UAAYlD,KAAK,OAAOyM,aAAc1N,EAAYmE,SAAUwJ,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,WAAY6J,SAAS7J,EAAEuB,OAAOzS,MAAO,QAAQ,WAC1ME,IAAAC,cAAC9B,EAAc,KAAC,iBAAc6B,IAAAC,cAAC5B,EAAW,CAACwB,IAAG,gBAAAoI,OAAkBtD,EAAY+D,aAAe9C,KAAK,OAAOyM,aAAc1N,EAAY+D,YAAa4J,QAAS,SAACtB,GAAC,OAAK4J,EAAgB5J,EAAG,cAAe6J,SAAS7J,EAAEuB,OAAOzS,MAAO,QAAQ,OACjOE,IAAAC,cAAC9B,EAAc,KAAC6B,IAAAC,cAACgM,IAAM,CAAC6O,SAAO,EAAC3U,KAAK,QAAQwG,QAXvB,WACxBI,EAAiBrG,YAAC,GAAK/B,EAAY,GAAI+V,OAUoC,cCjBzEU,GAAY,SAAAzL,GAAA7Q,YAAAsc,EAAAzL,GAAA,IAAA5Q,EAAAC,YAAAoc,GAAA,SAAAA,IAAA,OAAAjc,YAAA,KAAAic,GAAArc,EAAAoD,MAAA,KAAAC,WAwBf,OAxBexC,YAAAwb,EAAA,EAAAvb,IAAA,SAAAC,MAAA,WAEN,IAAD2R,EAMHlR,KAAKtB,MAJPyS,EAASD,EAATC,UACAlK,EAAgBiK,EAAhBjK,iBACAmL,EAAQlB,EAARkB,SACAhB,EAAYF,EAAZE,aAGF,OACE3R,IAAAC,cAAA,WACED,IAAAC,cAACyS,GAAa,CACZvL,KAAK,iBACLuK,UAAWA,EACXiB,SAAUA,EACVhB,aAAcA,IAGfnK,EAAiBhB,SAAS,cAAgBxG,IAAAC,cAACob,GAA2B,MACtE7T,EAAiBhB,SAAS,aAAexG,IAAAC,cAACqb,GAAgB,MAC1D9T,EAAiBhB,SAAS,cAAgBxG,IAAAC,cAACsb,GAAe,MAC1D/T,EAAiBhB,SAAS,QAAUxG,IAAAC,cAACub,GAAe,WAE1DJ,EAxBe,CAASpb,IAAM6Q,eAsDlBhE,gBApBS,SAAClN,GAAK,MAAM,CAClC+R,UAAWlO,GAAyB7D,GACpC6H,iBAAkBpB,GAAoBzG,OAGb,SAACmN,GAAQ,MAAM,CACxC6F,SAAU,SAACpP,GACTuJ,EAAS,CACPlH,KAAM,eACNsI,SAAU3K,KAGdoO,aAAc,SAACD,GACb5E,EAAS,CACPlH,KAAM,gCACN6I,OAAQiD,QAKC7E,CAA6CuO,I,mHC3D5D,IAAM9J,GAAa/T,IAAOgU,EAAC9T,MAmCZge,GA9BG,WAAH,OACbzb,IAAAC,cAACmQ,GAAK,CACJI,MAAM,uBACNrK,KAAK,QACLgJ,UAAU,aACV/O,QAASJ,IAAAC,cAACqR,GAAU,KAAC,UACtB,gKAEmBtR,IAAAC,cAAA,KAAGyb,KAAK,oCAAoCnJ,OAAO,UAAS,UAAUvS,IAAAC,cAAA,WACxFD,IAAAC,cAAA,WAAM,kBACSD,IAAAC,cAAA,WACfD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,yNAEJD,IAAAC,cAAA,UAAI,iHACJD,IAAAC,cAAA,UAAI,gHACJD,IAAAC,cAAA,UAAI,iGACJD,IAAAC,cAAA,UAAI,oFACJD,IAAAC,cAAA,UAAI,wKACwCD,IAAAC,cAACnC,IAAI,CAACqJ,KAAK,aAAa,yKAEpEnH,IAAAC,cAAA,UAAI,uHAGND,IAAAC,cAAA,KAAGyb,KAAK,sDAAsDnJ,OAAO,UAAS,UAAU,UAC/EvS,IAAAC,cAAA,KAAGyb,KAAK,sDAAsDnJ,OAAO,UAAS,oBAAoB,4BAChFvS,IAAAC,cAAA,KAAGyb,KAAK,+CAA+CnJ,OAAO,UAAS,UAAU,MChC1GoJ,GAAQ,SAAAhM,GAAA7Q,YAAA6c,EAAAhM,GAAA,IAAA5Q,EAAAC,YAAA2c,GAAA,SAAAA,IAAA,OAAAxc,YAAA,KAAAwc,GAAA5c,EAAAoD,MAAA,KAAAC,WAkBX,OAlBWxC,YAAA+b,EAAA,EAAA9b,IAAA,SAAAC,MAAA,WAEF,IAAD2R,EAKHlR,KAAKtB,MAFP6F,EAAqB2M,EAArB3M,sBACAtC,EAAIiP,EAAJjP,KAGF,OAAIsC,EACGtC,EAAKoZ,gBAIH5b,IAAAC,cAAA,WAAK,kCAA+BD,IAAAC,cAAA,SAAIuC,EAAKoZ,kBAH3C5b,IAAAC,cAAA,WAAK,mCAMTD,IAAAC,cAAA,gBACR0b,EAlBW,CAAS3b,IAAM6Q,eAgCdhE,gBANS,SAAClN,GAAK,MAAM,CAClCmF,sBAAuBD,GAAyBlF,GAChD6C,KAAMoC,GAAQjF,MAIDkN,CAAyB8O,I,kXClCxC,IAAME,GAAYte,YAAOue,IAAKC,IAAZxe,CAAgBE,MAK5Bue,GAAUze,YAAOue,IAAKG,QAAQvd,MAAM,CAAEyc,MAAO,GAAnC5d,CAAuCK,MAIjDse,GAAU3e,YAAOue,IAAKG,QAAQvd,MAAM,CAAEyc,MAAO,IAAnC5d,CAAwCQ,MAKzC,qBACbiC,IAAAC,cAAC6b,IAAI,KACH9b,IAAAC,cAAC4b,GAAS,KACR7b,IAAAC,cAAC+b,GAAO,KACNhc,IAAAC,cAAA,SAAG,eACHD,IAAAC,cAACwb,GAAS,OAGZzb,IAAAC,cAACic,GAAO,KACNlc,IAAAC,cAAC0b,GAAQ,U,oBC5BJQ,GAAW,SAACC,EAAOC,GAC9B,IAAIC,EACJ,OAAO,WAAc,IAAD,IAAA1M,EAAAxN,UAAAsL,OAATmC,EAAI,IAAAtB,MAAAqB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1N,UAAA0N,GACTwM,GACFC,aAAaD,GAEfA,EAAUpG,YAAW,WACnBmG,EAAEla,WAAC,EAAG0N,GACNyM,EAAU,OACTF,KCgBDI,GAAe,CACnBC,cAAc,EACdC,gBAAgB,EAChBC,WAAW,EACXC,iBAAiB,EACjBC,yBAAyB,EACzBC,gBAAgB,GAOlB,SAASC,GAAUC,EAAYC,GAAW,IAAD/d,EAAA,KAElC+d,IAAUA,EAAW1c,KAAK2c,gBAAgBF,IAE/C,IAAIG,EAAc,GA2ElB,OA1EAF,EAASzX,SAAQ,SAAC4X,GAEhB,KAAIA,EAAQC,IAAML,EAAWM,iBAAmBF,EAAQG,MAAQP,EAAWM,kBAGlD,oBAArBpe,EAAKse,OAAO5X,KAA4B,CAC1C,IAAKwX,EAAQK,YAAcL,EAAQM,WACjC,OAEFP,EAAY7U,KAAK,UACjB6U,EAAY7U,KACV,CAAEnB,KAAK,MAADc,OAAQmV,EAAQO,IAAG,KAAA1V,OAAImV,EAAQG,MAAK,KAAAtV,OAAImV,EAAQC,IAAG,MAAApV,OAAKmV,EAAQQ,OAAM,gBAAgB9d,MAAO,MAEjGsd,EAAQM,WAAWG,qBACyB,SAA1CT,EAAQM,WAAWG,mBACrBV,EAAY7U,KAAK,CAAEnB,KAAM,iBAAkBrH,MAAO,KAElDqd,EAAY7U,KAAK,CAAEnB,KAAM,iBAAkBrH,MAAO,MAGtDqd,EAAY7U,KAAK,UAEjB6U,EAAY7U,KACV,CAAEnB,MAAOiW,EAAQC,IAAMD,EAAQG,OAAOO,WAAWlK,QAAQ,wBAAyB,KAAM9T,MAAO,cAE7Fsd,EAAQM,WAAWK,iBACrBZ,EAAY7U,KACV,CAAEnB,KAAMiW,EAAQM,WAAWK,gBAAiBje,MAAO,0BAEnDsd,EAAQM,WAAWM,cACrBb,EAAY7U,KACV,CAAEnB,KAAMiW,EAAQM,WAAWM,aAAcle,MAAO,uBAEhDsd,EAAQM,WAAWK,iBAAmBX,EAAQM,WAAWM,cAC3Db,EAAY7U,KACV,CAAEnB,KAAM0T,SAASuC,EAAQM,WAAWK,iBAAmBlD,SAASuC,EAAQM,WAAWM,cAAele,MAAO,gBAEzGsd,EAAQM,WAAWO,oCACrBd,EAAY7U,KAAK,CAAEnB,KAAMiW,EAAQM,WAAWO,mCAAoCne,MAAO,wBAGrFsd,EAAQM,WAAWQ,iCACrBf,EAAY7U,KAAK,CACfnB,KAAMiW,EAAQM,WAAWQ,+BACzBpe,OAAQsd,EAAQM,WAAWS,kBAAiB,UAAAlW,OAAamV,EAAQM,WAAWS,kBAAiB,KAAM,IAAM,+BAEvGf,EAAQM,WAAWU,oCACrBjB,EAAY7U,KAAK,CAAEnB,KAAMiW,EAAQM,WAAWU,mCAAmCC,QAAQ,GAAIve,MAAO,qCAIlGsd,EAAQM,WAAWY,MACrBnB,EAAY7U,KAAK,CAAEnB,KAAM,IAAKrH,MAAOsd,EAAQM,WAAWY,KAAK1K,QAAQ,IAAK,OAI5E9M,OAAO2M,KAAK2J,EAAQM,YAAY/X,QAAO,SAAC9F,GAAG,OAAM,CAC/C,aAAc,QAAS,aAAc,cAAe,OACpD,qBAAsB,kBAAmB,eAAgB,qCACzD,iCAAkC,qCAAsC,qBACxE2G,SAAS3G,MAAM2F,SAAQ,SAAC3F,GACxBsd,EAAY7U,KAAK,CAAEnB,KAAMtH,EAAI+T,QAAQ,KAAM,KAAM9T,MAAOsd,EAAQM,WAAW7d,GAAK+T,QAAQ,KAAM,UAGhGuJ,EAAcA,EAAYtX,KAAI,SAAC0Y,GAC7B,OAAIA,EAAGpX,MAAQoX,EAAGze,MACT,CAAEqH,KAAK,MAADc,OAAQsW,EAAGpX,KAAI,QAAQrH,MAAOye,EAAGze,OAEvCye,SAMRpB,EAIT,IAAMqB,GAAuB,SAACC,GACvBA,EAKc,oBAAfA,EAAM7Y,KACR6Y,EAAM1B,UAAYA,GACM,WAAf0B,EAAM7Y,MACf6Y,EAAM/S,OAAO/F,QAAO,SAAC+Y,GAAQ,MAAuB,oBAAlBA,EAAS9Y,QAA4BJ,SAAQ,SAACkZ,GAC9EA,EAAS3B,UAAYA,MARvB5U,QAAQiD,KAAK,iDAcXuT,GAAG,SAAA9f,GAAAC,YAAA6f,EAAA9f,GAAA,IAAAE,EAAAC,YAAA2f,GAEP,SAAAA,EAAY1f,GAAQ,IAADc,EAOsC,OAPtCZ,YAAA,KAAAwf,GACjB5e,EAAAhB,EAAAK,KAAA,KAAMH,GAAMI,YAAAC,YAAAS,GAAA,uBASQ,SAAC6e,GACrB7e,EAAK8e,UAAYD,KAClBvf,YAAAC,YAAAS,GAAA,UAEQ,kBAAMC,IAAAC,cAAA,WAAKD,IAAAC,cAAA,OAAK6e,IAAK/e,EAAKgf,0BAA6B1f,YAAAC,YAAAS,GAAA,yBA0DxC,SAAC0e,EAAOxf,EAAO+f,GAAe,IAElD7a,EAMElF,EANFkF,wCACAqD,EAKEvI,EALFuI,iBACAnD,EAIEpF,EAJFoF,UACAE,EAGEtF,EAHFsF,WACAE,EAEExF,EAFFwF,WACAE,EACE1F,EADF0F,YAGIsa,EAAsC,CAAC,SAAU,MAAO,mBAAmBzY,SAASiY,EAAM7Y,QAC9FoZ,EAAUxX,iBAAiBhB,SAAS,eAAiBgB,EAAiBhB,SAAS,cAC5EwY,EAAUxX,iBAAiBhB,SAAS,cAAgBgB,EAAiBhB,SAAS,aAC9EwY,EAAU3a,YAAcA,GACvB6a,EAAgD,YAAfT,EAAM7Y,MAAsBoZ,EAAUza,aAAeA,EACtF4a,EAAsD,cAAfV,EAAM7Y,MAAwBoZ,EAAUva,aAAeA,EAC9F2a,EAAiD,SAAfX,EAAM7Y,MAAmBoZ,EAAUra,cAAgBA,EACrF0a,EAAoD,SAAfZ,EAAM7Y,QAC9C4P,KAAE8J,UACCN,EAAU7a,wCAAwCsa,EAAM9X,eAAiB,IAAIsC,iBAAmB,IAAIwV,EAAMlV,WAC1GpF,EAAwCsa,EAAM9X,eAAiB,IAAIsC,iBAAmB,IAAIwV,EAAMlV,YAChGiM,KAAE8J,UACFN,EAAU7a,wCAAwCsa,EAAM9X,eAAiB,IAAIwC,gBAAkB,IAAIsV,EAAMlV,WACzGpF,EAAwCsa,EAAM9X,eAAiB,IAAIwC,gBAAkB,IAAIsV,EAAMlV,WAWrG,OARe0V,GACVC,GACAC,GACAC,GACAC,KAKNhgB,YAAAC,YAAAS,GAAA,cAEY,SAAC0e,GAAK,SAAAxW,OAAQwW,EAAMpW,IAAG,KAAAJ,OAAIwW,EAAM9X,aAAY,KAAAsB,OAAIwW,EAAMlV,YAASlK,YAAAC,YAAAS,GAAA,mBAE3D,SAAC0e,GACjB,IAAMc,EAAUxf,EAAKyf,WAAWf,GAE1BgB,EAAqB1f,EAAK2f,QAAQC,WAAWha,QAAO,SAACia,GACzD,IAAMC,GAAuBD,EAAkBnB,OAAS,IAAIjB,QAAU,GACtE,OAAO+B,IAAYxf,EAAKyf,WAAWK,MAGrC,OAAOJ,EAAmB/R,OAAS,GAAK+R,EAAmB,MAC5DpgB,YAAAC,YAAAS,GAAA,4BAE0B,SAACif,GAC1B,GAAIjf,EAAK+f,2CACP/f,EAAK+f,4CAA6C,MADpD,CAIA,IAAMC,EAA8Bf,EAAUtT,OAAOtG,QAAO,SAACC,EAAKoZ,GAChE,OAAA/X,YAAArH,YAAA,MAAA4I,OAAawW,EAAMtX,KAAI,KAAAc,OAAIwW,EAAM7Y,MAAS6Y,GAAUpZ,KACnD,IAGCtF,EAAKd,MAAMyM,QACb3L,EAAKd,MAAMyM,OAAOlG,QAAO,eAAAwB,EAAA9F,YAAAC,IAAAC,MAAC,SAAA4e,EAAOvB,GAAK,IAAAwB,EAAAC,EAAA,OAAA/e,IAAAI,MAAA,SAAA4e,GAAA,cAAAA,EAAA1e,KAAA0e,EAAAze,MAAA,OACwC,KAAtEue,EAAYF,EAA4B,GAAD9X,OAAIwW,EAAMtX,KAAI,KAAAc,OAAIwW,EAAM7Y,QACvD,CAADua,EAAAze,KAAA,aACP3B,EAAKqgB,sBAAsB3B,EAAO1e,EAAKd,MAAO+f,GAAW,CAADmB,EAAAze,KAAA,QAGnB,OAFjCwe,EAAYngB,EAAKsgB,gBAAgB5B,GACvCtW,QAAQC,IAAI,kBAAmBqW,EAAMtX,KAAM8Y,GAC3CC,EAAUzB,MAAM6B,aAAaL,GAAUE,EAAAze,KAAA,EACjCwe,EAAUzB,MAAM8B,WAAU,OAEhCL,EAAUM,eAAc,cAInBT,EAA4B,GAAD9X,OAAIwW,EAAMtX,KAAI,KAAAc,OAAIwW,EAAM7Y,OAAOua,EAAAze,KAAA,iBAIjE,IACEyG,QAAQC,IAAI,iBAAkBqW,EAAMtX,MACpCpH,EAAK0gB,6BAA8B,EACnC1gB,EAAK2f,QAAQgB,kBAAkBjC,EAAMtX,MACrC,MAAO6J,GACP7I,QAAQiD,KAAK,yBAA0BqT,EAAMtX,KAAM6J,GACpD,yBAAAmP,EAAAje,UAAA8d,OAEJ,gBAAAW,GAAA,OAAA3Z,EAAA7E,MAAA,KAAAC,YAzBwB,IA4BH0E,OAAO2H,OAAOsR,GACtBva,SAAQ,SAACiZ,GACvB,IACO1e,EAAKsgB,gBAAgB5B,KACxBtW,QAAQC,IAAI,oBAAqBqW,EAAMtX,MACvCpH,EAAK2f,QAAQkB,UAAUnC,GAAOoC,KAAKrC,KAErC,MAAOxN,GACP7I,QAAQiD,KAAK,sBAAuBqT,EAAMtX,KAAM6J,WAtKpDjR,EAAK8e,UAAY,KACjB9e,EAAK2f,QAAU,KACf3f,EAAK+gB,6BAA8B,EACnC/gB,EAAK0gB,6BAA8B,EACnC1gB,EAAK+f,4CAA6C,EAAK/f,EAwLxD,OAvLAH,YAAA+e,EAAA,EAAA9e,IAAA,oBAAAC,MAAA,eAAAihB,EAAA7f,YAAAC,IAAAC,MAAA,SAAAC,IAAA,IAAAoQ,EAAA5N,EAAAN,EAAAmI,EAAAsV,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,YAAAjgB,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAUMnB,KAAKse,UAAU,CAADrd,EAAAE,KAAA,eAAAF,EAAAmB,OAAA,iBAAA8O,EAWflR,KAAKtB,MANP4E,EAAM4N,EAAN5N,OACAN,EAAKkO,EAALlO,MACAmI,EAAM+F,EAAN/F,OACAsV,EAAmBvP,EAAnBuP,oBACAC,EAAmBxP,EAAnBwP,oBACAC,EAAwBzP,EAAxByP,yBAGIC,EAAiBza,YAAA,GAClB8V,GAAa,CAChBjZ,QACAM,SACA6H,WAIF2V,KAAIC,cAAc/gB,KAAKse,UAAWsC,GAAmBN,MAAK,SAACnB,GACzD0B,EAAK1B,QAAUA,EACf6B,OAAOC,WAAa9B,EAEpBA,EAAQC,WAAWna,SAAQ,SAAC0a,GAAgB1B,GAAqB0B,EAAUzB,UAEvEuC,GACFI,EAAK1B,QAAQxf,GAAG,cAAeic,GAAS,KAAK,SAACsF,GACvCL,EAAKN,6BACRE,EAAoBS,GAEtBL,EAAKN,6BAA8B,MAInCG,GACFG,EAAK1B,QAAQxf,GAAG,gBAAgB,SAACue,GAC1B2C,EAAKX,6BACRQ,EAAoBxC,EAAMjB,OAAO7W,aAAc8X,EAAMjB,OAAOjU,SAE9D6X,EAAKX,6BAA8B,KAInCS,GACFE,EAAK1B,QAAQxf,GAAG,qBAAqB,SAACwhB,GACpCN,EAAKtB,4CAA6C,EAClDoB,EAAyBQ,SAG7B,wBAAAlgB,EAAAU,UAAAb,EAAA,mCAAA0f,EAAA5e,MAAA,KAAAC,YA7DH,IA6DG,CAAAvC,IAAA,wBAAAC,MAAA,SAyGkBkf,GACpB,IAAKze,KAAKse,YAActe,KAAKmf,QAC3B,OAAO,EAKT,IAAMiC,EAAkBphB,KAAKmf,QAAQkC,aAAaC,MAC5CC,EAAe9C,EAAUzb,MAQ/B,OAPIyb,EAAUzb,OAAWoe,GAAmBG,EAAalO,QAAQ,KAAM,MAAQ+N,EAAgB/N,QAAQ,KAAM,MAC3GrT,KAAKugB,6BAA8B,EACnCvgB,KAAKmf,QAAQqC,OAAOD,IAGtBvhB,KAAKyhB,yBAAyBhD,IAEvB,MACRL,EAjMM,CAAS3e,IAAMc,WA4PT+L,gBAzCS,SAAClN,GAAK,MAAM,CAClCkE,OAAQD,GAAUjE,GAClB4D,MAAOD,GAAS3D,GAChB+L,OAAQtE,GAAUzH,GAClB6H,iBAAkBpB,GAAoBzG,GACtCwE,wCAAyCD,GAA2CvE,GACpF0E,UAAWD,GAAazE,GACxB4E,WAAYD,GAAc3E,GAC1B8E,WAAYD,GAAc7E,GAC1BgF,YAAaD,GAAe/E,OAIH,SAACmN,GAAQ,MAAM,CACxCkU,oBAAqB,SAACS,GACpB,GAAIA,GAASA,EAAMvZ,MAAO,CACxB,IAAM+Z,EAAWR,EAAMvZ,MAAM0L,QAAQ,KAAM,IAC3C9G,EAAS,CACPlH,KAAM,eACNsI,SAAU+T,MAKhBhB,oBAAqB,SAACta,EAAcoB,GAClC+E,EAAS,CACPlH,KAAM,4BACNe,eACAO,iBAAkB,CAACa,MAIvBmZ,yBAA0B,SAACgB,GACzBpV,EAAS,CACPlH,KAAM,qBACNsI,SAAUgU,QAMDrV,CAA6C8R,I,8XCxX5D,IAAMwD,GAAwB5kB,IAAOU,IAAGR,MAMlC2kB,GAAgB7kB,IAAOU,IAAGL,MAU1BykB,GAAe,SAAAxjB,GAAAC,YAAAujB,EAAAxjB,GAAA,IAAAE,EAAAC,YAAAqjB,GAEnB,SAAAA,EAAYpjB,GAAQ,IAADC,EAGF,OAHEC,YAAA,KAAAkjB,GACjBnjB,EAAAH,EAAAK,KAAA,KAAMH,GAAMI,YAAAC,YAAAJ,GAAA,sBAKO,SAACsD,GACpB,IAAMC,EAAUD,GAAQA,EAAKK,kBACvB+Y,EAAkBnZ,GAAWA,EAAQK,WAE3C5D,EAAKM,SAAS,CAAE8iB,KAAM1G,EAAkB,MAAQ,kBAChD1c,EAAKD,MAAMsjB,mBAAmB3G,MAC/Bvc,YAAAC,YAAAJ,GAAA,UAkCQ,WACP,GAAwB,QAApBA,EAAKS,MAAM2iB,OAAmBpjB,EAAKD,MAAM6F,sBAE3C,OADAqD,QAAQC,IAAI,kBACLpI,IAAAC,cAAC0e,GAAG,MAGb,GAAwB,kBAApBzf,EAAKS,MAAM2iB,KAA0B,CACvC,IAAIE,EAAkB,EAChBC,EAAU,IAAIzc,IAmBpB,OAlBA9G,EAAKD,MAAM8E,iBAAiByB,SAAQ,SAACF,GACnCA,EAASC,KAAKC,SAAQ,SAACC,GACjBA,EAAIC,MACND,EAAIC,KAAKF,SAAQ,SAACE,GAChB,GAAIA,EAAK2C,KAAO3C,EAAK2C,IAAIqa,WAAW,SAAU,CAC5CF,GAAmB,EAEnB,IACMG,EADYjd,EAAK2C,IAAIyJ,MAAM,KACR,GACV,eAAX6Q,GACFF,EAAQ1c,IAAI4c,aAQA,IAApBH,EACKxiB,IAAAC,cAACmiB,GAAa,KAAC,yEAItBpiB,IAAAC,cAAA,WACED,IAAAC,cAACmiB,GAAa,KACZpiB,IAAAC,cAAA,WAAK,aACQuiB,EAAgB,mCAAgCxiB,IAAAC,cAAA,KAAGyb,KAAMxc,EAAKD,MAAM+F,mBAAoBuN,OAAO,UAAUrT,EAAKD,MAAM+F,oBAAuBhF,IAAAC,cAAA,WACtJD,IAAAC,cAAA,YAIAwiB,EAAQtc,KAAO,GACfnG,IAAAC,cAAA,WAAK,0FAEHD,IAAAC,cAAA,UAEIsO,MAAMqU,KAAKH,GAAS5c,KAAI,SAAC8c,GAAM,OAAK3iB,IAAAC,cAAA,MAAIJ,IAAK8iB,GAAQ3iB,IAAAC,cAAA,KAAGyb,KAAI,oDAAAzT,OAAsD0a,GAAUpQ,OAAO,UAAUoQ,SAMxH,qBAA3BzjB,EAAKS,MAAMkjB,aACX7iB,IAAAC,cAAA,OAAKI,MAAO,CAAEgZ,UAAW,OAAQ9Z,MAAO,MAAOujB,UAAW,SAExD9iB,IAAAC,cAAA,SAAG,+BAA+BD,IAAAC,cAAA,WAAM,wDAM9CD,IAAAC,cAACkiB,GAAqB,KACpBniB,IAAAC,cAAC8iB,eAAW,CACVC,SAAUzB,OAAO0B,qBACjBC,MAAM,OACNC,WAAW,sBACXC,SAAUlkB,EAAKS,MAAMkjB,YACrBQ,UAAWnkB,EAAKokB,mBAChBC,UAAWrkB,EAAKokB,mBAChBE,aAAa,yBAOvB,OAAO,QAtHPtkB,EAAKS,MAAQ,GAAET,EAwC+B,OAvC/CU,YAAAyiB,EAAA,EAAAxiB,IAAA,oBAAAC,MAAA,eAAAihB,EAAA7f,YAAAC,IAAAC,MAAA,SAAA4e,IAAA,IAAApE,EAAA,OAAAza,IAAAI,MAAA,SAAA4e,GAAA,cAAAA,EAAA1e,KAAA0e,EAAAze,MAAA,UAWMnB,KAAKtB,MAAM6F,sBAAsB,CAADqb,EAAAze,KAAA,QACL,OAA9BnB,KAAKf,SAAS,CAAE8iB,KAAM,QAAQnC,EAAAxd,OAAA,wBAAAwd,EAAA1e,KAAA,EAAA0e,EAAAze,KAAA,EpB5CE,IAAI+hB,SAAQ,SAACC,GAC7B,qBAAT/hB,MAIXA,KAAKgiB,KAAK,gBAAgB,WACxBhiB,KAAKiiB,OAAOD,KAAK,UAAW,MAAM,WAChChiB,KAAKiiB,OAAOC,KAAK,CACfb,SAVqB,0EAWrBc,MAAO,uDACPC,cAAe,CAAC,kEAElBL,aoBqCwB,OAAAvD,EAAAze,KAAA,gBAGgB,OAHhBye,EAAA1e,KAAA,EAAA0e,EAAA6D,GAAA7D,EAAA,SAExBhY,QAAQqB,MAAM,oCAAmC2W,EAAA6D,IACjDzjB,KAAKf,SAAS,CAAE8iB,KAAM,kBAAkBnC,EAAAxd,OAAA,kBAKJ,OALIwd,EAAA1e,KAAA,GAKxClB,KAAKf,SAAS,CAAEqjB,YAAa,OAAO1C,EAAAze,KAAA,GAC9BV,IAAc,QAAAmf,EAAAze,KAAA,iBAOoB,OAPpBye,EAAA1e,KAAA,GAAA0e,EAAA8D,GAAA9D,EAAA,UAEpBhY,QAAQqB,MAAM,+BAA8B2W,EAAA8D,IACxC9D,EAAA8D,GAAEC,SAAW/D,EAAA8D,GAAEC,QAAQnC,OAAO,4BAA8B,GAC9DxhB,KAAKf,SAAS,CAAEqjB,YAAa,qBAG/BtiB,KAAKf,SAAS,CAAE8iB,KAAM,kBAAkBnC,EAAAxd,OAAA,yBAAAwd,EAAAze,KAAA,GAGZW,IAAoB,QAA5CuZ,EAAeuE,EAAAre,KAErBvB,KAAKf,SAAS,CAAE8iB,KAAM1G,EAAkB,MAAQ,kBAChDrb,KAAKtB,MAAMsjB,mBAAmB3G,GAAgB,yBAAAuE,EAAAje,UAAA8d,EAAA,mDAAAe,EAAA5e,MAAA,KAAAC,YAvC/C,MAuC+CigB,EA7C7B,CAASriB,IAAMc,WAsJrB+L,gBAhBS,SAAClN,GAAK,MAAM,CAClCmF,sBAAuBD,GAAyBlF,GAChDoE,iBAAkBD,GAAoBnE,GACtCqF,mBAAoBD,GAAsBpF,OAGjB,SAACmN,GAAQ,MAAM,CACxCyV,mBAAoB,SAAC3G,GACnB9O,EAAS,CACPlH,KAAM,cACNqH,QAAS,CAAE2O,yBAMF/O,CAA6CwV,I,oDC7KtD8B,GAAa,SAAAxU,GAAA7Q,YAAAqlB,EAAAxU,GAAA,IAAA5Q,EAAAC,YAAAmlB,GAAA,SAAAA,IAAA,OAAAhlB,YAAA,KAAAglB,GAAAplB,EAAAoD,MAAA,KAAAC,WAmChB,OAnCgBxC,YAAAukB,EAAA,EAAAtkB,IAAA,SAAAC,MAAA,WAWf,OAAQS,KAAKtB,MAAMmlB,QACjB,KAAKD,EAAcE,YACjB,OAAOrkB,IAAAC,cAACnC,IAAI,CAAC+Y,SAAO,EAAC1P,KAAK,UAAU9G,MAAO,CAAEd,MAAO,aACtD,KAAK4kB,EAAcG,UACjB,OAAOtkB,IAAAC,cAACtC,IAAK,CACXyC,QACEJ,IAAAC,cAACnC,IAAI,CAACqJ,KAAK,eAAe9G,MAAO,CAAEd,MAAO,aAE5CiB,QAASD,KAAKtB,MAAMslB,gBAAkB,UACtCpkB,SAAS,aACTgG,KAAK,UAET,KAAKge,EAAcK,MACjB,OAAOxkB,IAAAC,cAACtC,IAAK,CACXyC,QACEJ,IAAAC,cAACnC,IAAI,CAACqJ,KAAK,iBAAiB9G,MAAO,CAAEd,MAAO,aAE9CiB,QAASD,KAAKtB,MAAMgU,cAAgB,GACpC9S,SAAS,aACTgG,KAAK,UAET,QACE,OAAOnG,IAAAC,cAACnC,IAAI,CAACqJ,KAAK,iBAAiB9G,MAAO,CAAEd,MAAO,yBAExD4kB,EAnCgB,CAASnkB,IAAM6Q,eAAaxR,YAAzC8kB,GAAa,OAEH,QAAM9kB,YAFhB8kB,GAAa,cAII,eAAa9kB,YAJ9B8kB,GAAa,YAME,aAAW9kB,YAN1B8kB,GAAa,QAQF,SAoCFA,U,0CChDTM,GAAQ,GCODC,GAAgB,CAC3B5f,uBAAuB,EACvBjB,OAAQ,OACRN,MAAO,8BACP8C,gBAAiB,CAAC,YAAa,WAAY,MAAO,YAClD1C,qBAAsB,GACtBF,sBAAuB,GACvBM,iBATiC,GAUjCE,+BAAgC,GAChCI,UAAW,CACTqE,YAAa,IACbmC,eAAe,EACfE,iBAAiB,EACjBX,QAAS,SACTX,uBAAwB,EACxBC,cAAe,EACfC,4BAA6B,EAC7BK,kCAAmC,IACnCF,2BAA4B,IAC5BG,uBAAwB,EACxBF,kCAAmC,EACnCF,2BAA4B,EAC5BD,4BAA6B,EAC7BM,iBAAkB,iBAClBC,oBAAqB,SACrBO,UAAW,mBAEbnG,WAAY,CACV+G,YAAa,YAEf7G,WAAY,CACViE,YAAa,IACb+C,eAAe,EACfkZ,iBAAkB,UAEpBhgB,YAAa,CACX+D,YAAa,IACbE,SAAU,EACVE,SAAU,EACVC,WAAW,EACXK,uCAAuC,GAEzCpE,mBAAoB,6FAIhB4f,GAAmC,CACvC,uBAAwB,yBAGbC,GAA2B,WAUtC,OAR8BD,GAAiCxf,QAAO,SAACC,EAAKxF,GAC1E,IAAM8O,EDhCe,SAACzG,GACxB,IACE,IAAM4c,EAAkBC,aAAaC,QAAQ9c,GACvC+c,EAAaC,KAASC,WAAWL,GAGvC,GAFAL,GAAMvc,GAAS+c,EAEI,OAAfA,EACF,OAGF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QCoBUC,CAAU1lB,GAIpB,YAHUyK,IAANqE,IACFtJ,EAAIxF,GAAO8O,GAENtJ,IACN,KAKCmgB,GAAyB,CAC7BjiB,MAAO,QACP8C,gBAAiB,OACjBgB,WAAY,QACZpD,+BAAgC,eAChCE,wCAAyC,kBACzCE,UAAW,YACXE,WAAY,aACZE,WAAY,aACZE,YAAa,cACbK,mBAAoB,eAGTygB,GAAsB,WAEjC,IAAMC,EAA0B5e,OAAOC,QAAQye,IAAwBpgB,QACrE,SAACC,EAAG2B,GAAoB,IAAD/F,EAAAgG,YAAAD,EAAA,GAAhBnH,EAAGoB,EAAA,GAAEnB,EAAKmB,EAAA,GACf,OAAAyF,YAAA,GAAYrB,EAAGhG,YAAA,GAAGS,EAAQD,MACzB,IACC8lB,EAAapE,OAAOqE,SAASC,KAAKjS,QAAQ,KAAM,IAwBtD,OAtByB+R,EACvBA,EAAW7T,MAAM,KAAK1M,QAAO,SAACC,EAAKygB,GACjC,IAAMC,EAAeD,EAAShU,MAAM,KAC9BjS,EAAOkmB,EAAa,KAAML,EAA2BA,EAAwBK,EAAa,IAAMA,EAAa,GACnH,GAAY,UAARlmB,EACFwF,EAAGqB,YAAA,GAAQrB,EAAGhG,YAAA,GAAGQ,EAAMkmB,EAAa,UAEpC,IACE1gB,EAAIxF,GAAOmmB,KAAMX,MAAMU,EAAa,IACpC,MAAO/U,GACP7I,QAAQqB,MAAM,gCAAkCuc,EAAa,GAAI,KAAMA,EAAa,IAQxF,QALK1gB,EAAIxF,IAA6B,kBAAbwF,EAAIxF,IAAsD,IAAjCiH,OAAO2M,KAAKpO,EAAIxF,IAAM6N,gBAE/DrI,EAAIxF,GAGNwF,IACN,IACD,IAiBO4gB,GAA2B,SAACtmB,GAGvCilB,GAAiCpf,SAAQ,SAAC3F,ID5HnB,SAACqI,EAAOvI,GAC/B,IACE,IAAMslB,EAAaG,KAAKc,UAAUvmB,GAClC,GAAI8kB,GAAMvc,KAAW+c,EACnB,OAEF9c,QAAQiD,KAAK,6BAADnD,OAA8BC,IAC1C,IAAM4c,EAAkBI,KAASiB,SAASlB,GAC1CF,aAAaqB,QAAQle,EAAO4c,GAC5BL,GAAMvc,GAAS+c,EACf,MAAOK,GACPnd,QAAQiD,KAAK,yBAA0BlD,EAAOvI,EAAO2lB,ICkHrDe,CAAUxmB,EAAKF,EAAME,OAIvB,IAAM8lB,EAAa7e,OAAO2M,KAAK9T,GAC5BgG,QAAO,SAAC9F,GAAG,OAAMA,KAAO2lB,MACxBpgB,QAAO,SAACkhB,EAAkBzmB,GACzB,IAAMC,EAAgB,UAARD,EAAkBF,EAAME,GAAK+T,QAAQ,IAAK,IAAMoS,KAAME,UAAUvmB,EAAME,IACpF,MAAM,GAANoI,OAAA9C,YACKmhB,GAAgB,IAAAre,OAChBud,GAAuB3lB,GAAI,KAAAoI,OAAInI,OAEnC,IAAI2S,KAAK,KAEd8O,OAAOqE,SAASC,KAAI,IAAA5d,OAAO0d,I,6jBCvI7B,IAAMY,GAAYhpB,IAAOU,IAAGR,MAWtB+oB,GAAcjpB,YAAOkpB,KAAPlpB,CAAaK,MAK3B6R,GAAelS,YAAO0O,IAAP1O,CAAcQ,MAK7B2oB,GAAgBnpB,YAAO0O,IAAP1O,CAAcW,MAI9ByoB,GAAmB,SAAAhX,GAAA7Q,YAAA6nB,EAAAhX,GAAA,IAAA5Q,EAAAC,YAAA2nB,GAEvB,SAAAA,EAAY1nB,GAAQ,IAADC,EAOhB,OAPgBC,YAAA,KAAAwnB,GACjBznB,EAAAH,EAAAK,KAAA,KAAMH,GAAMI,YAAAC,YAAAJ,GAAA,wCAAA8H,EAAA9F,YAAAC,IAAAC,MAkBW,SAAA4e,EAAO3X,EAAKue,GAAqB,IAAAnV,EAAAoV,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApZ,EAAA,OAAAjN,IAAAI,MAAA,SAAA4e,GAAA,cAAAA,EAAA1e,KAAA0e,EAAAze,MAAA,OAItC,GAJsC+P,EAKpDvS,EAAKD,MAHP4nB,EAAWpV,EAAXoV,YACAC,EAAwBrV,EAAxBqV,yBACAC,EAAgBtV,EAAhBsV,iBAGG1e,EAAI,CAAD8X,EAAAze,KAAA,QAGsB,OAD5BqlB,EAAgBrgB,YAAC,GAAKge,GAAc,GAAI,CAAEliB,KAAMqkB,EAAYrkB,QAC5DskB,EAAyB,IAAG3G,EAAAxd,OAAA,iBAW9B,GALKikB,IACHI,EAAwBnC,KACxBoC,EAAmBxB,OAII,IAArBpd,EAAI0Z,OAAO,OAAoC,IAArB1Z,EAAI0Z,OAAO,KAAW,CAAA5B,EAAAze,KAAA,cAC5C,IAAI+lB,MAAM,iBAADxf,OAAkBI,EAAG,MAAI,OAU1C,OAPM6e,GAAkC,IAAzB7e,EAAI0Z,OAAO,WAA2C,IAAxB1Z,EAAI0Z,OAAO,QAClDoF,GAAkC,IAAzB9e,EAAI0Z,OAAO,SACpBqF,GAAaF,IAAWC,EAK9BhH,EAAAze,KAAA,GAEuBgmB,MAAMrf,GAAI,QAAnB,IAARgf,EAAQlH,EAAAre,MACA6lB,GAAG,CAADxH,EAAAze,KAAA,eACR,IAAI+lB,MAAM,6BAADxf,OAA8Bof,EAASO,WAAW9O,cAAa,MAAA7Q,OAAKof,EAASjD,OAAM,MAAI,eAAAjE,EAAAze,KAAA,GAG7E2lB,EAASQ,OAAM,QAEvB,GAFbP,EAAYnH,EAAAre,MAEdylB,EAAW,QACGL,IAAUE,EAAU,CAAAjH,EAAAze,KAAA,SAAAye,EAAA1e,KAAA,GAElC8lB,EAAWO,KAAKC,SAAST,GAAanH,EAAAze,KAAA,uBAAAye,EAAA1e,KAAA,GAAA0e,EAAA6D,GAAA7D,EAAA,UAEhC,IAAIsH,MAAM,8BAADxf,OAA+BI,EAAG,MAAAJ,OAAAkY,EAAA6D,KAAS,WAIzDuD,IAAaJ,IAAUC,EAAU,CAAAjH,EAAAze,KAAA,SAAAye,EAAA1e,KAAA,GAElC8lB,EAAWnC,KAAKC,MAAMiC,GAAanH,EAAAze,KAAA,uBAAAye,EAAA1e,KAAA,GAAA0e,EAAA8D,GAAA9D,EAAA,UAE7B,IAAIsH,MAAM,8BAADxf,OAA+BI,EAAG,MAAAJ,OAAAkY,EAAA8D,KAAS,WAIzDsD,EAAS,CAADpH,EAAAze,KAAA,eACL,IAAI+lB,MAAM,uCAADxf,OAAwCI,IAAM,QAMzDmf,EAAmB1gB,OAAO2M,KAAKoT,GAAazhB,QAAO,SAACC,EAAKxF,GAC7D,OAAIA,KAAO0nB,EACT7gB,YAAA,GAAYrB,EAAGhG,YAAA,GAAGQ,EAAM0nB,EAAS1nB,KAE5BwF,IACN,IAEH8C,QAAQC,IAAI,oCAAqCof,GAG7CpZ,EAAQ1H,YAAA,GAAQmgB,EAAY,GAAIW,GAC/BZ,IACHze,QAAQC,IAAI,uCAAwC4e,GACpD7e,QAAQC,IAAI,kCAAmC6e,GAC/C7Y,EAAQ1H,YAAA,GAAQ0H,EAAS,GAAI4Y,EAAsB,GAAIC,IAGzD9e,QAAQC,IAAI,0BAA2BgG,GACvC2Y,EAAiB3Y,GACjB0Y,EAAyBze,GAAI,yBAAA8X,EAAAje,UAAA8d,EAAA,4BAC9B,gBAAAW,EAAAqH,GAAA,OAAAhhB,EAAA7E,MAAA,KAAAC,YAxGa,IAwGb/C,YAAAC,YAAAJ,GAAA,yCAAA+B,EAAAC,YAAAC,IAAAC,MAEyB,SAAAC,EAAOgH,GAAG,IAAAue,EAAAqB,EAAAC,EAAAC,EAAAC,EAAAhmB,UAAA,OAAAjB,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAajC,OAbmCklB,EAAqBwB,EAAA1a,OAAA,QAAApD,IAAA8d,EAAA,IAAAA,EAAA,GAEzDlpB,EAAKM,SAAS,CAAE6oB,cAAelE,GAAcE,cAEzChc,EAAIqa,WAAW,uBAEjBra,EAAMA,EAAIuL,QAAQ,qBAAsB,qCAAqCA,QAAQ,QAAS,KACrFvL,EAAIqa,WAAW,mCAAqCra,EAAIqa,WAAW,YAEtEuF,EAAW5f,EAAIuL,QAAQ,QAAS,IAAIA,QAAQ,kCAAmC,IAAI9B,MAAM,KACzFoW,EAAaD,EAAS,GACtBE,EAAaF,EAASvP,MAAM,GAAGjG,KAAK,KAC1CpK,EAAG,WAAAJ,OAAcigB,EAAU,4BAAAjgB,OAA2BkgB,IACvD3mB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIOxC,EAAKopB,uBAAuBjgB,EAAKue,GAAsB,OAE7D1nB,EAAKM,SAAS,CAAE6oB,cAAelE,GAAcG,UAAWC,eAAgBlc,EAAM,+CAAiD,mCAAmC7G,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAwiB,GAAAxiB,EAAA,SAElKtC,EAAKM,SAAS,CAAE6oB,cAAelE,GAAcK,MAAOvR,aAAczR,EAAAwiB,GAAElG,aAAa,eAAAtc,EAAAE,KAAA,GAI7E0a,KAAM,KAAM,QACdld,EAAKS,MAAM0oB,gBAAkBlE,GAAcE,aAC7CnlB,EAAKM,SAAS,CAAE6oB,cAAelE,GAAcoE,KAAMtV,aAAc,KAClE,yBAAAzR,EAAAU,UAAAb,EAAA,kBACF,gBAAAmnB,GAAA,OAAAvnB,EAAAkB,MAAA,KAAAC,YA/BA,IA+BA/C,YAAAC,YAAAJ,GAAA,yBAEuB,WAEtB,IAAMupB,EAAgB,CAAC,OAAQ,UACzBC,EAAuB5hB,OAAO2M,KAAKvU,EAAKD,MAAM4nB,aAAazhB,QAAO,SAACC,EAAKxF,GAI5E,OAHK4oB,EAAcjiB,SAAS3G,KAC1BwF,EAAIxF,GAAOX,EAAKD,MAAM4nB,YAAYhnB,IAE7BwF,IACN,IAEH,OAAOsjB,mBAAmBvD,KAAKc,UAAUwC,EAAsB,KAAM,OAlJrExpB,EAAK0pB,eAAiB3pB,EAAM+F,oBAAsB,GAClD9F,EAAKS,MAAQ,CACX0oB,cAAelE,GAAcoE,KAC7BhE,eAAgB,GAChBtR,aAAc,IACf/T,EAiLF,OAhLAU,YAAA+mB,EAAA,EAAA9mB,IAAA,oBAAAC,MAAA,eAAAihB,EAAA7f,YAAAC,IAAAC,MAAA,SAAAmB,IAAA,IAAAyC,EAAA,OAAA7D,IAAAI,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAG2B,KAAlBsD,EAAuBzE,KAAKtB,MAA5B+F,oBACe,CAADtC,EAAAhB,KAAA,QAEoC,OAAxDyG,QAAQC,IAAI,wBAAyBpD,GAAmBtC,EAAAhB,KAAA,EAClDnB,KAAKsoB,wBAAwB7jB,GAAoB,GAAM,wBAAAtC,EAAAR,UAAAK,EAAA,mCAAAwe,EAAA5e,MAAA,KAAAC,YAPhE,IAOgE,CAAAvC,IAAA,SAAAC,MAAA,WAwIvD,IAADC,EAAA,KAELiF,EACEzE,KAAKtB,MADP+F,mBAGF,OACEhF,IAAAC,cAACsmB,GAAS,CAACuC,MAAM,UACf9oB,IAAAC,cAACumB,GAAW,CACVte,MAAM,oBACNmK,aAAcrN,EACdwN,YAAY,kHACZ5R,SAAU,SAACoQ,GAAQjR,EAAK6oB,eAAiB5X,EAAEuB,OAAOzS,OAClDwS,QAAS,SAACtB,GAAC,OAAmB,KAAdA,EAAE2J,SAAkB5a,EAAK8oB,wBAAwB7X,EAAEuB,OAAOzS,OAAO,MAEnFE,IAAAC,cAACwP,GAAY,CACXjP,QAAQ,QACRmM,QAAS,kBAAM5M,EAAK8oB,wBAAwB9oB,EAAK6oB,gBAAgB,MAEnE5oB,IAAAC,cAACkkB,GAAa,CACZC,OAAQ7jB,KAAKZ,MAAM0oB,cACnBpV,aAAc1S,KAAKZ,MAAMsT,aACzBsR,eAAgBhkB,KAAKZ,MAAM4kB,iBAE7BvkB,IAAAC,cAACtC,IAAK,CACJ6C,QAAQ,oLACRL,SAAS,eACTC,QACEJ,IAAAC,cAAA,KAAG8oB,SAAS,gBAAgBrN,KAAI,gCAAAzT,OAAkC1H,KAAKyoB,0BACrEhpB,IAAAC,cAACymB,GAAa,CAACva,KAAK,qBAK/Bwa,EA1LsB,CAAS3mB,IAAM6Q,eAwNzBhE,gBApBS,SAAClN,GAAK,MAAM,CAClCknB,YAAalnB,EACbqF,mBAAoBD,GAAsBpF,OAGjB,SAACmN,GAAQ,MAAM,CACxCga,yBAA0B,SAACmC,GACzBnc,EAAS,CACPlH,KAAM,8BACNsI,SAAU+a,KAGdlC,iBAAkB,SAACpnB,GACjBmN,EAAS,CACPlH,KAAM,qBACNwI,SAAUzO,QAKDkN,CAA6C8Z,I,odCtP5D,IAAMJ,GAAYhpB,IAAOU,IAAGR,MAMtByrB,GAAoB3rB,YAAOue,IAAKG,OAAZ1e,CAAmBK,KAFtB,KAOjBurB,GAAqB5rB,YAAOue,IAAKG,OAAZ1e,CAAmBQ,KAPvB,KAYjBqrB,GAAe7rB,YAAOue,IAAKG,OAAZ1e,CAAmBW,KACd,KAIX,qBACb8B,IAAAC,cAACsmB,GAAS,KACRvmB,IAAAC,cAAC6b,IAAI,KACH9b,IAAAC,cAAC6b,IAAKC,IAAG,KACP/b,IAAAC,cAACipB,GAAiB,KAAClpB,IAAAC,cAACoa,GAAW,OAC/Bra,IAAAC,cAACmpB,GAAY,KACXppB,IAAAC,cAACsQ,GAAM,MACPvQ,IAAAC,cAACoiB,GAAe,MAChBriB,IAAAC,cAAC0mB,GAAmB,OAEtB3mB,IAAAC,cAACkpB,GAAkB,KAACnpB,IAAAC,cAACmb,GAAY,W,mBC0HnCiO,GAAgBC,aAAgBxiB,OAAOyiB,OAAO,CAClDzkB,sBAAuB6I,GACvB9J,OAAQ8J,GACRpK,MAAOqK,GAAyB,eAAgB,IAChDnK,sBAAuB4K,GAAmB,6BAC1C1K,qBAAsB0K,GAAmB,4BACzChI,gBAAiBgI,GAAmB,sBACpCtK,iBAzJ8B,SAACpE,EAAOsO,GACtC,OAAKA,GAAWA,EAAOtH,cAAiBsH,EAAO1I,KAIxC5F,EAAMkG,KAAI,SAACP,GAChB,GAAIA,EAASqB,eAAiBsH,EAAOtH,aACnC,OAAOrB,EAGT,IAAIkkB,EACJ,OAAQvb,EAAOrI,MACb,IAAK,WACH4jB,EAAWrkB,YAAO8I,EAAO1I,MACzB,MAEF,IAAK,WACH,IAAMkkB,EAAgBnkB,EAASC,KAAKM,KAAI,SAACJ,GAAG,OAAKA,EAAI0B,QACrDqiB,EAAW,GAAAvhB,OAAA9C,YAAOG,EAASC,MAAIJ,YAAK8I,EAAO1I,KAAKI,QAAO,SAACF,GAAG,OAAMgkB,EAAcjjB,SAASf,EAAI0B,WAC5F,MAEF,QACEqiB,EAAclkB,EAASC,KAO3B,OAJYmB,YAAA,GACPpB,EAAS,CACZC,KAAMikB,OAzBD7pB,GAAS,IAwJlBsE,+BAxH4C,SAACtE,EAAOsO,GACpD,IAAKA,IAAWA,EAAOtH,eAAiB4H,MAAMC,QAAQP,EAAO/G,kBAC3D,OAAOvH,GAAS,GAElB,IAAM+pB,EAAe/pB,EAAMsO,EAAOtH,eAAiB,GACnD,OAAQsH,EAAOrI,MACb,IAAK,yBACL,IAAK,yBACL,IAAK,4BACH,IAAI+jB,EACJ,GAAoB,2BAAhB1b,EAAOrI,KACT+jB,EAAcpb,MAAMqU,KAAK,IAAI5c,IAAIiI,EAAO/G,wBACnC,GAAoB,2BAAhB+G,EAAOrI,KAChB+jB,EAAcpb,MAAMqU,KAAK,IAAI5c,IAAI,GAADiC,OAAA9C,YAAKukB,GAAYvkB,YAAK8I,EAAO/G,yBACxD,CACL,IAAMwH,EAAiBT,EAAO/G,iBAC9ByiB,EAAcD,EAAa/jB,QAAO,SAACgJ,GAAC,OAAMD,EAAelI,SAASmI,MAGpE,OAAAjI,YAAA,GACK/G,EAAKN,YAAA,GACP4O,EAAOtH,aAAegjB,IAG3B,QACExhB,QAAQyhB,MAAM,wBAAD3hB,OAAyBgG,EAAOrI,OAGjD,OAAOjG,GA6FPwE,wCAzFqD,SAACxE,EAAOsO,GAC7D,IAAKA,IAAWA,EAAOtH,eAAkBsH,EAAOd,2BAA6Bc,EAAOb,qCAClF,OAAOzN,GAAS,GAGlB,IAAM2N,EAAc3N,EAAMsO,EAAOtH,eAAiB,GAC5CkjB,EAAmCvc,EAAYrE,iBAAmB,GAClE6gB,EAA+Cxc,EAAYnE,gBAAkB,GAC/E4gB,EAAkCF,EAClCG,EAA8CF,EAElD,OAAQ7b,EAAOrI,MACb,IAAK,uBACL,IAAK,uBACL,IAAK,0BAEDmkB,EADkB,yBAAhB9b,EAAOrI,KACsBc,YAAA,GAAQmjB,EAAiC,GAAI5b,EAAOd,0BAC1D,yBAAhBc,EAAOrI,KACkB2I,MAAMqU,KAAK,IAAI5c,IAAI,GAADiC,OAAA9C,YAC/C2B,OAAO2M,KAAKoW,IAAiC1kB,YAC7C2B,OAAO2M,KAAKxF,EAAOd,8BACpB/H,QAAO,SAACC,EAAKkE,GAGf,OAFAlE,EAAIkE,GAAWgF,MAAMqU,KAAK,IAAI5c,IAAI,GAADiC,OAAA9C,YAAM0kB,EAAiCtgB,IAAY,IAAEpE,YAAO8I,EAAOd,yBAAyB5D,IAAY,OAElIlE,IACN,IAE+ByB,OAAO2M,KAAKoW,GAAkCzkB,QAAO,SAACC,EAAKkE,GAC3F,IAAMmF,EAAiBT,EAAOd,yBAAyB5D,IAAY,GAC7DogB,GAAeE,EAAiCtgB,IAAY,IAAI5D,QAAO,SAACgJ,GAAC,OAAMD,EAAelI,SAASmI,MAI7G,OAHIgb,EAAYjc,OAAS,IACvBrI,EAAIkE,GAAWogB,GAEVtkB,IACN,IAEL,MAGF,IAAK,yBACH2kB,EAA2CtjB,YAAA,GACtCojB,EAA6C,GAC7C7b,EAAOb,sCAEZtG,OAAO2M,KAAKxF,EAAOb,sCAAsC5H,SAAQ,SAAC+D,GAChE,IAAM0gB,EAAqCH,EAA6CvgB,IAAY,GAC9F2gB,EAAgCjc,EAAOb,qCAAqC7D,GAC5E4gB,EAAiCzjB,YAAA,GAClCujB,EAAmC,GACnCC,GAELpjB,OAAOC,QAAQmjB,GAA+B1kB,SAC5C,SAAAwB,GAAmC,IAAD/F,EAAAgG,YAAAD,EAAA,GAAhCkC,EAAUjI,EAAA,GAAEkI,EAAclI,EAAA,GACpBmpB,EAAoB1jB,YAAA,GACrBujB,EAAmC/gB,IAAe,GAAG,GACrDC,GAELghB,EAAkCjhB,GAAckhB,KAEpDJ,EAA4CzgB,GAAW4gB,KAEzD,MAGF,QAEE,OADAhiB,QAAQyhB,MAAM,wBAAD3hB,OAAyBgG,EAAOrI,OACtCjG,EAIX,OAAA+G,YAAA,GACK/G,EAAKN,YAAA,GACP4O,EAAOtH,aAAe,CACrBsC,gBAAiB8gB,EACjB5gB,eAAgB6gB,MAgBpB3iB,WAAYuG,GAAyB,qBAAsB,IAC3DvJ,UAAW8J,GAA0B,qBACrC5J,WAAY4J,GAA0B,sBACtC1J,WAAY0J,GAA0B,sBACtCxJ,YAAawJ,GAA0B,uBACvC3L,KAAM2L,GAA0B,eAChCnJ,mBAAoB4I,GAAyB,8BAA+B,KAC3Eyc,KAGGC,GAAc,SAAC3qB,EAAOsO,GAC1B,GAAoB,uBAAhBA,EAAOrI,KACT,OAAOqI,EAAOG,SAGhB,IAAMmc,EAAYlB,GAAc1pB,EAAOsO,GAGvC,OADAgY,GAAyBsE,GAClBA,GAUIC,GAAmB,WAE9B,IAAM1c,EHnF2B,WAEjC,IAAMkZ,EAAwBnC,KACxBoC,EAAmBxB,KAKzB,OAFkB/e,YAAA,GAAQge,GAAc,GAAIsC,EAAsB,GAAIC,GG6EjDwD,GAIrB,OAFAtiB,QAAQC,IAAI,yBAA0B0F,GAE/B4c,aAAYJ,GAAaxc,EAAc6c,aAAQC,aAAgBC,SCjMzDC,OAPf,WACE,OACE9qB,IAAAC,cAAC8qB,IAAQ,CAACC,MAAOR,MACfxqB,IAAAC,cAACgrB,GAAU,QCJjBC,IAASC,OAAOnrB,IAAAC,cAAC6qB,GAAG,MAAKM,SAASC,eAAe,W","file":"static/js/main.17560cf0.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Icon, Popup } from 'semantic-ui-react'\n\nexport const CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nexport const StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nexport const ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nexport const OptionDiv = styled.div`\n  padding-top: 3px;\n  z-index: 100000;\n`\n\nexport const OptionInputDiv = styled(OptionDiv)`\n  margin: 10px 0px; \n`\n\nexport const OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n","/* eslint-disable react/require-optimization */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { SwatchesPicker } from 'react-color'\nimport { Popup } from 'semantic-ui-react'\n\nconst ColorSwatchBorder = styled.div`\n  display: inline-block;\n  cursor: pointer;\n  border-radius: 2px;\n  padding: 1px 2px;\n  background: #fff;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n`\n\nconst ColorSwatch = styled.div`\n  display: inline-block;\n  cursor: pointer;\n  border-radius: 2px;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n  width: 10px;\n  height: 12px;\n`\n\nconst StyledPopup = styled(Popup).attrs({ flowing: true })`\n  padding: 0px !important;\n  div {\n    overflow-y: visible !important;\n  }\n`\n\n/*\nconst ApplyButton = styled(Button)`\n  margin-top: 15px !important;\n`\n<div style={{ textAlign: 'center' }}><ApplyButton onClick={() => this.handleApply(this.state.color)}>Apply</ApplyButton></div>\n*/\n\nclass ColorPicker extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = { color: this.props.color }\n  }\n\n  handleChange = (color) => {\n    this.setState({ color })\n  }\n\n  handleApply = (color) => {\n    this.props.colorChangedHandler(color.hex)\n  }\n\n  render() {\n    return (\n      <StyledPopup\n        on=\"click\"\n        position=\"left center\"\n        trigger={\n          <ColorSwatchBorder>\n            <ColorSwatch style={{ background: this.state.color }} />\n          </ColorSwatchBorder>\n        }\n        content={\n          <SwatchesPicker\n            color={this.state.color}\n            onChangeComplete={this.handleApply}\n            onChange={(newColor) => this.setState({ color: newColor })}\n          />\n        }\n      />\n    )\n  }\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.string.isRequired,\n  colorChangedHandler: PropTypes.func.isRequired,\n}\n\nexport default ColorPicker\n","\nexport const SJ_MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\nexport const SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n\nexport const GCNV_DEFAULT_HIGHLIGHT_COLOR = 'blue'\n","/* eslint-disable no-undef */\n\nconst TGG_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise((resolve) => {\n  if (typeof gapi === 'undefined') {\n    return\n  }\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        clientId: TGG_VIEWER_CLIENT_ID,\n        scope: 'https://www.googleapis.com/auth/devstorage.read_only',\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest'],\n      })\n      resolve()\n    })\n  })\n})\n\nexport const isSignedIn = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (!authInstance) {\n    return false\n  }\n  return authInstance.isSignedIn.get()\n}\n\nexport const googleSignIn = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (authInstance && !authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (!authInstance) {\n    return null\n  }\n  const user = authInstance && authInstance.currentUser && authInstance.currentUser.get()\n  const profile = user && user.getBasicProfile()\n  return profile && profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance && authInstance.currentUser && authInstance.currentUser.get()\n  if (!authInstance) {\n    return null\n  }\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith('gs://')) {\n    console.error(`${gsPath} doesn't start with \"gs://\"`)\n    return []\n  }\n\n  const gsPathParts = gsPath.split('/')\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"`)\n    return []\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults: 1000 })\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable object-shorthand */\n/* eslint-disable array-callback-return */\n\nimport { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { SJ_MOTIFS, SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD, GCNV_DEFAULT_HIGHLIGHT_COLOR } from '../constants'\n\nexport const getLocus = (state) => state.locus\nexport const getRightSideBarLocusList = (state) => state.rightSideBarLocusList\nexport const getLeftSideBarLocusList = (state) => state.leftSideBarLocusList\nexport const getGenome = (state) => state.genome\nexport const getDataTypesToShow = (state) => state.dataTypesToShow\nexport const getRowsInCategories = (state) => state.rowsInCategories\nexport const getSelectedRowNamesByCategoryName = (state) => state.selectedRowNamesByCategoryName\nexport const getSelectedSamplesByCategoryNameAndRowName = (state) => state.selectedSamplesByCategoryNameAndRowName\nexport const getTrackOrder = (state) => state.trackOrder\nexport const getSjOptions = (state) => state.sjOptions\nexport const getVcfOptions = (state) => state.vcfOptions\nexport const getBamOptions = (state) => state.bamOptions\nexport const getGcnvOptions = (state) => state.gcnvOptions\nexport const getUser = (state) => state.user\nexport const getIsGoogleLoginRequired = (state) => state.isGoogleLoginRequired\nexport const getInitialSettingsUrl = (state) => state.initialSettingsUrl\n\nexport const getAllDataTypes = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return [...rowsInCategories.reduce((acc, category) => {\n      category.rows.forEach((row) => {\n        if (row.data) {\n          const dataTypes = row.data.filter((data) => data.type).map((data) => data.type)\n          dataTypes.forEach((dataType) => {\n            acc.add(dataType)\n          })\n        }\n      })\n      return acc\n    }, new Set())]\n  })\n\n\nexport const getDataTypesUsersCanToggle = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return [...rowsInCategories.reduce((acc, category) => {\n      category.rows.forEach((row) => {\n        if (row.data) {\n          const dataTypes = row.data.filter((data) => data.type).map((data) => data.type)\n          if (new Set(dataTypes).size >= 2) { // only include data types when a row has more than one data type\n            dataTypes.forEach((dataType) => {\n              acc.add(dataType)\n            })\n          }\n        }\n      })\n      return acc\n    }, new Set())]\n  })\n\nexport const getEnabledDataTypes = createSelector(\n  getAllDataTypes,\n  getDataTypesUsersCanToggle,\n  getDataTypesToShow,\n  (allDataTypes, dataTypesUsersCanToggle, dataTypesToShow) => {\n    return allDataTypes.filter((dataType) => (dataTypesUsersCanToggle.includes(dataType) ? dataTypesToShow.includes(dataType) : true))\n  })\n\nexport const getRowsByCategoryName = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return rowsInCategories.reduce((acc, category) => {\n      return { ...acc, [category.categoryName]: category.rows }\n    }, {})\n  })\n\n\nexport const getSelectedRowsByCategoryName = createSelector(\n  getSelectedRowNamesByCategoryName,\n  getRowsByCategoryName,\n  (selectedRowNamesByCategoryName, rowsByCategoryName) => {\n    return Object.entries(selectedRowNamesByCategoryName).reduce((acc, [categoryName, selectedRowNames]) => {\n      if (!rowsByCategoryName[categoryName]) {\n        return acc\n      }\n      return { ...acc, [categoryName]: rowsByCategoryName[categoryName].filter((row) => selectedRowNames.includes(row.name)) }\n    }, {})\n  })\n\n\nexport const getTracks = createSelector(\n  getSelectedRowsByCategoryName,\n  getSelectedSamplesByCategoryNameAndRowName,\n  getTrackOrder,\n  getEnabledDataTypes,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  getGcnvOptions,\n  (\n    selectedRowsByCategoryName,\n    selectedSamplesByCategoryNameAndRowName,\n    trackOrderArray,\n    enabledDataTypes,\n    sjOptions,\n    vcfOptions,\n    bamOptions,\n    gcnvOptions,\n  ) => {\n    const igvTracks = []\n\n    Object.entries(selectedRowsByCategoryName).forEach(([categoryName, selectedRows]) => selectedRows.forEach((row, i) => {\n      let junctionsTrack\n      let coverageTrack\n      (row.data || []).forEach((data, j) => {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n        if (!enabledDataTypes.includes(data.type)) {\n          console.log(`Skipping hidden track: ${data.url}`)\n          return\n        }\n\n        const computeTrackOrder = (trackName) => {\n          let trackOrder = trackOrderArray.indexOf(trackName) //add category as prefix to trackOrder strings?\n          if (trackOrder !== -1) {\n            trackOrder += 50000\n          } else {\n            trackOrder = i * 100 + j //default track order\n          }\n          return trackOrder\n        }\n\n        if (data.type === 'gcnv_bed') { // && vcfOptions.showGcnv\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || ''}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'gcnv',\n            format: 'gcnv',\n            name: trackName,\n            url: data.url,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            height: gcnvOptions.trackHeight,\n            min: gcnvOptions.trackMin,\n            max: gcnvOptions.trackMax,\n            autoscale: gcnvOptions.autoscale,\n            highlightSamples: (((selectedSamplesByCategoryNameAndRowName[categoryName] || {}).selectedSamples || {})[row.name] || []).reduce(\n              (acc, sampleName) => {\n                acc[sampleName] = ((((selectedSamplesByCategoryNameAndRowName[categoryName] || {}).sampleSettings || {})[row.name] || {})[sampleName] || {}).color || GCNV_DEFAULT_HIGHLIGHT_COLOR\n                return acc\n              }, {}),\n            onlyHandleClicksForHighlightedSamples: gcnvOptions.onlyHandleClicksForHighlightedSamples,\n            oauthToken: getGoogleAccessToken,\n            order: trackOrder,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n        else if (data.type === 'junctions') {\n          if (junctionsTrack) {\n            console.error('More than one \"junctions\" track found in row', row)\n            return\n          }\n\n          junctionsTrack = {\n            type: 'spliceJunctions',\n            format: 'bed',\n            url: data.url,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            oauthToken: getGoogleAccessToken,\n            name: row.name,\n            order: computeTrackOrder(row.name),\n            height: sjOptions.trackHeight,\n            minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n            minTotalReads: sjOptions.minTotalReads,\n            maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n            minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n            minSamplesWithThisJunction: sjOptions.minSamplesWithThisJunction,\n            maxSamplesWithThisJunction: sjOptions.maxSamplesWithThisJunction,\n            minPercentSamplesWithThisJunction: sjOptions.minPercentSamplesWithThisJunction,\n            maxPercentSamplesWithThisJunction: sjOptions.maxPercentSamplesWithThisJunction,\n            minJunctionEndsVisible: sjOptions.minJunctionEndsVisible,\n            thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n            bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n            colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n            colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n            hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n            labelWith: sjOptions.labelWith,\n            labelWithInParen: sjOptions.labelWithInParen,\n            hideAnnotatedJunctions: sjOptions.hideAnnotated,\n            hideUnannotatedJunctions: sjOptions.hideUnannotated,\n            hideMotifs: SJ_MOTIFS.filter((motif) => sjOptions[`hideMotif${motif}`]), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n            rowName: row.name,\n            categoryName: categoryName,\n          }\n        }\n        else if (data.type === 'coverage') {\n          if (coverageTrack) {\n            console.error('More than one \"coverage\" track found in row', row)\n            return\n          }\n\n          coverageTrack = {\n            type: 'wig',\n            format: 'bigwig',\n            url: data.url,\n            oauthToken: getGoogleAccessToken,\n            name: row.name,\n            order: computeTrackOrder(row.name),\n            height: sjOptions.trackHeight,\n            rowName: row.name,\n            categoryName: categoryName,\n          }\n\n          if (data.url.includes('spliceai')) {\n            coverageTrack.color = (value) => {\n              let c\n              if (value < 0.5) {\n                c = 'rgb(180,180,180)'\n              }\n              else if (value < 0.8) {\n                c = 'rgb(180,180,0)'\n              }\n              else {\n                c = 'rgb(200,0,0)'\n              }\n\n              return c\n            }\n          }\n        }\n        else if (['bed', 'gff3', 'gtf', 'genePred', 'genePredExt', 'peaks', 'narrowPeak', 'broadPeak', 'bigBed', 'bedpe'].includes(data.type)) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || ''}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) ${data.type} track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'annotation',\n            format: data.type,\n            name: trackName,\n            order: trackOrder,\n            url: data.url,\n            delimiter: data.delimiter,\n            nameField: data.nameField,\n            oauthToken: getGoogleAccessToken,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            height: 100,\n          })\n\n          console.warn('Adding track', {\n            type: 'annotation',\n            format: data.type,\n            name: trackName,\n            order: trackOrder,\n            url: data.url,\n            delimiter: data.delimiter,\n            nameField: data.nameField,\n            oauthToken: getGoogleAccessToken,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            height: 100,\n          })\n        }\n        else if ((data.type === 'vcf' || data.url.includes('.vcf')) && enabledDataTypes.includes('vcf')) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || 'vcf'}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'variant',\n            format: 'vcf',\n            url: data.url,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            indexed: true,\n            name: trackName,\n            order: trackOrder,\n            displayMode: vcfOptions.displayMode,\n            oauthToken: getGoogleAccessToken,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n        else if (data.type === 'alignment' || data.url.includes('.bam') || data.url.includes('.cram')) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || 'bam'}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'alignment',\n            url: data.url,\n            indexURL: data.indexURL || (`${data.url}`.endsWith('cram') ? `${data.url}.crai` : `${data.url}`.endsWith('bam') ? `${data.url}.bai` : null),\n            indexed: true,\n            name: trackName,\n            order: trackOrder,\n            height: bamOptions.trackHeight,\n            colorBy: bamOptions.colorBy,\n            viewAsPairs: bamOptions.viewAsPairs,\n            showSoftClips: bamOptions.showSoftClips,\n            oauthToken: getGoogleAccessToken,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n      })\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${junctionsTrack.name} (${junctionsTrack.url} & ${coverageTrack.url}) track: order ${junctionsTrack.order}`)\n        igvTracks.push({\n          type: 'merged',\n          name: junctionsTrack.name,\n          order: junctionsTrack.order,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          rowName: row.name,\n          categoryName: categoryName,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${junctionsTrack.name} (${junctionsTrack.url}) track: order ${junctionsTrack.order}`)\n        igvTracks.push(junctionsTrack)\n      } else if (coverageTrack) {\n        console.log(`Adding ${coverageTrack.name} (${coverageTrack.url}) track: order ${coverageTrack.order}`)\n        igvTracks.push(coverageTrack)\n      }\n    }))\n\n    // add gencode genes\n    const gencodeGeneTrackName = 'Gencode v32 Genes'\n\n    let gencodeGeneTrackOrder = trackOrderArray.indexOf(gencodeGeneTrackName)\n    if (gencodeGeneTrackOrder !== -1) {\n      gencodeGeneTrackOrder += 50000\n    } else {\n      gencodeGeneTrackOrder = 1000001\n    }\n\n    igvTracks.push({\n      name: gencodeGeneTrackName,\n      format: 'refgene',\n      url: 'gs://tgg-viewer/ref/GRCh38/gencode_v32/gencode_v32_knownGene.sorted.txt.gz',\n      indexURL: 'gs://tgg-viewer/ref/GRCh38/gencode_v32/gencode_v32_knownGene.sorted.txt.gz.tbi',\n      indexed: true,\n      searchable: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: 'EXPANDED',\n      order: gencodeGeneTrackOrder,\n      color: 'rgb(76,171,225)',\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  },\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport ColorPicker from './optionsPanels/ColorPicker'\nimport { GCNV_DEFAULT_HIGHLIGHT_COLOR } from '../constants'\nimport { getSelectedSamplesByCategoryNameAndRowName } from '../redux/selectors'\n\nconst SelectedDataCategory = styled.span`\n  margin: 10px 0px 8px 0px;\n  font-style: italic;\n`\n\nconst DeleteButton = styled(Button).attrs({ basic: true, icon: true })`\n  padding: 0px !important;\n  box-shadow: none !important;\n`\n\nconst SampleNameText = styled.span`\n  word-wrap: break-word;\n  word-break: break-all;  \n  white-space: normal;\n`\n\nconst SamplePanel = ({ categoryName, rowName, sample, sampleSettings, hideSample, updateSampleSettings, numSelectedSamplesInRow }) => (\n  <div style={{ whiteSpace: 'nowrap' }}>\n    <DeleteButton onClick={() => hideSample(categoryName, rowName, sample, numSelectedSamplesInRow)}>\n      <Icon name=\"delete\" />\n    </DeleteButton>\n    <SampleNameText>{sample}</SampleNameText>\n    <span style={{ marginLeft: '8px' }}>\n      <ColorPicker\n        key={sampleSettings.color}\n        color={sampleSettings.color || GCNV_DEFAULT_HIGHLIGHT_COLOR}\n        colorChangedHandler={(newColor) => updateSampleSettings(categoryName, rowName, sample, { color: newColor })}\n      />\n    </span>\n  </div>)\n\n\nSamplePanel.propTypes = {\n  categoryName: PropTypes.string,\n  rowName: PropTypes.string,\n  sample: PropTypes.string,\n  sampleSettings: PropTypes.object,\n  hideSample: PropTypes.func,\n  updateSampleSettings: PropTypes.func,\n  numSelectedSamplesInRow: PropTypes.number,\n}\n\nconst SelectedDataPanel = ({ selectedSamplesByCategoryNameAndRowName, hideRow, hideSample, updateSampleSettings }) => {\n  const result = []\n  Object.entries(selectedSamplesByCategoryNameAndRowName).forEach(([categoryName, categoryObj]) => {\n    Object.entries(categoryObj.selectedSamples || {}).forEach(([rowName, selectedSamples]) => {\n      result.push(\n        <div key={`${categoryName}!!${rowName}`}>\n          <div style={{ whiteSpace: 'nowrap', margin: '15px 0px 7px 0px' }}>\n            {\n              /*<DeleteButton onClick={() => hideRow(categoryName, rowName)}>\n                <Icon name=\"delete\" />\n              </DeleteButton>\n              */\n            }\n            <SelectedDataCategory>{`${categoryName}: ${rowName}`}</SelectedDataCategory>\n          </div>\n          {\n            selectedSamples.map((sample) => (\n              <SamplePanel\n                key={sample}\n                categoryName={categoryName}\n                rowName={rowName}\n                sample={sample}\n                sampleSettings={((categoryObj.sampleSettings || {})[rowName] || {})[sample] || {}}\n                hideRow={hideRow}\n                hideSample={hideSample}\n                updateSampleSettings={updateSampleSettings}\n                numSelectedSamplesInRow={selectedSamples.length}\n              />),\n            )\n          }\n        </div>)\n    })\n  })\n\n  return result.length > 0 ? result : null\n}\n\nSelectedDataPanel.propTypes = {\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object,\n  hideRow: PropTypes.func,\n  hideSample: PropTypes.func,\n  updateSampleSettings: PropTypes.func,\n}\n\n\nconst mapStateToProps = (state) => ({\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateGcnvOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_GCNV_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  hideRow: (categoryName, rowName) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_ROW_NAMES',\n      categoryName,\n      selectedRowNames: [rowName],\n    })\n  },\n  hideSample: (categoryName, rowName, sample, numSelectedSamplesInRow) => {\n    if (numSelectedSamplesInRow <= 1) {\n      // if the last sample is being hidden, hide the row as well\n      dispatch({\n        type: 'REMOVE_SELECTED_ROW_NAMES',\n        categoryName,\n        selectedRowNames: [rowName],\n      })\n    }\n\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLES',\n      categoryName,\n      selectedSamplesByRowName: {\n        [rowName]: [sample],\n      },\n    })\n  },\n  updateSampleSettings: (categoryName, rowName, sample, newSettings) => {\n    dispatch({\n      type: 'UPDATE_SAMPLE_SETTINGS',\n      categoryName,\n      sampleSettingsByRowNameAndSampleName: {\n        [rowName]: {\n          [sample]: newSettings,\n        },\n      },\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedDataPanel)\n","/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [...action.values] // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [...state, ...action.values]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter((v) => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return { ...state, isLoading: true }\n\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return { ...state, isLoading: false, errorMessage: action.error }\n\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { createObjectsByIdReducer } from './reducerFactories'\n\n\n// actions\nconst UPDATE_MODAL_STATE = 'UPDATE_MODAL_STATE'\n\n// action creators\nexport const openModal = (modalName) => (dispatch) => (\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: true } } })\n)\n\nexport const closeModal = (modalName, confirmed) => (dispatch, getState) => {\n  if (getState().modals[modalName].confirmOnClose && !confirmed) {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: true } } })\n  } else {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: false, confirming: false, confirmOnClose: null } } })\n  }\n}\n\n// root reducer\nexport default {\n  modals: createObjectsByIdReducer(UPDATE_MODAL_STATE),\n}\n\n// basic selectors\nexport const getModalOpen = (state, modalName) => state.modals[modalName] && state.modals[modalName].open\n","/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { getModalOpen, openModal, closeModal } from '../redux/utils/modalReducer'\n\nexport const ButtonLink = styled(Button).attrs({ basic: true })`\n  &.ui.button.basic {\n    white-space: nowrap;\n    border: none;\n    padding: ${(props) => props.padding || 0};\n    color: ${(props) => props.color || '#4183C4'} !important;\n    text-decoration: none;\n    font-weight: ${(props) => props.fontWeight || 'inherit'};\n    box-shadow: none !important;\n    user-select: auto;\n    \n    &:hover, &:focus, &:active {\n      color: #1e70bf !important;\n      background: transparent !important;\n    }\n    \n    &[class*=\"right labeled\"].icon {\n      padding-left: 0 !important;\n      padding-right: 2.1em !important;\n      \n      > .icon {\n        background-color: initial;\n      }\n    }\n  }\n`\n\nconst ContainerDiv = styled.div`\n  float: right;\n  padding: 0px 20px 20px 20px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px !important;\n  width: 100px;\n`\n\n\nclass CustomModal extends React.PureComponent\n{\n  handleClose = () => {\n    let doClose = true\n    if (this.props.handleClose) {\n      doClose = this.props.handleClose()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  handleSave = () => {\n    let doClose = true\n    if (this.props.handleSave) {\n      doClose = this.props.handleSave()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  render() {\n    const trigger = this.props.trigger ? React.cloneElement(this.props.trigger, { onClick: this.props.open }) : null\n    return (\n      <Modal open={this.props.isOpen} trigger={trigger} onClose={this.handleClose} size={this.props.size}>\n        <Modal.Header>\n          {this.props.title}\n          <ButtonLink floated=\"right\" onClick={this.handleClose} icon={<Icon name=\"remove\" color=\"grey\" />} />\n        </Modal.Header>\n        <Modal.Content>\n          {this.props.children}\n        </Modal.Content>\n        <ContainerDiv>\n          <StyledButton tabIndex={0} onClick={this.handleClose} type=\"button\">Cancel</StyledButton>\n          <StyledButton tabIndex={0} onClick={this.handleSave} type=\"submit\" color=\"blue\">{ this.props.handleSave ? 'Save' : 'Ok' }</StyledButton>\n        </ContainerDiv>\n      </Modal>\n    )\n  }\n}\n\nCustomModal.defaultProps = {\n  size: 'small',\n}\n\nCustomModal.propTypes = {\n  trigger: PropTypes.node,\n  title: PropTypes.string,\n  handleSave: PropTypes.func,\n  handleClose: PropTypes.func,\n  size: PropTypes.oneOf(['small', 'large', 'fullscreen']),\n  isOpen: PropTypes.bool,\n  open: PropTypes.func,\n  close: PropTypes.func,\n  children: PropTypes.node,\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  isOpen: getModalOpen(state, ownProps.modalName),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: (e) => {\n      e.preventDefault()\n      dispatch(openModal(ownProps.modalName))\n    },\n    close: () => {\n      dispatch(closeModal(ownProps.modalName, true))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/no-array-index-key */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Form, TextArea } from 'semantic-ui-react'\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n`\n\nclass EditLocusListButtonAndModal extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    const {\n      locusList,\n    } = this.props\n\n    this.textAreaValue = (locusList || []).join('\\n') // TextArea refs don't work - probably because its a pure component, so use this hack\n  }\n\n  render = () => {\n    const {\n      locusList,\n      name,\n      setLocusList,\n    } = this.props\n\n    const title = `Locus List - ${name}`\n\n    return (\n      <Modal\n        title={title}\n        size=\"large\"\n        modalName={title}\n        trigger={\n          <LinkButton>\n            {\n              (locusList || []).length > 0\n                ? <div><br />Edit Locus List</div>\n                : <div>Add Locus List To Side Bar</div>\n            }\n          </LinkButton>\n        }\n        handleSave={() => {\n          const newLocusList = this.textAreaValue.split(/[,\\s]+/).filter(Boolean)\n          setLocusList(newLocusList)\n\n          return true\n        }}\n      >\n        <Form>\n          <Form.Field\n            control={TextArea}\n            style={{ minHeight: '300px' }}\n            defaultValue={this.textAreaValue}\n            onKeyUp={(e) => { this.textAreaValue = e.target.value }}\n            placeholder=\"Enter genomic positions, intervals, and/or gene names separated by commas, spaces, or new lines. &#10;\n              These can be in any format recognized by the IGV search bar. &#10;\n              For example: DMD, ENST00000589830, chr1:55516888, 2:152341851-152591002\"\n          />\n        </Form>\n        <br />\n        <b><i>NOTE:</i></b> This locus list will be saved across page refreshes in this browser, &nbsp;\n        but will not be recorded in the page url like other settings.&nbsp;\n        Sharing or bookmarking this page won&apos;t include the contents of this list.\n      </Modal>)\n  }\n}\n\nEditLocusListButtonAndModal.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocusList: PropTypes.func,\n}\n\nconst EditLocusList = ({ name, locusList, setLocus, setLocusList }) => (\n  <div>\n    {\n      locusList.map((locus, i) => <div key={`${locus} ${i}`}>{i + 1}. &nbsp; <LinkButton onClick={() => { setLocus(locus) }}>{locus}</LinkButton></div>)\n    }\n    <EditLocusListButtonAndModal name={name} locusList={locusList} setLocusList={setLocusList} />\n  </div>)\n\n\nEditLocusList.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n}\n\nexport default EditLocusList\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/self-closing-comp */\n/* eslint-disable object-shorthand */\n/* eslint-disable no-else-return */\n/* eslint-disable react/no-array-index-key */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Form, Icon, Message, Popup, TextArea } from 'semantic-ui-react'\n\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst ExampleDiv = styled.div`\n  font-family: monospace;\n  margin: 20px 30px;\n  padding: 10px;\n  background-color: #F7F7F7;\n  white-space: nowrap;\n`\n\nconst ExamplePath = styled.span`\n  font-family: monospace;\n  background-color: #F7F7F7;\n`\n\nconst StyledPopup = styled(Popup).attrs({ position: 'right center' })`\n`\n\nexport const SUPPORTED_FILE_EXTENSIONS = {\n  '.bigWig': 'coverage',\n  '.bw': 'coverage',\n  '.junctions.bed': 'junctions',\n  '.spliceJunctions.bed': 'junctions',\n  '.junctions.bed.gz': 'junctions',\n  '.spliceJunctions.bed.gz': 'junctions',\n\n  '.bam': 'bam',\n  '.cram': 'bam',\n\n  '.vcf': 'vcf',\n  '.vcf.gz': 'vcf',\n\n  '.wig': 'wig',\n  '.bedGraph': 'wig',\n\n  '.gcnv.bed': 'gcnv_bed',\n  '.gcnv.bed.gz': 'gcnv_bed',\n\n  '.bed': 'bed',\n  '.bed.gz': 'bed',\n  '.gff3': 'gff',\n  '.gtf': 'gtf',\n  '.gtf.gz': 'gtf',\n  '.genePred': 'genePred',\n  '.bigBed': 'bigBed',\n}\n\n\nclass AddRowsButtonAndModal extends React.PureComponent {\n\n  getInitialState = () => {\n    return {\n      textAreaValue: '',\n      warningMessage: null,\n      errorMessage: null,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = this.getInitialState()\n  }\n\n  parseTextAreaValueToRows = (textAreaValue) => {\n    if (!textAreaValue.trim()) {\n      return { rows: [], errorMessage: null }\n    }\n\n    let errorMessage = null\n    const invalidPaths = []\n    const dataPaths = textAreaValue.split(/[,\\s]+/).filter(Boolean)\n\n    const newRowsByRowName = dataPaths.reduce((acc, dataPath) => {\n      const pathTokens = dataPath.split('/')\n      const fileName = pathTokens[pathTokens.length - 1]\n      const matchingExtensions = Object.keys(SUPPORTED_FILE_EXTENSIONS).filter((ext) => fileName.endsWith(ext))\n      if (matchingExtensions.length === 0) {\n        invalidPaths.push(dataPath)\n      } else {\n        const ext = matchingExtensions[0]\n        const filePrefix = fileName.replace(ext, '')\n        if (!acc[filePrefix]) {\n          acc[filePrefix] = { data: [] }\n        }\n\n        acc[filePrefix].name = filePrefix\n        acc[filePrefix].data.push(\n          { type: SUPPORTED_FILE_EXTENSIONS[ext], url: dataPath },\n        )\n      }\n      return acc\n    }, {})\n\n    if (invalidPaths.length > 0) {\n      errorMessage = `These paths have file suffixes that are not recognized: ${invalidPaths.join(', ')}`\n    }\n\n    return { newRows: Object.values(newRowsByRowName), errorMessage }\n  }\n\n  handleModalSave = () => {\n    const {\n      addRows,\n    } = this.props\n\n    const {\n      textAreaValue,\n    } = this.state\n\n    const { newRows, errorMessage } = this.parseTextAreaValueToRows(textAreaValue)\n    if (errorMessage) {\n      this.setState({ errorMessage: errorMessage })\n      return false\n    } else {\n      addRows(newRows)\n      this.setState(this.getInitialState())\n      return true\n    }\n  }\n\n  handleModalClose = () => {\n    this.setState(this.getInitialState())\n    return true\n  }\n\n  render = () => {\n    const {\n      title,\n      trigger,\n    } = this.props\n\n    const {\n      textAreaValue,\n      warningMessage,\n      errorMessage,\n    } = this.state\n\n    const fullTitle = `${title} Rows`\n\n    return (\n      <Modal\n        title={fullTitle}\n        size=\"large\"\n        modalName={fullTitle}\n        trigger={trigger}\n        handleSave={this.handleModalSave}\n        handleClose={this.handleModalClose}\n      >\n        <div>\n          Enter google bucket path(s) for data files: &nbsp;\n          <StyledPopup trigger={<Icon style={{ margin: '10px 0px' }} name=\"question circle outline\" />} content={\n            <div>\n              <b>Format</b>:<br />\n              <br />\n              Enter a list of data file paths separated by commas, spaces or new lines. <br />\n              <br />\n              Example:<br />\n              <ExampleDiv>\n                gs://your-bucket/dir/sample-name1.bigWig <br />\n                gs://your-bucket/dir/sample2.bigWig <br />\n                gs://your-bucket/dir/sample-name1.junctions.bed.gz <br />\n                gs://your-bucket/dir/sample-name1.bam <br />\n                gs://your-bucket/dir/sample2.junctions.bed.gz <br />\n              </ExampleDiv>\n              Paths that have the same prefix (eg. <ExamplePath>gs://your-bucket/dir/sample-name1</ExamplePath> above) will be interpreted as different data types from the same sample.<br />\n              The order of paths doesn&apos;t matter.<br />\n              <br />\n              IGV.js track types will be inferred from file extensions as follows:<br />\n              <div style={{ margin: '10px 30px' }}>\n                <table>\n                  <tbody>\n                    <tr><td> <b> File Extension </b> </td><td> <b>IGV.js Track Type</b> </td></tr>\n                    {Object.entries(SUPPORTED_FILE_EXTENSIONS).filter(([ext]) => !ext.endsWith('.bed')).map(\n                      ([ext, fileType], i) => <tr key={`${ext} ${fileType} ${i}`}><td>{ext}</td><td>{fileType}</td></tr>,\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          }\n          />\n          <br />\n        </div>\n        <Form>\n          <TextArea\n            style={{ minHeight: '300px' }}\n            value={textAreaValue}\n            onChange={(e) => {\n              this.setState({ textAreaValue: e.target.value })\n            }}\n            placeholder=\"Enter file path(s)\"\n          >\n          </TextArea>\n        </Form>\n\n        <br />\n        <b><i>NOTE:</i></b> These paths will be saved across page refreshes in this browser, but will not be recorded in the page url like other settings. Sharing or bookmarking this page won&apos;t include these paths.\n        {\n          warningMessage && (\n          <Message color=\"yellow\">\n            {warningMessage}\n          </Message>)\n        }\n        {\n          errorMessage && (\n          <Message color=\"red\">\n            {errorMessage}\n          </Message>)\n        }\n      </Modal>)\n  }\n}\n\nAddRowsButtonAndModal.propTypes = {\n  title: PropTypes.string,\n  addRows: PropTypes.func,\n  trigger: PropTypes.node,\n}\n\n\nconst AddRows = ({ category, addRows }) => (\n  <div>\n    <AddRowsButtonAndModal\n      title={`Add ${category.categoryName}`}\n      categoryName={category.categoryName}\n      addRows={(rows) => addRows(category.categoryName, rows)}\n      trigger={<LinkButton>Add {category.rows.length === 0 ? category.categoryName : null} Rows</LinkButton>}\n    />\n  </div>)\n\n\nAddRows.propTypes = {\n  category: PropTypes.object,\n  addRows: PropTypes.func,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addRows: (categoryName, rows) => {\n    dispatch({\n      type: 'ADD_ROWS',\n      categoryName: categoryName,\n      rows: rows,\n    })\n  },\n})\n\nexport default connect(null, mapDispatchToProps)(AddRows)\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/require-optimization */\n\nimport _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Search } from 'semantic-ui-react'\nimport { CategoryH3 } from './SideBarUtils'\nimport {\n  getRowsInCategories,\n  getSelectedRowNamesByCategoryName,\n  getSelectedSamplesByCategoryNameAndRowName,\n} from '../redux/selectors'\n\nconst SearchPanelContainer = styled.div`\n  margin: 5px 0px;\n`\n\nconst StyledSearch = styled(Search)`\n  margin: 13px 0px; \n  .prompt {\n    border-radius: 2px !important;\n    width: 155px;\n  }\n  \n  input {\n      max-width: none !important;\n      padding: 5px !important;\n  }\n  \n  .input {\n    -webkit-box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n    -moz-box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n    box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n  }\n  \n  .results {\n      min-width: max-content;\n  }\n\n  .red-text {\n    .title {\n      color: #CC0000 !important;\n      font-weight: 500 !important;\n     }\n  }\n`\n\nconst MAX_AUTOCOMPLETE_RESULTS = 12\nconst INITIAL_STATE = { isLoading: false, results: [], value: '' }\n\nclass SearchRows extends React.Component {\n\n  constructor() {\n    super()\n    this.state = INITIAL_STATE\n  }\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: '' })\n\n    const idTokens = result.id.split('!!')\n    const action = idTokens[0]\n    const categoryName = idTokens[1]\n    const rowName = idTokens[2]\n    const sampleName = idTokens[3]\n\n    if (sampleName) {\n      if (action === 'ADD') {\n        this.props.updateSelectedRowNames(action, categoryName, [rowName])\n      } else if (this.getSelectedSamplesForRow(categoryName, rowName).length <= 1) {\n        this.props.updateSelectedRowNames(action, categoryName, [rowName])\n      }\n      this.props.updateSelectedSamples(action, categoryName, { [rowName]: [sampleName] })\n    } else {\n      this.props.updateSelectedRowNames(action, categoryName, [rowName])\n    }\n  }\n\n  getSelectedRowNames = (categoryName) => (this.props.selectedRowNamesByCategoryName[categoryName] || [])\n\n  isRowSelected = (categoryName, rowName) => this.getSelectedRowNames(categoryName).includes(rowName)\n\n  getSelectedSamplesByRowName = (categoryName) => ((this.props.selectedSamplesByCategoryNameAndRowName[categoryName] || {}).selectedSamples || {})\n\n  getSelectedSamplesForRow = (categoryName, rowName) => (this.getSelectedSamplesByRowName(categoryName)[rowName] || [])\n\n  isSampleSelected = (categoryName, rowName, sample) => this.getSelectedSamplesForRow(categoryName, rowName).includes(sample)\n\n  addRowsToHide = (resultsByCategoryName, resultsCounter) => {\n    Object.keys(this.props.selectedRowNamesByCategoryName).forEach((categoryName) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      this.props.selectedRowNamesByCategoryName[categoryName].forEach((rowName) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n        const newResult = { action: 'REMOVE', categoryName, rowName }\n        if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n          resultsByCategoryName[categoryName].push(newResult)\n          resultsCounter += 1\n        }\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addSamplesToHide = (resultsByCategoryName, resultsCounter) => {\n    Object.keys(this.props.selectedSamplesByCategoryNameAndRowName).forEach((categoryName) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      Object.keys(this.getSelectedSamplesByRowName(categoryName)).forEach((rowName) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS || !this.isRowSelected(categoryName, rowName)) return\n        this.getSelectedSamplesForRow(categoryName, rowName).forEach((sample) => {\n          if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = { action: 'REMOVE', categoryName, rowName, sample }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        })\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addMatchingSamplesFromRow = (categoryName, row, inputStringRegExp, resultsByCategoryName, resultsCounter) => {\n    if (!row.data) {\n      return resultsCounter\n    }\n\n    const dataItemsWithSamples = row.data.filter((data) => data.samples && data.samples.length > 0)\n    if (dataItemsWithSamples.length > 1) {\n      console.warn('Found row with multiple data items each of which has a samples array. This may behave unexpectedly if there are duplicate samples')\n    }\n\n    //add samples with matching names\n    dataItemsWithSamples.forEach((data) => {\n      (data.samples || []).forEach((sample) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        if (inputStringRegExp.test(sample)) {\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = {\n            action: this.isRowSelected(categoryName, row.name) && this.isSampleSelected(categoryName, row.name, sample) ? 'REMOVE' : 'ADD',\n            categoryName,\n            rowName: row.name,\n            sample,\n          }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        }\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addMatchingRowsAndSamples = (inputStringRegExp, resultsByCategoryName, resultsCounter) => {\n    const matchingRowsByCategoryName = {} //used later to add samples from this row\n    this.props.rowsInCategories.forEach((category) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      const { categoryName } = category\n      category.rows.forEach((row) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        //add rows with matching names\n        if (inputStringRegExp.test(row.name)) {\n          matchingRowsByCategoryName[categoryName] = matchingRowsByCategoryName[categoryName] || []\n          matchingRowsByCategoryName[categoryName].push(row)\n\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = {\n            action: this.isRowSelected(categoryName, row.name) ? 'REMOVE' : 'ADD',\n            categoryName,\n            rowName: row.name,\n          }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) { //avoid duplicates\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        }\n\n        resultsCounter = this.addMatchingSamplesFromRow(categoryName, row, inputStringRegExp, resultsByCategoryName, resultsCounter)\n\n      })\n    })\n\n    Object.entries(matchingRowsByCategoryName).forEach(([categoryName, rows]) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n      rows.forEach((row) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        resultsCounter = this.addMatchingSamplesFromRow(categoryName, row, /.*/, resultsByCategoryName, resultsCounter)\n      })\n    })\n\n    return resultsCounter\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) {\n        return this.setState(INITIAL_STATE)\n      }\n\n      const inputStringRegExp = new RegExp(_.escapeRegExp(this.state.value), 'i')\n\n      const resultsByCategoryName = {}\n      let resultsCounter = 0\n\n      // search actions\n      if (inputStringRegExp.test('Hide')) {\n        resultsCounter = this.addRowsToHide(resultsByCategoryName, resultsCounter)\n      }\n\n      if (inputStringRegExp.test('Hide') || inputStringRegExp.test('Hide sample')) {\n        // hide samples\n        resultsCounter = this.addSamplesToHide(resultsByCategoryName, resultsCounter)\n      }\n\n      // search rows\n      this.addMatchingRowsAndSamples(inputStringRegExp, resultsByCategoryName, resultsCounter)\n\n      const useCategories = this.props.rowsInCategories.length > 1\n      const results = useCategories ? {} : []\n      Object.keys(resultsByCategoryName).forEach((categoryName) => {\n        if (useCategories) {\n          results[categoryName] = { name: categoryName, results: [] }\n        }\n        const resultsArray = useCategories ? results[categoryName].results : results\n        resultsByCategoryName[categoryName].forEach((item) => {\n          if (item.sample) {\n            const actionLabel = item.action === 'ADD' ? 'Show sample' : 'Hide sample'\n            resultsArray.push({\n              id: `${item.action}!!${categoryName}!!${item.rowName}!!${item.sample}`,\n              title: `${actionLabel} ${item.rowName} > ${item.sample}`,\n              className: item.action !== 'ADD' ? 'red-text' : null,\n            })\n          } else {\n            const actionLabel = item.action === 'ADD' ? 'Show' : 'Hide'\n            resultsArray.push({\n              id: `${item.action}!!${categoryName}!!${item.rowName}`,\n              title: `${actionLabel} ${item.rowName}`,\n              className: item.action !== 'ADD' ? 'red-text' : null,\n            })\n          }\n        })\n      })\n\n      return this.setState({\n        isLoading: false,\n        results,\n      })\n    }, 1)\n  }\n\n  render = () => {\n    const { isLoading, value, results } = this.state\n\n    return (\n      <SearchPanelContainer>\n        <CategoryH3>Select Data</CategoryH3>\n        <StyledSearch\n          category={this.props.rowsInCategories.length > 1}\n          loading={isLoading}\n          onResultSelect={this.handleResultSelect}\n          onFocus={this.handleSearchChange}\n          onSearchChange={this.handleSearchChange}\n          placeholder=\"Select data\"\n          results={results}\n          value={value}\n        />\n      </SearchPanelContainer>)\n  }\n}\n\nSearchRows.propTypes = {\n  rowsInCategories: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n  updateSelectedSamples: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  rowsInCategories: getRowsInCategories(state),\n  selectedRowNamesByCategoryName: getSelectedRowNamesByCategoryName(state),\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSelectedRowNames: (actionType, categoryName, selectedRowNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_ROW_NAMES`,\n      categoryName,\n      selectedRowNames,\n    })\n  },\n\n  updateSelectedSamples: (actionType, categoryName, selectedSamplesByRowName) => {\n    dispatch({\n      type: `${actionType}_SELECTED_SAMPLES`,\n      categoryName,\n      selectedSamplesByRowName,\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchRows)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/no-danger */\n\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport DOMPurify from 'dompurify'\nimport { CategoryH3, OptionDiv, OptionInputDiv, StyledPopup } from './SideBarUtils'\nimport SelectedDataPanel from './SelectedDataPanel'\nimport EditLocusList from './EditLocusList'\nimport AddRows from './AddRows'\nimport SearchRows from './SearchRows'\n\nimport {\n  getLeftSideBarLocusList,\n  getRowsInCategories,\n  getDataTypesUsersCanToggle,\n  getEnabledDataTypes,\n  getSelectedRowNamesByCategoryName,\n} from '../redux/selectors'\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst DataTypeIcon = styled.div.attrs({ name: 'stop' })`\n  color: ${(props) => props.color};\n  background-color: ${(props) => props.color};\n  border: 3px solid ${(props) => props.color};\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\nconst dataTypeIconColors = {\n  junctions: '#B0B0EC',\n  coverage: '#B5D29A',\n  alignment: '#5DB6E9',\n  vcf: '#E6A01B',\n  gcnv_bed: '#AA3333',\n  default: '#000000',\n}\n\nconst dataTypeLabels = {\n  coverage: 'Coverage',\n  junctions: 'Splice Junctions',\n  vcf: 'Variants (VCF)',\n  gcnv_bed: 'gCNV',\n  alignment: 'Reads (BAM)',\n  bed: 'Annotations (BED)',\n  gff3: 'Annotations (GFF3)',\n  gtf: 'Annotations (GTF)',\n  genePred: 'Annotations (genePred)',\n  bigBed: 'Annotations (bigBed)',\n}\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst RowColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\n/*\nconst SelectedDataSectionHeading = styled.div`\n  font-weight: 700;\n  margin: 8px 0px;\n`\n*/\n\nconst ShowTrackTypesPanel = ({ dataTypesUsersCanToggle, enabledDataTypes, updateDataTypesToShow }) => {\n  if (dataTypesUsersCanToggle.length < 2) {\n    return null\n  }\n  const checkBoxes = [...dataTypesUsersCanToggle].map((dataType, i) => {\n    const label = dataTypeLabels[dataType] || (dataType.charAt(0).toUpperCase() + dataType.slice(1)) //to Title case\n    return (\n      <OptionDiv key={`${dataType} ${i}`}>\n        <Checkbox label={`${label.toLocaleString()}`} checked={enabledDataTypes.includes(dataType)} onChange={(e, data) => updateDataTypesToShow(data.checked ? 'ADD' : 'REMOVE', [dataType])} />\n        <RowColorLabelsContainer><Popup content={`This stripe marks rows that have ${label.toLowerCase()} data. Use the checkbox on the left to show or hide ${label.toLowerCase()} tracks for all rows selected below.`} position=\"right center\" trigger={<DataTypeIcon color={dataTypeIconColors[dataType] || dataTypeIconColors.default} />} /></RowColorLabelsContainer>\n      </OptionDiv>)\n  })\n\n  return (\n    <div>\n      <CategoryH3>Show Track Types</CategoryH3>\n      {checkBoxes}\n    </div>)\n}\n\nShowTrackTypesPanel.propTypes = {\n  dataTypesUsersCanToggle: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  updateDataTypesToShow: PropTypes.func,\n}\n\n\nconst RowColorLabelsWithPopup = ({ row }) => {\n  const handleCopyToClipboard = () => {\n    const s = (row.data || []).map((d) => d.url).join('\\n')\n    navigator.clipboard.writeText(s)\n  }\n\n  return (<Popup\n    flowing\n    content={\n      <table>\n        <tbody>\n          {\n            (row.data || []).map((d, i) =>\n              <tr key={`${d.url} ${d.type} ${i}`}>\n                <td style={{ paddingRight: '10px' }}>\n                  <b>{d.type && (dataTypeLabels[d.type] || d.type.toUpperCase())}:</b>\n                </td>\n                <td>\n                  <NoWrapDiv>{d.url}</NoWrapDiv>\n                </td>\n                <td style={{ color: 'gray', whiteSpace: 'nowrap', paddingLeft: '15px' }}>\n                  {d.samples ? `(${d.samples.length} samples)` : null}\n                </td>\n              </tr>,\n            )\n          }\n          <tr><td colSpan={2}><div style={{ fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <RowColorLabelsContainer onClick={handleCopyToClipboard}>\n        {\n          (row.data || []).map((d, i) => <DataTypeIcon key={`${d.url} ${d.type} ${i}`} color={dataTypeIconColors[d.type] || dataTypeIconColors.default} />)\n        }\n      </RowColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />)\n}\n\nRowColorLabelsWithPopup.propTypes = {\n  row: PropTypes.object,\n}\n\nconst CategoryPanel = ({ category, updateSelectedRowNames }) => (\n  <div>\n    <CategoryH3>{category.categoryName}</CategoryH3>\n    {\n      category.rows.length >= 12 && <CategoryDetails>{`(N=${category.rows.length}) `}</CategoryDetails>\n    }\n    {\n      category.rows.length > 0 && (\n      <div>\n        <LinkButton onClick={\n          (e) => {\n            e.preventDefault()\n            updateSelectedRowNames('SET', category.categoryName, [])\n          }\n        }\n        >\n          Uncheck All\n        </LinkButton>\n      </div>)\n    }\n  </div>)\n\nCategoryPanel.propTypes = {\n  category: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n}\n\nconst RowsPanel = ({ rowsInCategories, selectedRowNamesByCategoryName, updateSelectedRowNames }) => (\n  rowsInCategories.map((category, i) => (\n    <div key={`${category.categoryName} ${i}`}>\n      <CategoryPanel category={category} updateSelectedRowNames={updateSelectedRowNames} />\n      {\n        category.rows.map((row, j) => {\n          const selectedRowNames = selectedRowNamesByCategoryName[category.categoryName] || []\n          return <RowPanel key={`${row.name} ${j}`} row={row} categoryName={category.categoryName} selectedRowNames={selectedRowNames} updateSelectedRowNames={updateSelectedRowNames} />\n        })\n      }\n      { i === rowsInCategories.length - 1 ? <AddRows category={category} /> : null }\n    </div>),\n  ))\n\nRowsPanel.propTypes = {\n  rowsInCategories: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n}\n\n\nconst RowPanel = ({ row, categoryName, selectedRowNames, updateSelectedRowNames }) => (\n  <NoWrapDiv>\n    <Checkbox\n      label={row.name}\n      checked={selectedRowNames.includes(row.name)}\n      data-row={row.name}\n      onChange={(e, data) => updateSelectedRowNames(data.checked ? 'ADD' : 'REMOVE', categoryName, [data['data-row']])}\n    />\n    <RowDetails row={row} />\n    <RowColorLabelsWithPopup row={row} />\n  </NoWrapDiv>)\n\nRowPanel.propTypes = {\n  row: PropTypes.object,\n  categoryName: PropTypes.string,\n  selectedRowNames: PropTypes.array,\n  updateSelectedRowNames: PropTypes.func,\n}\n/*\nconst DataSubrows = ({ data }) => {\n  if (!data) {\n    return null\n  }\n\n  const items = []\n  data.filter((d) => d.type === 'gcnv_bed' && d.samples).forEach((d) => {\n    d.samples.forEach((sample) => {\n      items.push(<Checkbox\n        key={sample}\n        label={sample}\n        checked={false}\n        onChange={(e, _) => console.log(e, _)}\n      />)\n    })\n  })\n\n  return items\n}\n\nDataSubrows.propTypes = {\n  data: PropTypes.array,\n}\n*/\n\nconst RowDetails = ({ row }) => {\n  return (\n    row.description\n      ? <StyledPopup\n        flowing\n        content={row.description && <div dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(row.description) }} />}\n        position=\"right center\"\n        trigger={\n          <Icon style={{ marginLeft: '10px' }} name=\"question circle outline\" />\n        }\n      />\n      : null)\n}\n\nRowDetails.propTypes = {\n  row: PropTypes.object,\n}\n\nclass LeftSideBar extends React.PureComponent\n{\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    const {\n      locusList,\n      rowsInCategories,\n      dataTypesUsersCanToggle,\n      enabledDataTypes,\n      selectedRowNamesByCategoryName,\n      setLocus,\n      setLocusList,\n      updateDataTypesToShow,\n      updateSelectedRowNames,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList name=\"Left Side Bar\" locusList={locusList} setLocus={setLocus} setLocusList={setLocusList} />\n        <ShowTrackTypesPanel\n          dataTypesUsersCanToggle={dataTypesUsersCanToggle}\n          enabledDataTypes={enabledDataTypes}\n          updateDataTypesToShow={updateDataTypesToShow}\n        />\n        <SearchRows />\n        <OptionInputDiv>\n          {/*<SelectedDataSectionHeading>Selected data:</SelectedDataSectionHeading>*/}\n          <SelectedDataPanel />\n        </OptionInputDiv>\n        <RowsPanel\n          rowsInCategories={rowsInCategories}\n          selectedRowNamesByCategoryName={selectedRowNamesByCategoryName}\n          updateSelectedRowNames={updateSelectedRowNames}\n        />\n      </div>)\n  }\n}\n\nLeftSideBar.propTypes = {\n  locusList: PropTypes.array,\n  rowsInCategories: PropTypes.array,\n  dataTypesUsersCanToggle: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n  updateDataTypesToShow: PropTypes.func,\n  updateSelectedRowNames: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getLeftSideBarLocusList(state),\n  rowsInCategories: getRowsInCategories(state),\n  dataTypesUsersCanToggle: getDataTypesUsersCanToggle(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n  selectedRowNamesByCategoryName: getSelectedRowNamesByCategoryName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_LEFT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateDataTypesToShow: (actionType, dataTypes) => {\n    dispatch({\n      type: `${actionType}_DATA_TYPES_TO_SHOW`,\n      values: dataTypes,\n    })\n  },\n  updateSelectedRowNames: (actionType, categoryName, selectedRowNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_ROW_NAMES`,\n      categoryName,\n      selectedRowNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport { CategoryH3, OptionDiv, OptionInputDiv, OptionInput } from '../SideBarUtils'\nimport { getBamOptions } from '../../redux/selectors'\n\nconst editedFields = {}\n\nconst BamOptionsPanel = ({ bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ ...bamOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n\n  const handleApplyButton = () => {\n    updateBamOptions({ ...bamOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>BAM Track <br />Options</CategoryH3><br />\n      <OptionDiv><Checkbox label=\"View as pairs\" checked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"Show soft-clips\" checked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n      <OptionDiv>\n        Color by:\n        <select value={bamOptions.colorBy} onChange={(e) => updateBamOptions({ colorBy: e.target.value })}>\n          <option value=\"strand\">Strand</option>\n          <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n          <option value=\"pairOrientation\">Pair orientation</option>\n          <option value=\"fragmentLength\">Insert size (TLEN)</option>\n          <option value=\"none\">None</option>\n        </select>\n      </OptionDiv>\n      <OptionInputDiv>Track height: <OptionInput key={`track-height-${bamOptions.trackHeight}`} type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n      <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n    </div>)\n}\n\nBamOptionsPanel.propTypes = {\n  bamOptions: PropTypes.object,\n  updateBamOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BamOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { CategoryH3, OptionDiv } from '../SideBarUtils'\nimport { getVcfOptions } from '../../redux/selectors'\n\nconst VcfOptionsPanel = ({ vcfOptions, updateVcfOptions }) => {\n  return (\n    <div>\n      <CategoryH3>VCF Track <br />Options</CategoryH3><br />\n      <OptionDiv>\n        Display mode: &nbsp;\n        <select value={vcfOptions.displayMode} onChange={(e) => updateVcfOptions({ displayMode: e.target.value })}>\n          <option value=\"COLLAPSED\">Collapse</option>\n          <option value=\"SQUISHED\">Squish</option>\n          <option value=\"EXPANDED\">Expand</option>\n        </select>\n      </OptionDiv>\n    </div>)\n}\n\nVcfOptionsPanel.propTypes = {\n  vcfOptions: PropTypes.object,\n  updateVcfOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  vcfOptions: getVcfOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VcfOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Checkbox, Icon, Radio } from 'semantic-ui-react'\nimport { CategoryH3, ColorLegendIcon, OptionDiv, OptionInputDiv, OptionInput, StyledPopup } from '../SideBarUtils'\nimport { SJ_MOTIFS, SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../../constants'\nimport { getSjOptions } from '../../redux/selectors'\n\n\nexport const OptionBox = styled.div`\n  margin-top: 5px;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if (sjOptions.colorBy === 'strand') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n        <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'motif') {\n    // IGV.js Dark2 color palette\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'numUniqueReads' || sjOptions.colorBy === 'numReads') {\n    return (\n      <div>\n        # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n        &nbsp;≤ &nbsp;\n        <OptionInput\n          type=\"text\"\n          key={`num-reads-${sjOptions.colorByNumReadsThreshold}`}\n          defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n          onKeyUp={(e) => handleTextInput(e, 'colorByNumReadsThreshold')}\n          style={{ width: '35px' }}\n        />\n        &nbsp; &lt; &nbsp;\n        <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n      </div>)\n  }\n  if (sjOptions.colorBy === 'isAnnotatedJunction') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'orange' }} /> novel junction\n      </div>)\n  }\n\n  return <div />\n}\n\nColorByLegend.propTypes = {\n  sjOptions: PropTypes.object,\n  handleTextInput: PropTypes.func,\n}\n\nconst editedFields = {}\n\nconst SpliceJunctionsOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ ...sjOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n  const handleApplyButton = () => {\n    updateSjOptions({ ...sjOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>Junctions Track Filters</CategoryH3><br />\n      <OptionBox>\n        <OptionDiv>\n          Show: <br />\n          <StyledRadio label=\"only local junctions\" name=\"minJunctionEndsVisibleButton\" checked={sjOptions.minJunctionEndsVisible === 2} onChange={(e, data) => data.checked && updateSjOptions({ minJunctionEndsVisible: 2 })} />\n          <StyledPopup\n            content=\"Only show splice junctions that start and end within the current view.\"\n            position=\"left center\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          /><br />\n          <StyledRadio label=\"semi-local junctions\" name=\"minJunctionEndsVisibleButton\" checked={sjOptions.minJunctionEndsVisible === 1} onChange={(e, data) => data.checked && updateSjOptions({ minJunctionEndsVisible: 1 })} />\n          <StyledPopup\n            content=\"Hide splice junctions that span the current view (start to the left of the current view and end to the right of it).\"\n            position=\"left center\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          /><br />\n          <StyledRadio label=\"all junctions\" name=\"minJunctionEndsVisibleButton\" checked={sjOptions.minJunctionEndsVisible === 0} onChange={(e, data) => data.checked && updateSjOptions({ minJunctionEndsVisible: 0 })} />\n          <StyledPopup\n            content=\"Show all splice junctions\"\n            position=\"left center\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>\n          Show Strands:\n          <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n          <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n          <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv><Checkbox label=\"Show known junctions\" checked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n        <OptionDiv><Checkbox label=\"Show novel junctions\" checked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <div>\n          <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n          at least <OptionInput key={`uniquely-mapped-reads-${sjOptions.minUniquelyMappedReads}`} type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={(e) => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv>Total reads:</OptionDiv>\n          at least <OptionInput key={`total-reads-${sjOptions.minTotalReads}`} type=\"text\" defaultValue={sjOptions.minTotalReads} onKeyUp={(e) => handleTextInput(e, 'minTotalReads', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv>Fraction multi-mapped:\n            <StyledPopup\n              content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n              position=\"left center\"\n              trigger={\n                <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n              }\n            />\n          </OptionDiv>\n          at most <OptionInput key={`fraction-multi-mapped-${sjOptions.maxFractionMultiMappedReads}`} type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={(e) => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value, 10))} />\n        </div>\n      </OptionBox>\n      <OptionBox>\n        <div>\n          <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n          at least <OptionInput key={`spliced-alignment-overhang-${sjOptions.minSplicedAlignmentOverhang}`} type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={(e) => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv># samples with junction:\n            <StyledPopup\n              content=\"Filter junctions based on how many samples in the batch have this junction. A sample is counted as having the junction as long as the junction is supported by at least one read.\"\n              position=\"left center\"\n              trigger={\n                <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n              }\n            />\n          </OptionDiv>\n          <OptionInput key={`samples-with-junction-more-than-${sjOptions.minSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.minSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'minSamplesWithThisJunction', parseInt(e.target.value, 10))} /> &nbsp;≤ n ≤ <OptionInput key={`samples-with-junction-less-than-${sjOptions.maxSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.maxSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'maxSamplesWithThisJunction', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv>% samples with junction:\n            <StyledPopup\n              content=\"Filter junctions based on what percentage of samples in the batch have this junction. A sample is counted as having the junction as long as the junction is supported by at least one read.\"\n              position=\"left center\"\n              trigger={\n                <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n              }\n            />\n          </OptionDiv>\n          <OptionInput key={`percent-samples-with-junction-more-than-${sjOptions.minPercentSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.minPercentSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'minPercentSamplesWithThisJunction', parseInt(e.target.value, 10))} /> &nbsp;≤ % ≤ <OptionInput key={`percent-samples-with-junction-less-than-${sjOptions.maxPercentSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.maxPercentSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'maxPercentSamplesWithThisJunction', parseInt(e.target.value, 10))} />\n        </div>\n      </OptionBox>\n      <OptionBox>\n        <div>\n          <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n          {\n            SJ_MOTIFS.map((motif) => <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} checked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>)\n          }\n        </div>\n        <OptionInputDiv>Track height: <OptionInput key={`track-height-${sjOptions.trackHeight}`} type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n        <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n      </OptionBox>\n      <CategoryH3>Junctions Track <br />Options</CategoryH3><br />\n      <OptionBox>\n        <OptionDiv>Color by:</OptionDiv>\n        <OptionDiv>\n          <select value={sjOptions.colorBy} onChange={(e) => updateSjOptions({ colorBy: e.target.value })}>\n            <option value=\"strand\">strand</option>\n            <option value=\"motif\">donor/acceptor motif</option>\n            <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n            <option value=\"numReads\"># total reads</option>\n            <option value=\"isAnnotatedJunction\">is known junction</option>\n          </select>\n          <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction label #1:</OptionDiv>\n        <OptionDiv>\n          <StyledRadio label=\"# uniquely-mapped\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'uniqueReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'uniqueReadCount' })} />\n          <StyledRadio label=\"# total reads\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'totalReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'totalReadCount' })} />\n          <StyledRadio label=\"# samples with junction\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'numSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'numSamplesWithThisJunction' })} />\n          <StyledRadio label=\"% samples with junction\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'percentSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'percentSamplesWithThisJunction' })} />\n          <StyledRadio label=\"motif\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'motif'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'motif' })} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction label #2:</OptionDiv>\n        <OptionDiv>\n          <StyledRadio label=\"none\" name=\"junctionLabel2Button\" checked={!sjOptions.labelWithInParen} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: null })} />\n          <StyledRadio label=\"# uniquely-mapped\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'uniqueReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'uniqueReadCount' })} />\n          <StyledRadio label=\"# total reads\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'totalReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'totalReadCount' })} />\n          <StyledRadio label=\"# multi-mapped\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'multiMappedReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'multiMappedReadCount' })} />\n          <StyledRadio label=\"# samples with junction\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'numSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'numSamplesWithThisJunction' })} />\n          <StyledRadio label=\"% samples with junction\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'percentSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'percentSamplesWithThisJunction' })} />\n          <StyledRadio label=\"motif\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'motif'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'motif' })} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction thickness:</OptionDiv>\n        <OptionDiv>\n          <select value={sjOptions.thicknessBasedOn} onChange={(e) => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n            <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n            <option value=\"numReads\"># total reads</option>\n            <option value=\"isAnnotatedJunction\">is known junction</option>\n            <option value=\"numSamplesWithThisJunction\"># samples with this junction</option>\n          </select>\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction bounce height:</OptionDiv>\n        <OptionDiv>\n          <select value={sjOptions.bounceHeightBasedOn} onChange={(e) => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n            <option value=\"random\">random</option>\n            <option value=\"distance\">distance</option>\n            <option value=\"thickness\">thickness</option>\n          </select>\n        </OptionDiv>\n      </OptionBox>\n    </div>)\n}\n\nSpliceJunctionsOptionsPanel.propTypes = {\n  sjOptions: PropTypes.object,\n  updateSjOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  sjOptions: getSjOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpliceJunctionsOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n//import styled from 'styled-components'\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport { CategoryH3, OptionInputDiv, OptionInput } from '../SideBarUtils'\nimport { getGcnvOptions } from '../../redux/selectors'\n\nconst editedFields = {}\n\nconst GcnvOptionsPanel = ({ gcnvOptions, updateGcnvOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateGcnvOptions({ ...gcnvOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n\n  const handleApplyButton = () => {\n    updateGcnvOptions({ ...gcnvOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>gCNV Options</CategoryH3><br />\n      <OptionInputDiv><Checkbox label=\"Enable clicking background samples\" checked={!gcnvOptions.onlyHandleClicksForHighlightedSamples} onChange={(e, data) => updateGcnvOptions({ ...gcnvOptions, onlyHandleClicksForHighlightedSamples: !data.checked })} /></OptionInputDiv>\n      <OptionInputDiv>Y-min: <OptionInput key={`y-max-${gcnvOptions.trackMin}`} type=\"text\" defaultValue={gcnvOptions.trackMin} onKeyUp={(e) => handleTextInput(e, 'trackMin', parseInt(e.target.value, 10))} /> copies</OptionInputDiv>\n      <OptionInputDiv>Y-max: <OptionInput key={`y-max-${gcnvOptions.trackMax}`} type=\"text\" defaultValue={gcnvOptions.trackMax} onKeyUp={(e) => handleTextInput(e, 'trackMax', parseInt(e.target.value, 10))} /> copies</OptionInputDiv>\n      <OptionInputDiv>Track height: <OptionInput key={`track-height-${gcnvOptions.trackHeight}`} type=\"text\" defaultValue={gcnvOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n      <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n    </div>)\n}\n\nGcnvOptionsPanel.propTypes = {\n  gcnvOptions: PropTypes.object,\n  updateGcnvOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  gcnvOptions: getGcnvOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateGcnvOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_GCNV_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GcnvOptionsPanel)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport EditLocusList from './EditLocusList'\nimport BamOptionsPanel from './optionsPanels/BamOptionsPanel'\nimport VcfOptionsPanel from './optionsPanels/VcfOptionsPanel'\nimport SpliceJunctionsOptionsPanel from './optionsPanels/SpliceJunctionsOptionsPanel'\nimport GcnvOptionsPanel from './optionsPanels/GcnvOptionsPanel'\n\nimport {\n  getRightSideBarLocusList,\n  getEnabledDataTypes,\n} from '../redux/selectors'\n\nclass RightSideBar extends React.PureComponent\n{\n  render() {\n    const {\n      locusList,\n      enabledDataTypes,\n      setLocus,\n      setLocusList,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList\n          name=\"Right Side Bar\"\n          locusList={locusList}\n          setLocus={setLocus}\n          setLocusList={setLocusList}\n        />\n\n        {enabledDataTypes.includes('junctions') && <SpliceJunctionsOptionsPanel />}\n        {enabledDataTypes.includes('gcnv_bed') && <GcnvOptionsPanel />}\n        {enabledDataTypes.includes('alignment') && <BamOptionsPanel />}\n        {enabledDataTypes.includes('vcf') && <VcfOptionsPanel />}\n      </div>)\n  }\n}\n\nRightSideBar.propTypes = {\n  locusList: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getRightSideBarLocusList(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_RIGHT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable  react/jsx-closing-tag-location */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Icon } from 'semantic-ui-react'\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  margin-left: 20px;\n`\n\nconst AboutLink = () => (\n  <Modal\n    title=\"About the TGG Viewer\"\n    size=\"large\"\n    modalName=\"AboutModal\"\n    trigger={<LinkButton>About</LinkButton>}\n  >\n    The Translational Genomics Group (TGG) Viewer is a free, open-source web app for visualizing splice junctions, copy number, and other data\n    genome-wide using <a href=\"https://github.com/igvteam/igv.js\" target=\"_blank\">IGV.js</a><br />\n    <br />\n    Main features: <br />\n    <ul>\n      <li>Supports most file formats supported by IGV.js, including: .bed, .vcf, .bam, .cram, .bigWig, as well as\n        several custom formats for splice junctions (.junctions.bed.gz) and gCNV copy-number variants (.gcnv.bed.gz) </li>\n      <li>Includes custom reference tracks such as splice junctions from GTEx v8 muscle, blood, and fibroblast samples.</li>\n      <li>Supports adding gene or locus lists to left or right side bar for quick navigation across a list of regions.</li>\n      <li>Can load data files or reference tracks from any Google bucket to which you have read-access.</li>\n      <li>Retrieves just the on-screen sections of the files directly from Google buckets.</li>\n      <li>All settings, gene lists, and data paths can be exported and later restored or shared with others via a .json config file.\n        To export all current settings, click the <Icon name=\"download\" /> button, upload the .json file to github (or another public url), and then\n        to restore the settings, paste the file's URL into the Initial Settings input, and Apply. </li>\n      <li>The page url also records page settings so that they can be bookmarked or shared, but does not include gene lists.</li>\n    </ul>\n\n    <a href=\"https://github.com/broadinstitute/tgg-viewer/issues\" target=\"_blank\">Issues</a>\n    &nbsp;or <a href=\"https://github.com/broadinstitute/tgg-viewer/issues\" target=\"_blank\">Feature Requests</a>\n    &nbsp;can be submitted via <a href=\"https://github.com/broadinstitute/tgg-viewer\" target=\"_blank\">GitHub</a>.\n  </Modal>\n)\n\nexport default AboutLink\n","/* eslint-disable react/jsx-one-expression-per-line */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getUser, getIsGoogleLoginRequired } from '../redux/selectors'\n\n\nclass UserInfo extends React.PureComponent\n{\n  render() {\n\n    const {\n      isGoogleLoginRequired,\n      user,\n    } = this.props\n\n    if (isGoogleLoginRequired) {\n      if (!user.googleUserEmail) {\n        return <div>Signing in to Google Buckets...</div>\n      }\n\n      return <div>Signed in to Google Buckets as <b>{user.googleUserEmail}</b></div>\n    }\n\n    return <div />\n  }\n}\n\nUserInfo.propTypes = {\n  isGoogleLoginRequired: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  isGoogleLoginRequired: getIsGoogleLoginRequired(state),\n  user: getUser(state),\n\n})\n\nexport default connect(mapStateToProps)(UserInfo)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport AboutLink from './About'\nimport UserInfo from './UserInfo'\n\nconst HeaderRow = styled(Grid.Row)`\n  color: #444;\n  margin-bottom: 5px;\n`\n\nconst Column1 = styled(Grid.Column).attrs({ width: 6 })`\n  text-align: left;\n  padding-left: 75px !important;\n`\nconst Column2 = styled(Grid.Column).attrs({ width: 10 })`\n  text-align: right;\n  padding-right: 75px !important;\n`\n\nexport default () => (\n  <Grid>\n    <HeaderRow>\n      <Column1>\n        <b>TGG Viewer:</b>\n        <AboutLink />\n        {/* <a href=\"#\">Intro Video</a> &nbsp; &nbsp; */}\n      </Column1>\n      <Column2>\n        <UserInfo />\n      </Column2>\n    </HeaderRow>\n  </Grid>)\n","\nexport const throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable radix */\n/* eslint-disable prefer-template */\n/* eslint-disable no-else-return */\n\nimport _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport {\n  getGenome,\n  getLocus,\n  getTracks,\n  getSelectedSamplesByCategoryNameAndRowName,\n  getEnabledDataTypes,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  getGcnvOptions,\n} from '../redux/selectors'\nimport { throttle } from '../utils/throttle'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\n\n/**\n * Use a custom popupData function for the spliceJunction track\n */\nfunction popupData(clickState, features) {\n\n  if (!features) features = this.clickedFeatures(clickState)\n\n  let featureData = []\n  features.forEach((feature) => {\n\n    if (feature.end < clickState.genomicLocation || feature.start > clickState.genomicLocation) {\n      return\n    }\n    if (this.config.type === 'spliceJunctions') {\n      if (!feature.isVisible || !feature.attributes) {\n        return\n      }\n      featureData.push('<hr />')\n      featureData.push(\n        { name: `<b>${feature.chr}:${feature.start}-${feature.end} (${feature.strand} strand)</b>`, value: ' ' })\n\n      if (feature.attributes.annotated_junction) {\n        if (feature.attributes.annotated_junction === 'true') {\n          featureData.push({ name: 'Known Junction', value: '' })\n        } else {\n          featureData.push({ name: 'Novel Junction', value: '' })\n        }\n      }\n      featureData.push('<hr />')\n\n      featureData.push(\n        { name: (feature.end - feature.start).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','), value: 'bp length' })\n\n      if (feature.attributes.uniquely_mapped) {\n        featureData.push(\n          { name: feature.attributes.uniquely_mapped, value: 'uniquely mapped reads' })\n      }\n      if (feature.attributes.multi_mapped) {\n        featureData.push(\n          { name: feature.attributes.multi_mapped, value: 'multi-mapped reads' })\n      }\n      if (feature.attributes.uniquely_mapped && feature.attributes.multi_mapped) {\n        featureData.push(\n          { name: parseInt(feature.attributes.uniquely_mapped) + parseInt(feature.attributes.multi_mapped), value: 'total reads' })\n      }\n      if (feature.attributes.maximum_spliced_alignment_overhang) {\n        featureData.push({ name: feature.attributes.maximum_spliced_alignment_overhang, value: 'bp maximum overhang' })\n      }\n\n      if (feature.attributes.num_samples_with_this_junction) {\n        featureData.push({\n          name: feature.attributes.num_samples_with_this_junction,\n          value: (feature.attributes.num_samples_total ? `out of ${feature.attributes.num_samples_total} ` : '') + 'samples have this junction',\n        })\n        if (feature.attributes.percent_samples_with_this_junction) {\n          featureData.push({ name: feature.attributes.percent_samples_with_this_junction.toFixed(1), value: '% of samples have this junction' })\n        }\n\n      }\n      if (feature.attributes.info) {\n        featureData.push({ name: ' ', value: feature.attributes.info.replace('_', ' ') })\n      }\n\n      //add any other keys not already processed above\n      Object.keys(feature.attributes).filter((key) => ![\n        'line_width', 'color', 'left_shape', 'right_shape', 'info',\n        'annotated_junction', 'uniquely_mapped', 'multi_mapped', 'maximum_spliced_alignment_overhang',\n        'num_samples_with_this_junction', 'percent_samples_with_this_junction', 'num_samples_total',\n      ].includes(key)).forEach((key) => {\n        featureData.push({ name: key.replace(/_/g, ' '), value: feature.attributes[key].replace(/_/g, ' ') })\n      })\n\n      featureData = featureData.map((fd) => {\n        if (fd.name && fd.value) {\n          return { name: `<b>${fd.name}</b>`, value: fd.value }\n        } else {\n          return fd\n        }\n      })\n    }\n  })\n\n  return featureData\n}\n\n\nconst monkeyPatchPopupData = (track) => {\n  if (!track) {\n    console.warn('monkeyPatchPopupData: track arg is undefined')\n    return\n  }\n\n  if (track.type === 'spliceJunctions') {\n    track.popupData = popupData\n  } else if (track.type === 'merged') {\n    track.tracks.filter((subTrack) => subTrack.type === 'spliceJunctions').forEach((subTrack) => {\n      subTrack.popupData = popupData\n    })\n  }\n}\n\n\nclass IGV extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextLocusChangedEvent = false\n    this.ignoreNextTrackRemovedEvent = false\n    this.ignoreNextTrackPropsAfterOrderChangedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <div><div ref={this.setContainerElement} /></div>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    const {\n      genome,\n      locus,\n      tracks,\n      locusChangedHandler,\n      trackRemovedHandler,\n      trackOrderChangedHandler,\n    } = this.props\n\n    const igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus,\n      genome,\n      tracks,\n    }\n\n    //console.log('Calling igv.createBrowser(..)', igvBrowserOptions)\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n      window.igvBrowser = browser //for debugging\n\n      browser.trackViews.forEach((trackView) => { monkeyPatchPopupData(trackView.track) })\n\n      if (locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, (event) => {\n          if (!this.ignoreNextLocusChangedEvent) {\n            locusChangedHandler(event)\n          }\n          this.ignoreNextLocusChangedEvent = false\n        }))\n      }\n\n      if (trackRemovedHandler) {\n        this.browser.on('trackremoved', (track) => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            trackRemovedHandler(track.config.categoryName, track.config.rowName)\n          }\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n\n      if (trackOrderChangedHandler) {\n        this.browser.on('trackorderchanged', (trackNamesInOrder) => {\n          this.ignoreNextTrackPropsAfterOrderChangedEvent = true\n          trackOrderChangedHandler(trackNamesInOrder)\n        })\n      }\n    })\n  }\n\n  shouldTrackBeReloaded = (track, props, nextProps) => {\n    const {\n      selectedSamplesByCategoryNameAndRowName,\n      enabledDataTypes,\n      sjOptions,\n      vcfOptions,\n      bamOptions,\n      gcnvOptions,\n    } = props\n\n    const junctionTrackDisplaySettingsChanged = ['merged', 'wig', 'spliceJunctions'].includes(track.type) && (\n      nextProps.enabledDataTypes.includes('junctions') !== enabledDataTypes.includes('junctions')\n      || nextProps.enabledDataTypes.includes('coverage') !== enabledDataTypes.includes('coverage')\n      || nextProps.sjOptions !== sjOptions)\n    const vcfTrackDisplaySettingsChanged = track.type === 'variant' && nextProps.vcfOptions !== vcfOptions\n    const alignmentTrackDisplaySettingsChanged = track.type === 'alignment' && nextProps.bamOptions !== bamOptions\n    const gcnvTrackDisplaySettingsChanged = track.type === 'gcnv' && nextProps.gcnvOptions !== gcnvOptions\n    const gcnvTrackHighlightedSamplesChanged = track.type === 'gcnv' && (\n      !_.isEqual(\n        ((nextProps.selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).selectedSamples || {})[track.rowName],\n        ((selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).selectedSamples || {})[track.rowName])\n      || !_.isEqual(\n        ((nextProps.selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).sampleSettings || {})[track.rowName],\n        ((selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).sampleSettings || {})[track.rowName])\n    )\n\n    const result = junctionTrackDisplaySettingsChanged\n      || vcfTrackDisplaySettingsChanged\n      || alignmentTrackDisplaySettingsChanged\n      || gcnvTrackDisplaySettingsChanged\n      || gcnvTrackHighlightedSamplesChanged\n\n    //console.log('Should track', track.name, track.order, 'be reloaded? ', result)\n\n    return result\n  }\n\n  getTrackId = (track) => `${track.url}|${track.categoryName}|${track.rowName}`\n\n  getIgvTrackView = (track) => {\n    const trackId = this.getTrackId(track)\n\n    const existingTrackViews = this.browser.trackViews.filter((existingTrackView) => {\n      const existingTrackConfig = (existingTrackView.track || {}).config || {}\n      return trackId === this.getTrackId(existingTrackConfig)\n    })\n\n    return existingTrackViews.length > 0 && existingTrackViews[0]\n  }\n\n  reloadRemoveAndAddTracks = (nextProps) => {\n    if (this.ignoreNextTrackPropsAfterOrderChangedEvent) {\n      this.ignoreNextTrackPropsAfterOrderChangedEvent = false\n      return\n    }\n    const nextTrackByTrackNameAndType = nextProps.tracks.reduce((acc, track) => {\n      return { [`${track.name}|${track.type}`]: track, ...acc }\n    }, {})\n\n    // reload or remove existing tracks\n    if (this.props.tracks) {\n      this.props.tracks.forEach(async (track) => {\n        const nextTrack = nextTrackByTrackNameAndType[`${track.name}|${track.type}`]\n        if (nextTrack) {\n          if (this.shouldTrackBeReloaded(track, this.props, nextProps)) {\n            const trackView = this.getIgvTrackView(track)\n            console.log('Reloading track', track.name, nextTrack)\n            trackView.track.updateConfig(nextTrack)\n            await trackView.track.postInit()\n            //await trackView.updateViews(true)\n            trackView.repaintViews()\n          }\n\n          // delete track from nextTrackByTrackNameAndType to indicate that it's still selected\n          delete nextTrackByTrackNameAndType[`${track.name}|${track.type}`]\n\n        } else {\n          // remove track that was de-selected\n          try {\n            console.log('Removing track', track.name)\n            this.ignoreNextTrackRemovedEvent = true\n            this.browser.removeTrackByName(track.name)\n          } catch (e) {\n            console.warn('Unable to remove track', track.name, e)\n          }\n        }\n      })\n    }\n    // load any newly-selected track(s)\n    const remainingTracks = Object.values(nextTrackByTrackNameAndType)\n    remainingTracks.forEach((track) => {\n      try {\n        if (!this.getIgvTrackView(track)) { // double-check that the track isn't already loaded\n          console.log('Loading new track', track.name)\n          this.browser.loadTrack(track).then(monkeyPatchPopupData)\n        }\n      } catch (e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (!this.container || !this.browser) {\n      return false\n    }\n\n    //console.log('Should component update', nextProps)\n    //update locus\n    const currentIGVLocus = this.browser.$searchInput.val()\n    const nextIGVLocus = nextProps.locus\n    if (nextProps.locus && (!currentIGVLocus || nextIGVLocus.replace(/,/g, '') !== currentIGVLocus.replace(/,/g, ''))) {\n      this.ignoreNextLocusChangedEvent = true\n      this.browser.search(nextIGVLocus)\n    }\n\n    this.reloadRemoveAndAddTracks(nextProps)\n\n    return false\n  }\n}\n\nIGV.propTypes = {\n  genome: PropTypes.string.isRequired,\n  locus: PropTypes.string.isRequired,\n  tracks: PropTypes.array.isRequired,\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object.isRequired,\n  enabledDataTypes: PropTypes.array.isRequired,\n  locusChangedHandler: PropTypes.func,\n  trackRemovedHandler: PropTypes.func,\n  trackOrderChangedHandler: PropTypes.func,\n  sjOptions: PropTypes.object,\n  vcfOptions: PropTypes.object,\n  bamOptions: PropTypes.object,\n  gcnvOptions: PropTypes.object,\n}\n\nconst mapStateToProps = (state) => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n  gcnvOptions: getGcnvOptions(state),\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  locusChangedHandler: (event) => {\n    if (event && event.label) {\n      const newLocus = event.label.replace(/,/g, '')\n      dispatch({\n        type: 'UPDATE_LOCUS',\n        newValue: newLocus,\n      })\n    }\n  },\n\n  trackRemovedHandler: (categoryName, trackName) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_ROW_NAMES',\n      categoryName,\n      selectedRowNames: [trackName],\n    })\n  },\n\n  trackOrderChangedHandler: (trackNames) => {\n    dispatch({\n      type: 'UPDATE_TRACK_ORDER',\n      newValue: trackNames,\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/require-optimization */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable operator-linebreak */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { GoogleLogin } from 'react-google-login'\nimport IGV from './IGV'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\nimport { getInitialSettingsUrl, getRowsInCategories, getIsGoogleLoginRequired } from '../redux/selectors'\n\nconst SignInButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 50px;\n  margin-left: 100px;\n  word-wrap: break-word;\n  word-break: break-all;\n`\n\nclass LoginAndShowIGV extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  handleGoogleSignIn = (user) => {\n    const profile = user && user.getBasicProfile()\n    const googleUserEmail = profile && profile.getEmail()\n\n    this.setState({ show: googleUserEmail ? 'igv' : 'signin-button' })\n    this.props.userChangedHandler(googleUserEmail)\n  }\n\n  async componentDidMount() {\n    if (!this.props.isGoogleLoginRequired) {\n      this.setState({ show: 'igv' })\n      return\n    }\n\n    try {\n      await initGoogleClient()\n    } catch (e) {\n      console.error('Error during google sign-in init:', e)\n      this.setState({ show: 'signin-button' })\n      return\n    }\n\n    try {\n      this.setState({ signInError: null })\n      await googleSignIn()\n    } catch (e) {\n      console.error('Error during google sign-in:', e)\n      if (e.details && e.details.search('Cookies are not enabled') >= 0) {\n        this.setState({ signInError: 'cookies-disabled' })\n      }\n\n      this.setState({ show: 'signin-button' })\n      return\n    }\n    const googleUserEmail = await getGoogleUserEmail()\n\n    this.setState({ show: googleUserEmail ? 'igv' : 'signin-button' })\n    this.props.userChangedHandler(googleUserEmail)\n  }\n\n  render = () => {\n    if (this.state.show === 'igv' || !this.props.isGoogleLoginRequired) {\n      console.log('Render <IGV />')\n      return <IGV />\n    }\n\n    if (this.state.show === 'signin-button') {\n      let dataPathCounter = 0\n      const buckets = new Set()\n      this.props.rowsInCategories.forEach((category) => {\n        category.rows.forEach((row) => {\n          if (row.data) {\n            row.data.forEach((data) => {\n              if (data.url && data.url.startsWith('gs://')) {\n                dataPathCounter += 1\n\n                const urlTokens = data.url.split('/')\n                const bucket = urlTokens[2]\n                if (bucket !== 'tgg-viewer') {\n                  buckets.add(bucket)\n                }\n              }\n            })\n          }\n        })\n      })\n\n      if (dataPathCounter === 0) {\n        return <InfoContainer>No dataset paths loaded. &nbsp; Please specify an Initial settings url.</InfoContainer>\n      }\n\n      return (\n        <div>\n          <InfoContainer>\n            <div>\n              Retrieved {dataPathCounter} data paths from settings file: <a href={this.props.initialSettingsUrl} target=\"_blank\">{this.props.initialSettingsUrl}</a><br />\n              <br />\n            </div>\n\n            {\n              buckets.size > 0 &&\n              <div>\n                To view this data, you should have read access to the following Google Storage buckets:\n                <ul>\n                  {\n                    Array.from(buckets).map((bucket) => <li key={bucket}><a href={`https://console.cloud.google.com/storage/browser/${bucket}`} target=\"_blank\">{bucket}</a></li>)\n                  }\n                </ul>\n              </div>\n            }\n            {\n              this.state.signInError === 'cookies-disabled' &&\n              <div style={{ marginTop: '20px', color: 'red', textAlign: 'left' }}>\n\n                <b>ERROR: Cookies are disabled</b><br />\n                Please allow cookies to enable sign in with Google.\n              </div>\n            }\n          </InfoContainer>\n\n          <SignInButtonContainer>\n            <GoogleLogin\n              clientId={window.TGG_VIEWER_CLIENT_ID}\n              theme=\"dark\"\n              buttonText=\"Sign in with Google\"\n              disabled={this.state.signInError}\n              onSuccess={this.handleGoogleSignIn}\n              onFailure={this.handleGoogleSignIn}\n              cookiePolicy=\"single_host_origin\"\n            />\n          </SignInButtonContainer>\n        </div>)\n\n    }\n\n    return null\n  }\n}\n\nLoginAndShowIGV.propTypes = {\n  isGoogleLoginRequired: PropTypes.bool,\n  rowsInCategories: PropTypes.array,\n  initialSettingsUrl: PropTypes.string,\n  userChangedHandler: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  isGoogleLoginRequired: getIsGoogleLoginRequired(state),\n  rowsInCategories: getRowsInCategories(state),\n  initialSettingsUrl: getInitialSettingsUrl(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: { googleUserEmail },\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginAndShowIGV)\n","/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon, Popup } from 'semantic-ui-react'\n\n\nclass RequestStatus extends React.PureComponent {\n\n  static NONE = 'NONE'\n\n  static IN_PROGRESS = 'IN_PROGRESS'\n\n  static SUCCEEDED = 'SUCCEEDED'\n\n  static ERROR = 'ERROR'\n\n  render() {\n    switch (this.props.status) {\n      case RequestStatus.IN_PROGRESS:\n        return <Icon loading name=\"spinner\" style={{ color: '#4183c4' }} />\n      case RequestStatus.SUCCEEDED:\n        return <Popup\n          trigger={\n            <Icon name=\"check circle\" style={{ color: '#00C000' }} />\n          }\n          content={this.props.successMessage || 'Success'}\n          position=\"top center\"\n          size=\"small\"\n        />\n      case RequestStatus.ERROR:\n        return <Popup\n          trigger={\n            <Icon name=\"warning circle\" style={{ color: '#F00000' }} />\n          }\n          content={this.props.errorMessage || ''}\n          position=\"top center\"\n          size=\"small\"\n        />\n      default:\n        return <Icon name=\"warning circle\" style={{ color: 'rgb(0,0,0,0.0)' }} />\n    }\n  }\n}\n\nRequestStatus.propTypes = {\n  status: PropTypes.string,\n  errorMessage: PropTypes.string,\n  successMessage: PropTypes.string,\n}\n\nexport default RequestStatus\n","import LZString from 'lz-string'\n\n/* in-memory cache to avoid unnecessary compression/decompression */\nconst CACHE = {}\n\n/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const jsonString = JSON.stringify(state)\n    if (CACHE[label] === jsonString) {\n      return\n    }\n    console.warn(`LocalStorage: compressing ${label}`)\n    const serializedState = LZString.compress(jsonString)\n    localStorage.setItem(label, serializedState)\n    CACHE[label] = jsonString\n  } catch (err) {\n    console.warn('Unable to save state: ', label, state, err)\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    const jsonString = LZString.decompress(serializedState)\n    CACHE[label] = jsonString\n\n    if (jsonString === null) {\n      return undefined\n    }\n\n    return JSON.parse(jsonString)\n  } catch (err) {\n    return undefined\n  }\n}\n","/* eslint-disable operator-linebreak */\n/* eslint-disable no-unused-vars */\n\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\n\nconst INITIAL_ROWS_IN_CATEGORIES = []\n\nexport const DEFAULT_STATE = {\n  isGoogleLoginRequired: true,\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  dataTypesToShow: ['junctions', 'coverage', 'vcf', 'gcnv_bed'],\n  leftSideBarLocusList: [],\n  rightSideBarLocusList: [],\n  rowsInCategories: INITIAL_ROWS_IN_CATEGORIES,\n  selectedRowNamesByCategoryName: {},\n  sjOptions: {\n    trackHeight: 170,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 0,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    maxPercentSamplesWithThisJunction: 100,\n    maxSamplesWithThisJunction: 1000000000,\n    minJunctionEndsVisible: 0,\n    minPercentSamplesWithThisJunction: 0,\n    minSamplesWithThisJunction: 0,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelWith: 'uniqueReadCount',\n  },\n  vcfOptions: {\n    displayMode: 'EXPANDED',\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    alignmentShading: 'strand',\n  },\n  gcnvOptions: {\n    trackHeight: 200,\n    trackMin: 0,\n    trackMax: 5,\n    autoscale: false,\n    onlyHandleClicksForHighlightedSamples: true,\n  },\n  initialSettingsUrl: 'https://broadinstitute.github.io/rnaseq-methods/pipelines/tgg_viewer/configs/default.json',\n}\n\n\nconst KEYS_TO_PERSIST_IN_LOCAL_STORAGE = [\n  'leftSideBarLocusList', 'rightSideBarLocusList',\n]\n\nexport const getStateFromLocalStorage = () => {\n  // restore values from local storage\n  const stateFromLocalStorage = KEYS_TO_PERSIST_IN_LOCAL_STORAGE.reduce((acc, key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      acc[key] = v\n    }\n    return acc\n  }, {})\n\n  return stateFromLocalStorage\n}\n\nconst KEYS_TO_PERSIST_IN_URL = {\n  locus: 'locus',\n  dataTypesToShow: 'show',\n  trackOrder: 'order',\n  selectedRowNamesByCategoryName: 'selectedRows',\n  selectedSamplesByCategoryNameAndRowName: 'selectedSamples',\n  sjOptions: 'sjOptions',\n  vcfOptions: 'vcfOptions',\n  bamOptions: 'bamOptions',\n  gcnvOptions: 'gcnvOptions',\n  initialSettingsUrl: 'settingsUrl',\n}\n\nexport const getStateFromUrlHash = () => {\n  // restore values from url\n  const REVERSE_KEY_NAME_LOOKUP = Object.entries(KEYS_TO_PERSIST_IN_URL).reduce(\n    (acc, [key, value]) => {\n      return { ...acc, [value]: key }\n    }, {})\n  const hashString = window.location.hash.replace(/^#/, '')\n\n  const stateFromUrlHash = hashString ?\n    hashString.split('&').reduce((acc, keyValue) => {\n      const keyValueList = keyValue.split('=')\n      const key = (keyValueList[0] in REVERSE_KEY_NAME_LOOKUP) ? REVERSE_KEY_NAME_LOOKUP[keyValueList[0]] : keyValueList[0]\n      if (key === 'locus') {\n        acc = { ...acc, [key]: keyValueList[1] }\n      } else {\n        try {\n          acc[key] = jsurl.parse(keyValueList[1])\n        } catch (e) {\n          console.error('Couldn\\'t parse url hash param', keyValueList[0], ': ', keyValueList[1])\n        }\n      }\n      if (!acc[key] || (typeof acc[key] === 'object' && Object.keys(acc[key]).length === 0)) {\n        //delete keys with empty values\n        delete acc[key]\n      }\n\n      return acc\n    }, {})\n    : {}\n\n  return stateFromUrlHash\n}\n\nexport const computeInitialState = () => {\n\n  const stateFromLocalStorage = getStateFromLocalStorage()\n  const stateFromUrlHash = getStateFromUrlHash()\n\n  // default values are over-ridden by values from local storage, which are over-ridden by values from the url\n  const initialState = { ...DEFAULT_STATE, ...stateFromLocalStorage, ...stateFromUrlHash }\n\n  return initialState\n}\n\n\nexport const updateLocalStorageAndUrl = (state) => {\n  //update local storage\n\n  KEYS_TO_PERSIST_IN_LOCAL_STORAGE.forEach((key) => {\n    saveState(key, state[key])\n  })\n\n  //update url\n  const hashString = Object.keys(state)\n    .filter((key) => (key in KEYS_TO_PERSIST_IN_URL))\n    .reduce((hashKeyValueList, key) => {\n      const value = key === 'locus' ? state[key].replace(',', '') : jsurl.stringify(state[key])\n      return [\n        ...hashKeyValueList,\n        `${KEYS_TO_PERSIST_IN_URL[key]}=${value}`,\n      ]\n    }, []).join('&')\n\n  window.location.hash = `#${hashString}`\n}\n","/* eslint-disable react/no-find-dom-node */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Input, Popup } from 'semantic-ui-react'\nimport delay from 'timeout-as-promise'\nimport yaml from 'js-yaml'\nimport { getInitialSettingsUrl } from '../redux/selectors'\nimport RequestStatus from './RequestStatus'\nimport { DEFAULT_STATE, getStateFromLocalStorage, getStateFromUrlHash } from '../redux/initialState'\n\nconst StyledDiv = styled.div`\n  color: #999;\n  width: 100%;\n  text-align: center;\n  \n  .ui.label {\n    color: #444;\n    background-color: #f3f3f3;\n  }\n`\n\nconst StyledInput = styled(Input)`\n  margin-top: 100px;\n  width: calc(100% - 350px);\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 20px !important;\n  margin-right: 15px !important;\n`\n\nconst StyledButton2 = styled(Button)`\n  margin-left: 10px !important;\n`\n\nclass InitialSettingsForm extends React.PureComponent\n{\n  constructor(props) {\n    super(props)\n    this.textInputValue = props.initialSettingsUrl || ''\n    this.state = {\n      requestStatus: RequestStatus.NONE,\n      successMessage: '',\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    const { initialSettingsUrl } = this.props\n    if (initialSettingsUrl) {\n      // download url\n      console.log('Loading settings from', initialSettingsUrl)\n      await this.applyInitialSettingsUrl(initialSettingsUrl, false)\n    }\n  }\n\n  loadInitialSettingsUrl = async (url, overrideLocalSettings) => {\n    const {\n      globalState,\n      updateInitialSettingsUrl,\n      resetGlobalState,\n    } = this.props\n\n    if (!url) {\n      //reset url to empty\n      resetGlobalState({ ...DEFAULT_STATE, ...{ user: globalState.user } })\n      updateInitialSettingsUrl('')\n      return\n    }\n\n    let stateFromLocalStorage\n    let stateFromUrlHash\n    if (!overrideLocalSettings) {\n      stateFromLocalStorage = getStateFromLocalStorage()\n      stateFromUrlHash = getStateFromUrlHash()\n    }\n\n    //validate url\n    if (url.search(':') === -1 || url.search('/') === -1) {\n      throw new Error(`Invalid url: \"${url}\"`)\n    }\n\n    const isYaml = url.search('.yaml') !== -1 || url.search('.yml') !== -1\n    const isJson = url.search('.json') !== -1\n    const isUnknown = !isYaml && !isJson\n\n    //NOTE: changed my mind about requiring a .yaml or .json extension to allow for more flexibility.\n    //if (!isYamlURL && !isJsonURL) {\n    //  throw new Error('Expected file extensions (\".yaml\", \".yml\", or \".json\") not found in the URL')\n    //}\n\n    const response = await fetch(url)\n    if (!response.ok) {\n      throw new Error(`Couldn't load URL. Error: ${response.statusText.toLowerCase()} (${response.status})`)\n    }\n\n    const fileContents = await response.text()\n\n    let settings = null\n    if (!settings && (isYaml || isUnknown)) {\n      try {\n        settings = yaml.safeLoad(fileContents)\n      } catch (e) {\n        throw new Error(`Unable to parse YAML file: ${url}  ${e}`)\n      }\n    }\n\n    if (!settings && (isJson || isUnknown)) {\n      try {\n        settings = JSON.parse(fileContents)\n      } catch (e) {\n        throw new Error(`Unable to parse JSON file: ${url}  ${e}`)\n      }\n    }\n\n    if (!settings) {\n      throw new Error(`Unable to parse settings from file: ${url}`)\n    }\n\n    // TODO validate settings more\n\n    // filter settings to keys in globalState\n    const filteredSettings = Object.keys(globalState).reduce((acc, key) => {\n      if (key in settings) {\n        return { ...acc, [key]: settings[key] }\n      }\n      return acc\n    }, {})\n\n    console.log('Retrieved state from config file:', filteredSettings)\n\n    // apply settings\n    let newState = { ...globalState, ...filteredSettings }\n    if (!overrideLocalSettings) {\n      console.log('Applying settings from local storage', stateFromLocalStorage)\n      console.log('Applying settings from url hash', stateFromUrlHash)\n      newState = { ...newState, ...stateFromLocalStorage, ...stateFromUrlHash }\n    }\n\n    console.log('Setting global state to', newState)\n    resetGlobalState(newState)\n    updateInitialSettingsUrl(url)\n  }\n\n  applyInitialSettingsUrl = async (url, overrideLocalSettings = false) => {\n\n    this.setState({ requestStatus: RequestStatus.IN_PROGRESS })\n\n    if (url.startsWith('https://github.com/')) {\n      // switch to the github raw url\n      url = url.replace('https://github.com', 'https://raw.githubusercontent.com').replace('blob/', '')\n    } else if (url.startsWith('https://storage.googleapis.com') || url.startsWith('gs://')) {\n      // switch to the url that supports CORS (https://stackoverflow.com/questions/66934689/getting-cors-issue-on-wildcard-cors-enabled-gcs-bucket-with-fetch)\n      const urlParts = url.replace('gs://', '').replace('https://storage.googleapis.com/', '').split('/')\n      const bucketName = urlParts[0]\n      const objectPath = urlParts.slice(1).join('/')\n      url = `https://${bucketName}.storage.googleapis.com/${objectPath}`\n    }\n\n\n    try {\n      await this.loadInitialSettingsUrl(url, overrideLocalSettings)\n\n      this.setState({ requestStatus: RequestStatus.SUCCEEDED, successMessage: url ? 'Successfully loaded URL and applied settings' : 'Reset all settings to defaults' })\n    } catch (e) {\n      this.setState({ requestStatus: RequestStatus.ERROR, errorMessage: e.toString() })\n    }\n\n    // wait and then clear the message\n    await delay(10000)\n    if (this.state.requestStatus !== RequestStatus.IN_PROGRESS) {\n      this.setState({ requestStatus: RequestStatus.NONE, errorMessage: '' })\n    }\n  }\n\n  exportCurrentSettings = () => {\n    //convert global state to a JSON string\n    const EXCLUDED_KEYS = ['user', 'modals']\n    const globalStateForExport = Object.keys(this.props.globalState).reduce((acc, key) => {\n      if (!EXCLUDED_KEYS.includes(key)) {\n        acc[key] = this.props.globalState[key]\n      }\n      return acc\n    }, {})\n\n    return encodeURIComponent(JSON.stringify(globalStateForExport, null, 5))\n  }\n\n  render() {\n    const {\n      initialSettingsUrl,\n    } = this.props\n\n    return (\n      <StyledDiv align=\"center\">\n        <StyledInput\n          label=\"Initial settings:\"\n          defaultValue={initialSettingsUrl}\n          placeholder=\"URL of .yaml or .json settings file (eg. http://.../settings.json), or blank to reset all settings to defaults.\"\n          onChange={(e) => { this.textInputValue = e.target.value }}\n          onKeyUp={(e) => e.keyCode === 13 && this.applyInitialSettingsUrl(e.target.value, true)}\n        />\n        <StyledButton\n          content=\"Apply\"\n          onClick={() => this.applyInitialSettingsUrl(this.textInputValue, true)}\n        />\n        <RequestStatus\n          status={this.state.requestStatus}\n          errorMessage={this.state.errorMessage}\n          successMessage={this.state.successMessage}\n        />\n        <Popup\n          content=\"Export current settings to a .json file. If you then upload this file to a public url (for example to github) and then paste the url here, the current settings will be restored.\"\n          position=\"right center\"\n          trigger={\n            <a download=\"settings.json\" href={`data:text/json;charset=utf-8,${this.exportCurrentSettings()}`}>\n              <StyledButton2 icon=\"download\" />\n            </a>\n          }\n        />\n      </StyledDiv>)\n  }\n}\n\nInitialSettingsForm.propTypes = {\n  initialSettingsUrl: PropTypes.string.isRequired,\n  globalState: PropTypes.object,\n  updateInitialSettingsUrl: PropTypes.func,\n  resetGlobalState: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  globalState: state,\n  initialSettingsUrl: getInitialSettingsUrl(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateInitialSettingsUrl: (newUrl) => {\n    dispatch({\n      type: 'UPDATE_INITIAL_SETTINGS_URL',\n      newValue: newUrl,\n    })\n  },\n  resetGlobalState: (state) => {\n    dispatch({\n      type: 'RESET_GLOBAL_STATE',\n      newState: state,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialSettingsForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport Header from './Header'\nimport LoginAndShowIGV from './LoginAndShowIGV'\nimport InitialSettingsForm from './InitialSettingsForm'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nconst SIDE_BAR_WIDTH = 210\n\nconst LeftSideBarColumn = styled(Grid.Column)`\n  min-width: ${SIDE_BAR_WIDTH}px !important;\n  z-index: 2;\n`\n\nconst RightSideBarColumn = styled(Grid.Column)`\n  min-width: ${SIDE_BAR_WIDTH}px !important;\n  z-index: 0;\n`\n\nconst MiddleColumn = styled(Grid.Column)`\n  min-width: calc(99% - ${2 * SIDE_BAR_WIDTH + 5}px) !important;\n  z-index: 1;\n`\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <LeftSideBarColumn><LeftSideBar /></LeftSideBarColumn>\n        <MiddleColumn>\n          <Header />\n          <LoginAndShowIGV />\n          <InitialSettingsForm />\n        </MiddleColumn>\n        <RightSideBarColumn><RightSideBar /></RightSideBarColumn>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","/* eslint-disable prefer-object-spread */\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { updateLocalStorageAndUrl, computeInitialState } from './initialState'\n\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\nimport modalReducers from './utils/modalReducer'\n\n\nconst rowsInCategoriesReducer = (state, action) => {\n  if (!action || !action.categoryName || !action.rows) {\n    return state || []\n  }\n\n  return state.map((category) => {\n    if (category.categoryName !== action.categoryName) {\n      return category\n    }\n\n    let updatedRows\n    switch (action.type) {\n      case 'SET_ROWS': {\n        updatedRows = [...action.rows]\n        break\n      }\n      case 'ADD_ROWS': {\n        const existingNames = category.rows.map((row) => row.name)\n        updatedRows = [...category.rows, ...action.rows.filter((row) => !existingNames.includes(row.name))]\n        break\n      }\n      default:\n        updatedRows = category.rows\n    }\n\n    const result = {\n      ...category,\n      rows: updatedRows,\n    }\n    return result\n  })\n}\n\n\nconst selectedRowNamesByCategoryNameReducer = (state, action) => {\n  if (!action || !action.categoryName || !Array.isArray(action.selectedRowNames)) {\n    return state || {}\n  }\n  const previousList = state[action.categoryName] || []\n  switch (action.type) {\n    case 'SET_SELECTED_ROW_NAMES':\n    case 'ADD_SELECTED_ROW_NAMES':\n    case 'REMOVE_SELECTED_ROW_NAMES': {\n      let updatedList\n      if (action.type === 'SET_SELECTED_ROW_NAMES') {\n        updatedList = Array.from(new Set(action.selectedRowNames)) // make a copy of action.values\n      } else if (action.type === 'ADD_SELECTED_ROW_NAMES') {\n        updatedList = Array.from(new Set([...previousList, ...action.selectedRowNames]))\n      } else {\n        const valuesToRemove = action.selectedRowNames\n        updatedList = previousList.filter((v) => !valuesToRemove.includes(v))\n      }\n\n      return {\n        ...state,\n        [action.categoryName]: updatedList,\n      }\n    }\n    default:\n      console.trace(`Unknown action type: ${action.type}`)\n  }\n\n  return state\n}\n\n\nconst selectedSamplesByCategoryNameAndRowNameReducer = (state, action) => {\n  if (!action || !action.categoryName || (!action.selectedSamplesByRowName && !action.sampleSettingsByRowNameAndSampleName)) {\n    return state || {}\n  }\n\n  const categoryObj = state[action.categoryName] || {}\n  const previousSelectedSamplesByRowName = categoryObj.selectedSamples || {}\n  const previousSampleSettingsByRowNameAndSampleName = categoryObj.sampleSettings || {}\n  let updatedSelectedSamplesByRowName = previousSelectedSamplesByRowName\n  let updatedSampleSettingsByRowNameAndSampleName = previousSampleSettingsByRowNameAndSampleName\n\n  switch (action.type) {\n    case 'SET_SELECTED_SAMPLES':\n    case 'ADD_SELECTED_SAMPLES':\n    case 'REMOVE_SELECTED_SAMPLES': {\n      if (action.type === 'SET_SELECTED_SAMPLES') {\n        updatedSelectedSamplesByRowName = { ...previousSelectedSamplesByRowName, ...action.selectedSamplesByRowName }\n      } else if (action.type === 'ADD_SELECTED_SAMPLES') {\n        updatedSelectedSamplesByRowName = Array.from(new Set([\n          ...Object.keys(previousSelectedSamplesByRowName),\n          ...Object.keys(action.selectedSamplesByRowName),\n        ])).reduce((acc, rowName) => {\n          acc[rowName] = Array.from(new Set([...(previousSelectedSamplesByRowName[rowName] || []), ...(action.selectedSamplesByRowName[rowName] || [])]))\n\n          return acc\n        }, {})\n      } else {\n        updatedSelectedSamplesByRowName = Object.keys(previousSelectedSamplesByRowName).reduce((acc, rowName) => {\n          const valuesToRemove = action.selectedSamplesByRowName[rowName] || []\n          const updatedList = (previousSelectedSamplesByRowName[rowName] || []).filter((v) => !valuesToRemove.includes(v))\n          if (updatedList.length > 0) {\n            acc[rowName] = updatedList\n          }\n          return acc\n        }, {})\n      }\n      break\n    }\n\n    case 'UPDATE_SAMPLE_SETTINGS': {\n      updatedSampleSettingsByRowNameAndSampleName = {\n        ...previousSampleSettingsByRowNameAndSampleName,\n        ...action.sampleSettingsByRowNameAndSampleName,\n      }\n      Object.keys(action.sampleSettingsByRowNameAndSampleName).forEach((rowName) => {\n        const previousSampleSettingsBySampleName = previousSampleSettingsByRowNameAndSampleName[rowName] || {}\n        const newSampleSettingsBySampleName = action.sampleSettingsByRowNameAndSampleName[rowName]\n        const mergedSamplesSettingsBySampleName = {\n          ...previousSampleSettingsBySampleName,\n          ...newSampleSettingsBySampleName,\n        }\n        Object.entries(newSampleSettingsBySampleName).forEach(\n          ([sampleName, sampleSettings]) => {\n            const mergedSampleSettings = {\n              ...previousSampleSettingsBySampleName[sampleName] || {},\n              ...sampleSettings,\n            }\n            mergedSamplesSettingsBySampleName[sampleName] = mergedSampleSettings\n          })\n        updatedSampleSettingsByRowNameAndSampleName[rowName] = mergedSamplesSettingsBySampleName\n      })\n      break\n    }\n\n    default: {\n      console.trace(`Unknown action type: ${action.type}`)\n      return state\n    }\n  }\n\n  return {\n    ...state,\n    [action.categoryName]: {\n      selectedSamples: updatedSelectedSamplesByRowName,\n      sampleSettings: updatedSampleSettingsByRowNameAndSampleName,\n    },\n  }\n}\n\n// combined reducers\nconst otherReducers = combineReducers(Object.assign({\n  isGoogleLoginRequired: zeroActionsReducer,\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  rightSideBarLocusList: createArrayReducer('RIGHT_SIDE_BAR_LOCUS_LIST'),\n  leftSideBarLocusList: createArrayReducer('LEFT_SIDE_BAR_LOCUS_LIST'),\n  dataTypesToShow: createArrayReducer('DATA_TYPES_TO_SHOW'),\n  rowsInCategories: rowsInCategoriesReducer,\n  selectedRowNamesByCategoryName: selectedRowNamesByCategoryNameReducer,\n  selectedSamplesByCategoryNameAndRowName: selectedSamplesByCategoryNameAndRowNameReducer,\n  trackOrder: createSingleValueReducer('UPDATE_TRACK_ORDER', []),\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  gcnvOptions: createSingleObjectReducer('UPDATE_GCNV_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n  initialSettingsUrl: createSingleValueReducer('UPDATE_INITIAL_SETTINGS_URL', ''),\n}, modalReducers))\n\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'RESET_GLOBAL_STATE') {\n    return action.newState\n  }\n\n  const nextState = otherReducers(state, action)\n\n  updateLocalStorageAndUrl(nextState)\n  return nextState\n}\n\n\n/**\n * Initialize and return the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const createReduxStore = () => {\n\n  const initialState = computeInitialState()\n\n  console.log('Initializing store to:', initialState)\n\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunkMiddleware)))\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport { createReduxStore } from './redux/rootReducer'\n\nfunction App() {\n  return (\n    <Provider store={createReduxStore()}>\n      <BaseLayout />\n    </Provider>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}