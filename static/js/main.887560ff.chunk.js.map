{"version":3,"sources":["redux/utils/reducerFactories.js","redux/utils/modalReducer.js","components/Modal.jsx","components/LocusList.jsx","utils/googleAuth.js","constants.js","redux/selectors.js","components/LeftSideBar.jsx","components/RightSideBar.jsx","components/IGV.jsx","components/UserInfo.jsx","components/BaseLayout.jsx","redux/rootReducer.js","utils/localStorage.js","redux/configureStore.js","App.js","index.js"],"names":["zeroActionsReducer","state","createSingleObjectReducer","updateActionType","initialState","debug","reducer","action","type","undefined","updates","console","error","newState","log","createArrayReducer","actionTypeSuffix","Array","isArray","values","valuesToRemove","filter","v","includes","modals","key","updatesById","shallowCopy","Object","entries","forEach","id","obj","createObjectsByIdReducer","getModalOpen","modalName","open","ButtonLink","styled","color","padding","props","Button","attrs","basic","fontWeight","ContainerDiv","div","StyledButton","CustomModal","handleClose","close","handleSave","trigger","this","React","cloneElement","onClick","Modal","isOpen","onClose","size","Header","title","floated","icon","Icon","name","Content","children","tabIndex","Component","defaultProps","connect","ownProps","dispatch","e","preventDefault","confirmed","getState","confirmOnClose","confirming","LinkButton","a","EditLocusListButtonAndModal","render","locusList","length","newLocusList","textAreaValue","split","Boolean","setLocusList","Form","Field","control","TextArea","style","minHeight","defaultValue","onKeyUp","target","value","placeholder","join","LocusList","setLocus","map","locus","i","googleSignIn","gapi","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","getGoogleUserEmail","profile","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","user","reloadAuthResponse","getAuthResponse","access_token","MOTIFS","getLocus","getRightSideBarLocusList","rightSideBarLocusList","getLeftSideBarLocusList","leftSideBarLocusList","getGenome","genome","getSamplesInfo","samplesInfo","getSelectedSampleNames","selectedSampleNames","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getUser","getSelectedSamples","createSelector","category","samples","flat","s","getTracks","selectedSamples","igvTracks","sample","junctionsTrack","coverageTrack","junctions","showJunctions","format","url","indexURL","oauthToken","order","height","trackHeight","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelUniqueReadCount","labelMultiMappedReadCount","labelTotalReadCount","labelMotif","labelAnnotatedJunction","labelAnnotatedJunctionValue","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","coverage","showCoverage","push","tracks","showVcfs","vcf","indexUrl","indexed","displayMode","showBams","bam","viewAsPairs","showSoftClips","searchable","visibilityWindow","CategoryH3","h3","CategoryDetails","OptionDiv","StyledPopup","Popup","StyledIcon","JunctionsIcon","CoverageIcon","BamIcon","VcfIcon","SampleColorLabelsContainer","span","NoWrapDiv","SampleColorLabelsWithPopup","content","paddingRight","colSpan","fontSize","marginTop","position","navigator","clipboard","writeText","marginLeft","CategoryPanel","updateSelectedSampleNames","toUpperCase","href","sampleNamesInCategory","Set","x","has","SamplesPanel","SamplePanel","Checkbox","label","checked","data-sample","onChange","data","SampleDetails","description","inverted","LeftSideBar","defaultChecked","updateSjOptions","updateBamOptions","updateVcfOptions","newValue","newSettings","OptionInput","input","ColorLegendIcon","StyledRadio","Radio","ColorByLegend","handleTextInput","width","SjOptionsPanel","keyCode","parseInt","on","BamOptionsPanel","VcfOptionsPanel","RightSideBar","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","StyledDiv","throttle","delay","fn","timerId","args","clearTimeout","setTimeout","IGV","setContainerElement","element","container","ref","shouldComponentUpdate","nextProps","browser","search","nextTrackSettingsByTrackName","reduce","acc","item","track","nextTrackSettings","ignoreNextTrackRemovedEvent","removeTrackByName","loadTrack","warn","igvBrowserOptions","Promise","resolve","load","client","init","googleUserEmail","userChangedHandler","igv","createBrowser","then","locusChangedHandler","trackRemovedHandler","event","newLocus","replace","UserInfo","Grid","Row","Column","minWidth","rootReducer","combineReducers","assign","createSingleValueReducer","modalReducers","loadState","serializedState","localStorage","getItem","JSON","parse","err","INITIAL_STATE","window","PERSIST_STATE_IN_URL","PERSIST_STATE_IN_LOCAL_STORAGE","enhancer","compose","applyMiddleware","thunkMiddleware","store","next","result","nextState","stringify","setItem","saveState","stateToSave","keys","location","hash","jsurl","configureStore","createStore","App","BaseLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.887560ff.chunk.js","sourcesContent":["/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [ ...action.values ]            // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [ ...state, ...action.values ]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter(v => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return Object.assign({}, state, {\n          isLoading: true,\n        })\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return Object.assign({}, state, {\n          isLoading: false,\n          errorMessage: action.error,\n        })\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { createObjectsByIdReducer } from './reducerFactories'\n\n\n// actions\nconst UPDATE_MODAL_STATE = 'UPDATE_MODAL_STATE'\n\n// action creators\nexport const openModal = modalName => dispatch =>\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: true } } })\n\nexport const closeModal = (modalName, confirmed) => (dispatch, getState) => {\n  if (getState().modals[modalName].confirmOnClose && !confirmed) {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: true } } })\n  } else {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: false, confirming: false, confirmOnClose: null } } })\n  }\n}\n\nexport const cancelCloseModal = modalName => dispatch =>\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: false } } })\n\n// root reducer\nexport default {\n  modals: createObjectsByIdReducer(UPDATE_MODAL_STATE),\n}\n\n// basic selectors\nexport const getModalOpen = (state, modalName) => state.modals[modalName] && state.modals[modalName].open\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { getModalOpen, openModal, closeModal } from '../redux/utils/modalReducer'\n\nexport const ButtonLink = styled(({ color, padding, ...props }) => <Button {...props} />).attrs({ basic: true })`\n  &.ui.button.basic {\n    white-space: nowrap;\n    border: none;\n    padding: ${props => props.padding || 0};\n    color: ${props => props.color || '#4183C4'} !important;\n    text-decoration: none;\n    font-weight: ${props => props.fontWeight || 'inherit'};\n    box-shadow: none !important;\n    user-select: auto;\n    \n    &:hover, &:focus, &:active {\n      color: #1e70bf !important;\n      background: transparent !important;\n    }\n    \n    &[class*=\"right labeled\"].icon {\n      padding-left: 0 !important;\n      padding-right: 2.1em !important;\n      \n      > .icon {\n        background-color: initial;\n      }\n    }\n  }\n`\n\nconst ContainerDiv = styled.div`\n  float: right;\n  padding: 0px 20px 20px 20px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px !important;\n  width: 100px;\n`\n\n\n\nclass CustomModal extends React.Component\n{\n  static propTypes = {\n    trigger: PropTypes.node,\n    title: PropTypes.string,\n    modalName: PropTypes.string.isRequired,\n    handleSave: PropTypes.func,\n    handleClose: PropTypes.func,\n    size: PropTypes.oneOf(['small', 'large', 'fullscreen']),\n    isOpen: PropTypes.bool,\n    open: PropTypes.func,\n    close: PropTypes.func,\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    size: 'small',\n  }\n\n  handleClose = () => {\n    this.props.close()\n    if (this.props.handleClose) {\n      this.props.handleClose()\n    }\n  }\n\n  handleSave = () => {\n    if (this.props.handleSave) {\n      this.props.handleSave()\n    }\n    this.props.close()\n  }\n\n  render() {\n    let trigger = this.props.trigger ? React.cloneElement(this.props.trigger, { onClick: this.props.open }) : null\n    return (\n      <Modal open={this.props.isOpen} trigger={trigger} onClose={this.handleClose} size={this.props.size}>\n        <Modal.Header>\n          {this.props.title}\n          <ButtonLink floated=\"right\" onClick={this.handleClose} icon={<Icon name=\"remove\" color=\"grey\" />} />\n        </Modal.Header>\n        <Modal.Content>\n          {this.props.children}\n        </Modal.Content>\n        <ContainerDiv>\n          <StyledButton tabIndex={0} onClick={this.handleClose} type=\"button\">Cancel</StyledButton>\n          <StyledButton tabIndex={0} onClick={this.handleSave} type=\"submit\" color=\"blue\">Save</StyledButton>\n        </ContainerDiv>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  isOpen: getModalOpen(state, ownProps.modalName),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: (e) => {\n      e.preventDefault()\n      dispatch(openModal(ownProps.modalName))\n    },\n    close: () => {\n      dispatch(closeModal(ownProps.modalName, true))\n    },\n  }\n}\n\nexport { CustomModal as ModalComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Modal from './Modal'\nimport { Form, TextArea } from 'semantic-ui-react'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n`\n\nclass EditLocusListButtonAndModal extends React.Component {\n\n  static propTypes = {\n    name: PropTypes.string,\n    locusList: PropTypes.array,\n    setLocusList: PropTypes.func,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.textAreaValue = (this.props.locusList || []).join('\\n')  // TextArea refs don't work - probably because its a pure component, so use this hack\n  }\n\n  render = () => {\n    const locusList = this.props.locusList\n    const title = `Locus List - ${this.props.name}`\n\n    return <Modal\n      title={title}\n      size=\"large\"\n      modalName={title}\n      trigger={\n        <LinkButton>{(locusList || []).length > 0  ? <div><br />Edit Locus List</div> : <div>Add Locus List To Side Bar</div>}</LinkButton>\n      }\n      handleSave={() => {\n        const newLocusList = this.textAreaValue.split(/[,\\s]+/).filter(Boolean)\n        this.props.setLocusList(newLocusList)\n      }}\n    >\n      <Form>\n        <Form.Field\n          control={TextArea}\n          style={{ minHeight: '300px' }}\n          defaultValue={this.textAreaValue}\n          onKeyUp={(e) => {this.textAreaValue = e.target.value}}\n          placeholder=\"Enter genomic positions, intervals, and/or gene names separated by commas, spaces, or new lines. &#10;\n            These can be in any format recognized by the IGV search bar. &#10;\n            For example: DMD, ENST00000589830, chr1:55516888, 2:152341851-152591002\">\n        </Form.Field>\n      </Form>\n      <br />\n      <b><i>NOTE:</i></b> This locus list will be saved across page refreshes in this browser, but is not recorded in the page url, so sharing a page link is not sufficient for sharing the locus list.\n    </Modal>\n  }\n}\n\nexport const LocusList = ({name, locusList, setLocus, setLocusList}) => {\n\n  return <div>\n    {\n      locusList.map((locus, i) =>\n        <div key={locus}>{i+1}. &nbsp; <LinkButton onClick={() => {setLocus(locus)}}>{locus}</LinkButton></div>\n      )\n    }\n    <EditLocusListButtonAndModal name={name} locusList={locusList} setLocusList={setLocusList} />\n  </div>\n}\n","/* eslint-disable no-undef */\n\nconst RNA_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise(resolve => {\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        'clientId': RNA_VIEWER_CLIENT_ID,\n        'scope': 'https://www.googleapis.com/auth/devstorage.read_only',\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest']\n      })\n\n      resolve()\n    })\n  })\n})\n\nexport const googleSignIn = async () => {\n\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(!authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const profile = authInstance.currentUser.get().getBasicProfile()\n\n  return profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance.currentUser.get()\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith(\"gs://\")) {\n    console.error(`${gsPath} doesn't start with \"gs://\"` )\n    return\n  }\n\n  const gsPathParts = gsPath.split(\"/\")\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"` )\n    return\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return await gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults:1000})\n}\n","\nexport const MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\n\nexport const DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n\n","import { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\nexport const getLocus = state => state.locus\nexport const getRightSideBarLocusList = state => state.rightSideBarLocusList\nexport const getLeftSideBarLocusList = state => state.leftSideBarLocusList\nexport const getGenome = state => state.genome\nexport const getSamplesInfo = state => state.samplesInfo\nexport const getSelectedSampleNames = state => state.selectedSampleNames\nexport const getSjOptions = state => state.sjOptions\nexport const getVcfOptions = state => state.vcfOptions\nexport const getBamOptions = state => state.bamOptions\nexport const getUser = state => state.user\n\n/**\n * Expects sample info like:\n *\n * [\n *    {\n *      label: 'category1',\n *      samples : [\n *          { sample1 .. },\n *          { sample2 .. },\n *          ...\n *      ]\n *    },\n *    {\n *      label: 'category2',\n *      samples : [\n *        { sample3 .. },\n *        { sample4 .. },\n *        ...\n *      ]\n *    },\n * ]\n */\n\nexport const getSelectedSamples = createSelector(\n  getSamplesInfo,\n  getSelectedSampleNames,\n  (samplesInfo, selectedSampleNames) => samplesInfo.map(category => category.samples).flat().filter(s => selectedSampleNames.includes(s.name)),\n)\n\n\nexport const getTracks = createSelector(\n  getSelectedSamples,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  (selectedSamples, sjOptions, vcfOptions, bamOptions) => {\n    const igvTracks = []\n\n    selectedSamples.forEach((sample, i) => {\n      //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n      let junctionsTrack\n      if (sample.junctions && sjOptions.showJunctions) {\n        junctionsTrack = {\n          type: 'junctions',\n          format: 'bed',\n          url: sample.junctions,\n          indexURL: `${sample.junctions}.tbi`,\n          oauthToken: getGoogleAccessToken,\n          order: i*10,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n          minTotalReads: sjOptions.minTotalReads,\n          maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n          minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n          thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n          bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n          colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n          colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n          hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n          labelUniqueReadCount: sjOptions.labelUniqueReadCount,\n          labelMultiMappedReadCount: sjOptions.labelMultiMappedReadCount,\n          labelTotalReadCount: sjOptions.labelTotalReadCount,\n          labelMotif: sjOptions.labelMotif,\n          labelAnnotatedJunction: sjOptions.labelAnnotatedJunction && sjOptions.labelAnnotatedJunctionValue,\n          hideAnnotatedJunctions: sjOptions.hideAnnotated,\n          hideUnannotatedJunctions: sjOptions.hideUnannotated,\n          hideMotifs: MOTIFS.filter( motif => sjOptions[`hideMotif${motif}`] ), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n        }\n      }\n\n      let coverageTrack\n      if(sample.coverage && sjOptions.showCoverage) {\n        coverageTrack = {\n          type: 'wig',\n          format: 'bigwig',\n          url: sample.coverage,\n          oauthToken: getGoogleAccessToken,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          order: i*10 + 1,\n        }\n      }\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${sample.junctions} & ${sample.coverage} track #`, i*10 + 2)\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          order: i*10 + 2,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${sample.junctions} track #`, i*10 )\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [junctionsTrack],\n          order: i*10 + 3,\n        })\n      } else if (coverageTrack) {\n        console.log(`Adding ${sample.coverage} track #`, i*10 + 1)\n        igvTracks.push(coverageTrack)\n      }\n\n      if (vcfOptions.showVcfs && sample.vcf) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.vcf} track #`, i*10 + 4)\n\n        igvTracks.push({\n          type: 'variant',\n          format: 'vcf',\n          url: sample.vcf,\n          indexUrl: `${sample.vcf}.tbi`,\n          indexed: true,\n          name: `${sample.name} vcf`,\n          displayMode: vcfOptions.displayMode,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 4,\n        })\n      }\n\n      if (bamOptions.showBams && sample.bam) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.bam} track #`, i*10 + 5)\n\n        igvTracks.push({\n          type: 'alignment',\n          url: sample.bam,\n          indexed: true,\n          name: `${sample.name} bam`,\n          height: bamOptions.trackHeight,\n          colorBy: bamOptions.colorBy,\n          viewAsPairs: bamOptions.viewAsPairs,\n          showSoftClips: bamOptions.showSoftClips,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 5,\n        })\n      }\n    })\n\n\n    igvTracks.push({\n      name: 'Gencode v32 Genes',\n      format: \"refgene\",\n      url: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz\",\n      indexUrl: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz.tbi\",\n      indexed: true,\n      searchable: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: \"EXPANDED\",\n      order: 1000001,\n      color: \"rgb(76,171,225)\",\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { LocusList } from './LocusList'\nimport { getLeftSideBarLocusList, getSamplesInfo, getSelectedSampleNames, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\n\n\nconst CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst OptionDiv = styled.div`\n  padding-top: 3px;\n`\n\nconst StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nconst StyledIcon = styled.div.attrs({ name: \"stop\" })`\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\nconst JunctionsIcon = styled(StyledIcon)`\n   color: #B0B0EC;\n   border: 3px solid #B0B0EC;\n`\n\nconst CoverageIcon = styled(StyledIcon)`\n   color: #B5D29A;\n   border: 3px solid #B5D29A;\n`\n\nconst BamIcon = styled(StyledIcon)`\n   color: #5CB6EA;\n   border: 3px solid #5CB6EA;\n`\n\nconst VcfIcon = styled(StyledIcon)`\n   color: #E6A01B;\n   border: 3px solid #E6A01B;\n`\n\nconst SampleColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\nconst SampleColorLabelsWithPopup = ({sample}) => <Popup\n    content={\n      <table>\n        <tbody>\n          {sample.junctions && <tr><td style={{ paddingRight: '10px' }}><b>Junctions:</b></td><td><NoWrapDiv>{sample.junctions}</NoWrapDiv></td></tr>}\n          {sample.coverage && <tr><td><b>Coverage:</b></td><td><NoWrapDiv>{sample.coverage}</NoWrapDiv></td></tr>}\n          {sample.bam && <tr><td><b>Bam:</b></td><td><NoWrapDiv>{sample.bam}</NoWrapDiv></td></tr>}\n          {sample.vcf && <tr><td><b>Vcf:</b></td><td><NoWrapDiv>{sample.vcf}</NoWrapDiv></td></tr>}\n          <tr><td colSpan={2}><div style={{fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <SampleColorLabelsContainer onClick={() =>\n        navigator.clipboard.writeText(`${(sample.bam+\"\\n\") || \"\"}${(sample.junctions+\"\\n\") || \"\"}${(sample.coverage+\"\\n\") || \"\"}${(sample.vcf+\"\\n\") || \"\"}`)\n      }>\n        {sample.junctions && <JunctionsIcon />}\n        {sample.coverage && <CoverageIcon />}\n        {sample.bam && <BamIcon />}\n        {sample.vcf && <VcfIcon />}\n      </SampleColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />\n\n\nconst CategoryPanel = ({category, selectedSampleNames, updateSelectedSampleNames}) =>\n  <div>\n    <CategoryH3>{category.name.toUpperCase()}</CategoryH3>\n    {\n      category.samples.length >= 10 && <CategoryDetails>{`(N=${category.samples.length}) `}</CategoryDetails>\n    }\n    <div>\n      <a href=\"#\" onClick={(e) => {\n        e.preventDefault()\n        const sampleNamesInCategory =  new Set(category.samples.map(s => s.name))\n        updateSelectedSampleNames('SET', selectedSampleNames.filter(x => !sampleNamesInCategory.has(x)))\n      }}>Clear All</a>\n    </div>\n  </div>\n\n\nconst SamplesPanel = ({samplesInfo, selectedSampleNames, updateSelectedSampleNames}) =>\n  samplesInfo.map(category =>\n    <div key={category.name}>\n      <CategoryPanel category={category} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n      {\n        category.samples.map(sample =>\n          <SamplePanel key={sample.name} sample={sample} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n        )\n      }\n    </div>,\n  )\n\nconst SamplePanel = ({sample, selectedSampleNames, updateSelectedSampleNames}) =>\n  <NoWrapDiv>\n    <Checkbox\n      label={sample.name}\n      checked={selectedSampleNames.includes(sample.name)}\n      data-sample={sample.name}\n      onChange={(e, data) => updateSelectedSampleNames( data.checked ? 'ADD' : 'REMOVE', [ data['data-sample'] ]) }\n    />\n    <SampleDetails sample={sample} />\n    <SampleColorLabelsWithPopup sample={sample} />\n  </NoWrapDiv>\n\nconst SampleDetails = ({sample}) => {\n  return (sample.description ?\n    <StyledPopup inverted\n      content={sample.description}\n      position=\"right center\"\n      trigger={\n        <Icon style={{marginLeft: '10px'}} name=\"question circle outline\" />\n      } /> : null)\n}\n\nclass LeftSideBar extends React.Component\n{\n  static propTypes = {\n    locusList: PropTypes.array,\n    samplesInfo: PropTypes.array,\n    selectedSampleNames: PropTypes.array,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    setLocus: PropTypes.func,\n    setLocusList: PropTypes.func,\n    updateSelectedSampleNames: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    return (\n      <div>\n        <LocusList name=\"Left Side Bar\" locusList={this.props.locusList} setLocus={this.props.setLocus} setLocusList={this.props.setLocusList} />\n        <CategoryH3>TRACK TYPES TO SHOW PER SAMPLE</CategoryH3>\n        <OptionDiv>\n          <Checkbox label=\"RNA splice-junctions\" defaultChecked={this.props.sjOptions.showJunctions} onChange={(e, data) => this.props.updateSjOptions({ showJunctions: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a splice junction track for each sample selected below.'} position=\"right center\" trigger={<JunctionsIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"RNA coverage\" defaultChecked={this.props.sjOptions.showCoverage} onChange={(e, data) => this.props.updateSjOptions({ showCoverage: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have coverage data. Select this checkbox to show a coverage track for each sample selected below.'} position=\"right center\" trigger={<CoverageIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"BAM track\" defaultChecked={this.props.bamOptions.showBams} onChange={(e, data) => this.props.updateBamOptions({ showBams: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have alignment data. Select this checkbox to show a bam track for each sample selected below.'} position=\"right center\" trigger={<BamIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"VCF track\" defaultChecked={this.props.vcfOptions.showVcfs} onChange={(e, data) => this.props.updateVcfOptions({ showVcfs: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a vcf track for each sample selected below.'} position=\"right center\" trigger={<VcfIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <SamplesPanel\n          samplesInfo={this.props.samplesInfo}\n          selectedSampleNames={this.props.selectedSampleNames}\n          updateSelectedSampleNames={this.props.updateSelectedSampleNames}\n        />\n      </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  locusList: getLeftSideBarLocusList(state),\n  selectedSampleNames: getSelectedSampleNames(state),\n  samplesInfo: getSamplesInfo(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_LEFT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSelectedSampleNames: (action, selectedSampleNames) => {\n    dispatch({\n      type: `${action}_SELECTED_SAMPLE_NAMES`,\n      values: selectedSampleNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { LeftSideBar as LeftSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup, Radio } from 'semantic-ui-react'\nimport { LocusList } from './LocusList'\nimport { getRightSideBarLocusList, getSamplesInfo, getSelectedSampleNames, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\n\nconst CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nconst OptionDiv = styled.div`\n  padding-top:3px;\n`\n\nconst OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n\nconst StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nconst ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if ( sjOptions.colorBy === \"strand\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n      <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n    </div>\n  } else if ( sjOptions.colorBy === \"motif\" ) {\n    // IGV.js Dark2 color palette\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n    </div>\n  } else if ( sjOptions.colorBy === \"numUniqueReads\" || sjOptions.colorBy === \"numReads\" ) {\n    return  <div>\n      # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n      &nbsp;≤ &nbsp;\n      <OptionInput\n        type=\"text\"\n        defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n        onKeyUp={e => handleTextInput(e, 'colorByNumReadsThreshold')}\n        style={{ width: '35px'}}\n      />\n      &nbsp; &lt; &nbsp;\n      <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n\n    </div>\n  } else if ( sjOptions.colorBy === \"isAnnotatedJunction\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'orange'  }} /> novel junction\n    </div>\n  } else {\n    return <div></div>\n  }\n}\n\nconst SjOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>JUNCTION TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.colorBy} onChange={e => updateSjOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">strand</option>\n        <option value=\"motif\">donor/acceptor motif</option>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n      <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n    </OptionDiv>\n    <OptionDiv>Junction thickness:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.thicknessBasedOn} onChange={e => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction bounce height:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.bounceHeightBasedOn} onChange={e => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n        <option value=\"random\">random</option>\n        <option value=\"distance\">distance</option>\n        <option value=\"thickness\">thickness</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction label:</OptionDiv>\n    <OptionDiv><Checkbox label=\"# uniquely-mapped\" defaultChecked={sjOptions.labelUniqueReadCount} onChange={(e, data) => updateSjOptions({ labelUniqueReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# multi-mapped\" defaultChecked={sjOptions.labelMultiMappedReadCount} onChange={(e, data) => updateSjOptions({ labelMultiMappedReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# total reads\" defaultChecked={sjOptions.labelTotalReadCount} onChange={(e, data) => updateSjOptions({ labelTotalReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"donor/acceptor motif\" defaultChecked={sjOptions.labelMotif} onChange={(e, data) => updateSjOptions({ labelMotif: data.checked })} /></OptionDiv>\n    <OptionDiv>\n      <Checkbox label=\"known junction:\" defaultChecked={sjOptions.labelAnnotatedJunction} onChange={(e, data) => updateSjOptions({ labelAnnotatedJunction: data.checked })} />\n      <OptionInput type=\"text\" defaultValue={sjOptions.labelAnnotatedJunctionValue} onKeyUp={e => handleTextInput(e, 'labelAnnotatedJunctionValue')} style={{ width: '35px'}}  />\n    </OptionDiv>\n\n    <CategoryH3>JUNCTION TRACK FILTERS</CategoryH3><br />\n    <OptionDiv>\n      Show Strands:\n      <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n    </OptionDiv>\n    <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n\n    <OptionDiv><Checkbox label=\"Show known junctions\" defaultChecked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n    <div>\n      <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={e => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Total reads:</OptionDiv>\n      at least <OptionInput type=\"text\"  defaultValue={sjOptions.minTotalReads} onKeyUp={e => handleTextInput(e, 'minTotalReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Fraction multi-mapped:\n        <StyledPopup inverted\n          content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n          position=\"left center\"\n          on=\"click\"\n          trigger={\n            <Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />\n          } />\n      </OptionDiv>\n      at most <OptionInput type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={e => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={e => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n      {\n        MOTIFS.map(motif =>\n          <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} defaultChecked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>\n        )\n      }\n    </div>\n  </div>\n}\n\nconst BamOptionsPanel = ( { bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>BAM TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv><Checkbox label=\"View as pairs\" defaultChecked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show soft-clips\" defaultChecked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={bamOptions.colorBy} onChange={e => updateBamOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">Strand</option>\n        <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n        <option value=\"pairOrientation\">Pair orientation</option>\n        <option value=\"fragmentLength\">Insert size (TLEN)</option>\n        <option value=\"none\">None</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\n\nconst VcfOptionsPanel = ( { vcfOptions, updateVcfOptions }) => {\n\n  return <div>\n    <CategoryH3>VCF TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>\n      Display mode: &nbsp; <select defaultValue={vcfOptions.displayMode} onChange={e => updateVcfOptions({ displayMode: e.target.value })}>\n        <option value=\"COLLAPSED\">Collapse</option>\n        <option value=\"SQUISHED\">Squish</option>\n        <option value=\"EXPANDED\">Expand</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\nclass RightSideBar extends React.Component\n{\n  static propTypes = {\n    locusList: PropTypes.array,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    samplesInfo: PropTypes.array,\n    selectedSampleNames: PropTypes.array,\n    setLocus: PropTypes.func,\n    setLocusList: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    return <div>\n      <LocusList\n        name=\"Right Side Bar\"\n        locusList={this.props.locusList}\n        setLocus={this.props.setLocus}\n        setLocusList={this.props.setLocusList}\n      />\n\n      {this.props.bamOptions.showBams && <BamOptionsPanel\n        bamOptions={this.props.bamOptions}\n        updateBamOptions={this.props.updateBamOptions}\n      />}\n      {this.props.vcfOptions.showVcfs && <VcfOptionsPanel\n        vcfOptions={this.props.vcfOptions}\n        updateVcfOptions={this.props.updateVcfOptions}\n      />}\n      {(this.props.sjOptions.showCoverage || this.props.sjOptions.showJunctions) && <SjOptionsPanel\n        sjOptions={this.props.sjOptions}\n        updateSjOptions={this.props.updateSjOptions}\n      />}\n    </div>\n  }\n}\n\nconst mapStateToProps = state => ({\n  locusList: getRightSideBarLocusList(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n  selectedSampleNames: getSelectedSampleNames(state),\n  samplesInfo: getSamplesInfo(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_RIGHT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { RightSideBar as RightSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport { getGenome, getLocus, getTracks, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\nconst StyledDiv = styled.div``\n\nconst throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n\nclass IGV extends React.Component {\n\n  static propTypes = {\n    genome: PropTypes.string.isRequired,\n    locus: PropTypes.string.isRequired,\n    tracks: PropTypes.array.isRequired,\n    locusChangedHandler: PropTypes.func,\n    trackRemovedHandler: PropTypes.func,\n    userChangedHandler: PropTypes.func,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextTrackRemovedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <StyledDiv><div ref={this.setContainerElement} /></StyledDiv>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    let igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus: this.props.locus,\n      genome: this.props.genome,\n      tracks: this.props.tracks,\n    }\n\n    // TODO check if any tracks need google sign-in\n    await initGoogleClient()\n    await googleSignIn()\n    let googleUserEmail = await getGoogleUserEmail()\n    this.props.userChangedHandler(googleUserEmail)\n\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n\n      if (this.props.locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, this.props.locusChangedHandler)) //{chr, start, end, label}\n      }\n\n      if (this.props.trackRemovedHandler) {\n        this.browser.on('trackremoved', track => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            this.props.trackRemovedHandler(track)\n          }\n\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n    })\n  }\n\n  shouldComponentUpdate = nextProps => {\n    if (!this.container) {\n      return false\n    }\n\n    if (nextProps.locus && nextProps.locus !== this.props.locus) {\n      this.browser.search(nextProps.locus)\n    }\n\n    let nextTrackSettingsByTrackName = nextProps.tracks.reduce((acc, item) => {\n      return {[item.name]: item, ...acc}\n    }, {})\n\n    console.log('IGV.nextProps:', nextProps )\n    // update or remove existing tracks\n    for (let track of this.props.tracks) {\n      // TODO check if any tracks need google sign-in\n\n      const nextTrackSettings = nextTrackSettingsByTrackName[track.name]\n      if (nextTrackSettings) {\n        if ( (nextProps.sjOptions !== this.props.sjOptions && ['merged', 'wig', 'junctions'].includes(track.type) ) ||\n             (nextProps.vcfOptions !== this.props.vcfOptions && 'variant' === track.type) ||\n             (nextProps.bamOptions !== this.props.bamOptions && 'alignment' === track.type)\n        ) {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n          this.browser.loadTrack(nextTrackSettings)\n        }\n\n        // delete track from nextTrackSettingsByTrackName to indicate that it's still selected\n        delete nextTrackSettingsByTrackName[track.name]\n\n      } else {\n        // remove track that was de-selected\n        try {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n        } catch(e) {\n          console.warn('Unable to remove track', track.name, e)\n        }\n      }\n    }\n\n    // load any newly-selected track(s)\n    for (let track of Object.values(nextTrackSettingsByTrackName)) {\n      try {\n        this.browser.loadTrack(track)\n      } catch(e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    }\n\n    return false\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  locusChangedHandler: (event) => {\n    const newLocus = event.label.replace(/,/g, '')\n\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: newLocus,\n    })\n  },\n\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: {googleUserEmail}\n    })\n  },\n\n  trackRemovedHandler: (track) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLE_NAMES',\n      values: [track.name],\n    })\n  },\n})\n\nexport { IGV as IGVComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { getUser } from '../redux/selectors'\nimport { connect } from 'react-redux'\n\nconst StyledDiv = styled.div`\n  text-align: right;\n  margin: 70px 70px 0px 0px;\n  color: #999;\n`\n\nclass UserInfo extends React.Component\n{\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n  }\n\n  render() {\n    if (!this.props.user.googleUserEmail) {\n      return <StyledDiv />\n    }\n\n    return <StyledDiv>Signed in to Google Buckets as <b>{this.props.user.googleUserEmail}</b></StyledDiv>\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: getUser(state),\n\n})\n\nexport { UserInfo as UserInfoComponent }\n\nexport default connect(mapStateToProps)(UserInfo)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport IGV from './IGV'\nimport UserInfo from './UserInfo'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nconst SIDE_BAR_WIDTH = 210\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <LeftSideBar />\n        </Grid.Column>\n        <Grid.Column style={{ minWidth: '800px', width: `calc(100% - ${2*SIDE_BAR_WIDTH}px)` }}>\n          <IGV />\n          <UserInfo />\n        </Grid.Column>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <RightSideBar />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","import { combineReducers } from 'redux'\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\nimport modalReducers from './utils/modalReducer'\n\n// root reducer\nconst rootReducer = combineReducers(Object.assign({\n  //loci: createObjectsByIdReducer('UPDATE_LOCI'),\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  rightSideBarLocusList: createArrayReducer('RIGHT_SIDE_BAR_LOCUS_LIST', ['DMD', 'TTN']),\n  leftSideBarLocusList: createArrayReducer('LEFT_SIDE_BAR_LOCUS_LIST'),\n  samplesInfo: zeroActionsReducer,\n  selectedSampleNames: createArrayReducer('SELECTED_SAMPLE_NAMES'),\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n}, modalReducers))\n\nexport default rootReducer\n","/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(label, serializedState)\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\n//import logger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst INITIAL_STATE = {\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  sjOptions: {\n    trackHeight: 170,\n    showCoverage: true,\n    showJunctions: true,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 1,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelUniqueReadCount: true,\n    labelMultiMappedReadCount: true,\n    labelTotalReadCount: false,\n    labelMotif: true,\n    labelAnnotatedJunction: false,\n    labelAnnotatedJunctionValue: \" [A]\",\n  },\n  vcfOptions: {\n    displayMode: \"EXPANDED\",\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    colorBy: 'strand',\n  },\n  samplesInfo: [],\n\n  ...(window.IGV_SETTINGS || {}),\n}\n\nconst PERSIST_STATE_IN_URL = [\n  'locus', 'selectedSampleNames', 'sjOptions', 'vcfOptions', 'bamOptions',\n]\n\nconst PERSIST_STATE_IN_LOCAL_STORAGE = [\n  'leftSideBarLocusList', 'rightSideBarLocusList',\n]\n\nconst persistStoreMiddleware = store => next => (action) => {\n  const result = next(action)\n  const nextState = store.getState()\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => { saveState(key, nextState[key]) })\n\n  const stateToSave = Object.keys(nextState)\n    .filter(key => PERSIST_STATE_IN_URL.includes(key))\n    .reduce((obj, key) => {\n      return {\n        ...obj,\n        [key]: nextState[key],\n      }\n    }, {})\n\n  window.location.hash = `#${jsurl.stringify(stateToSave)}`\n\n  return result\n}\n\nconst enhancer = compose(\n  applyMiddleware(thunkMiddleware, persistStoreMiddleware),\n)\n\n\n/**\n * Initialize the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const configureStore = (\n  rootReducer = state => state,\n  initialState = INITIAL_STATE,\n) => {\n\n  //restore any values from local storage\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      initialState[key] = v\n    }\n  })\n\n  //values from url override values from local storage\n  initialState = { ...initialState, ...jsurl.parse(window.location.hash.replace(/^#/, '')) }\n\n  console.log('Initializing store to:', initialState)\n\n  return createStore(rootReducer, initialState, enhancer)\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport rootReducer from './redux/rootReducer'\nimport { configureStore } from './redux/configureStore'\n\nfunction App() {\n  return <Provider store={configureStore(rootReducer)}>\n    <BaseLayout />\n  </Provider>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}