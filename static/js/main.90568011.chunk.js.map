{"version":3,"sources":["redux/utils/reducerFactories.js","redux/utils/modalReducer.js","components/Modal.jsx","components/EditLocusList.jsx","components/SideBarUtils.jsx","constants.js","utils/googleAuth.js","redux/selectors.js","components/EditSamplePaths.jsx","components/LeftSideBar.jsx","components/RightSideBar.jsx","components/UserInfo.jsx","components/Header.jsx","utils/throttle.js","components/IGV.jsx","components/InitialSettingsForm.jsx","components/BaseLayout.jsx","redux/rootReducer.js","utils/localStorage.js","redux/configureStore.js","App.js","index.js"],"names":["createSingleValueReducer","updateActionType","initialState","debug","reducer","state","action","type","undefined","newValue","console","error","log","createSingleObjectReducer","updates","newState","createArrayReducer","actionTypeSuffix","Array","isArray","values","valuesToRemove","filter","v","includes","modals","key","updatesById","shallowCopy","Object","entries","forEach","id","obj","createObjectsByIdReducer","getModalOpen","modalName","open","ButtonLink","styled","color","padding","props","Button","attrs","basic","fontWeight","ContainerDiv","div","StyledButton","CustomModal","handleClose","doClose","close","handleSave","trigger","this","React","cloneElement","onClick","Modal","isOpen","onClose","size","Header","title","floated","icon","Icon","name","Content","children","tabIndex","Component","defaultProps","connect","ownProps","dispatch","e","preventDefault","confirmed","getState","confirmOnClose","confirming","LinkButton","a","EditLocusListButtonAndModal","render","locusList","length","newLocusList","textAreaValue","split","Boolean","setLocusList","Form","Field","control","TextArea","style","minHeight","defaultValue","onKeyUp","target","value","placeholder","join","EditLocusList","setLocus","map","locus","i","CategoryH3","h3","OptionDiv","StyledPopup","Popup","SUPPORTED_FILE_EXTENSIONS","MOTIFS","googleSignIn","gapi","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","getGoogleUserEmail","profile","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","user","reloadAuthResponse","getAuthResponse","access_token","getLocus","getRightSideBarLocusList","rightSideBarLocusList","getLeftSideBarLocusList","leftSideBarLocusList","getGenome","genome","getSamplesInCategories","samplesInCategories","getSelectedSampleNamesByCategoryName","selectedSampleNamesByCategoryName","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getUser","getInitialSettingsUrl","initialSettingsUrl","getInitialSettings","initialSettings","getSamplesByCategoryName","createSelector","reduce","acc","category","categoryName","samples","getSelectedSamplesByCategoryName","samplesByCategoryName","selectedSampleNames","sample","getTracks","selectedSamplesByCategoryName","igvTracks","selectedSamples","junctionsTrack","coverageTrack","junctions","showJunctions","format","url","indexURL","oauthToken","order","height","trackHeight","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelUniqueReadCount","labelMultiMappedReadCount","labelTotalReadCount","labelMotif","labelAnnotatedJunction","labelAnnotatedJunctionValue","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","coverage","showCoverage","push","tracks","showVcfs","vcf","indexUrl","indexed","displayMode","showBams","bam","viewAsPairs","showSoftClips","searchable","visibilityWindow","ExampleDiv","ExamplePath","span","StyledRadio","Radio","position","EditSamplePathsButtonAndModal","getInitialState","convertSamplesToTextAreaValue","warningMessage","errorMessage","parseTextAreaValueToSamples","trim","invalidPaths","samplesBySampleName","samplePath","pathTokens","fileName","matchingExtensions","keys","ext","endsWith","filePrefix","replace","yaml","safeLoad","JSON","parse","flat","safeDump","flowLevel","stringify","formatRadioButtonChangeHandler","data","setState","checked","label","getInitialSamplesInCategory","showResetButton","initialSamplesInCategories","originalCategories","resetButtonClickHandler","initialSamples","initialSamplesInCategory","someSamplesHaveDescriptionOrMultipleDataFiles","some","description","setSamples","disabled","onChange","marginLeft","content","float","Message","updateSamples","actionType","CategoryDetails","StyledIcon","JunctionsIcon","CoverageIcon","BamIcon","VcfIcon","SampleColorLabelsContainer","NoWrapDiv","SampleColorLabelsWithPopup","paddingRight","colSpan","fontSize","marginTop","navigator","clipboard","writeText","CategoryPanel","updateSelectedSampleNames","toUpperCase","SamplesPanel","j","SamplePanel","Checkbox","data-sample","SampleDetails","inverted","LeftSideBar","defaultChecked","updateSjOptions","updateBamOptions","updateVcfOptions","newSettings","OptionInput","input","ColorLegendIcon","ColorByLegend","handleTextInput","width","SjOptionsPanel","keyCode","parseInt","on","BamOptionsPanel","VcfOptionsPanel","RightSideBar","UserInfo","googleUserEmail","HeaderRow","Grid","Row","Column1","Column","Column2","href","window","location","throttle","delay","fn","timerId","args","clearTimeout","setTimeout","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","StyledDiv","IGV","setContainerElement","element","container","ref","shouldComponentUpdate","nextProps","browser","search","nextTrackSettingsByTrackName","item","track","nextTrackSettings","ignoreNextTrackRemovedEvent","removeTrackByName","loadTrack","warn","igvBrowserOptions","Promise","resolve","load","client","init","userChangedHandler","igv","createBrowser","then","locusChangedHandler","trackRemovedHandler","event","newLocus","StyledInput","Input","InitialSettingsForm","align","minWidth","rootReducer","combineReducers","assign","updatedSamples","previousList","updatedList","modalReducers","loadState","serializedState","localStorage","getItem","err","REFERENCE_DATA_ROOT","INITIAL_STATE","alignmentShading","PERSIST_KEYS_IN_URL","PERSIST_KEYS_IN_LOCAL_STORAGE","enhancer","compose","applyMiddleware","thunkMiddleware","store","next","result","nextState","setItem","saveState","hashString","hashKeyValueList","jsurl","hash","configureStore","REVERSE_KEY_NAME_LOOKUP","stateFromUrlHash","keyValue","keyValueList","createStore","App","BaseLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.90568011.chunk.js","sourcesContent":["/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [ ...action.values ]            // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [ ...state, ...action.values ]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter(v => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return Object.assign({}, state, {\n          isLoading: true,\n        })\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return Object.assign({}, state, {\n          isLoading: false,\n          errorMessage: action.error,\n        })\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { createObjectsByIdReducer } from './reducerFactories'\n\n\n// actions\nconst UPDATE_MODAL_STATE = 'UPDATE_MODAL_STATE'\n\n// action creators\nexport const openModal = modalName => dispatch =>\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: true } } })\n\nexport const closeModal = (modalName, confirmed) => (dispatch, getState) => {\n  if (getState().modals[modalName].confirmOnClose && !confirmed) {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: true } } })\n  } else {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: false, confirming: false, confirmOnClose: null } } })\n  }\n}\n\n// root reducer\nexport default {\n  modals: createObjectsByIdReducer(UPDATE_MODAL_STATE),\n}\n\n// basic selectors\nexport const getModalOpen = (state, modalName) => state.modals[modalName] && state.modals[modalName].open\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { getModalOpen, openModal, closeModal } from '../redux/utils/modalReducer'\n\nexport const ButtonLink = styled(({ color, padding, ...props }) => <Button {...props} />).attrs({ basic: true })`\n  &.ui.button.basic {\n    white-space: nowrap;\n    border: none;\n    padding: ${props => props.padding || 0};\n    color: ${props => props.color || '#4183C4'} !important;\n    text-decoration: none;\n    font-weight: ${props => props.fontWeight || 'inherit'};\n    box-shadow: none !important;\n    user-select: auto;\n    \n    &:hover, &:focus, &:active {\n      color: #1e70bf !important;\n      background: transparent !important;\n    }\n    \n    &[class*=\"right labeled\"].icon {\n      padding-left: 0 !important;\n      padding-right: 2.1em !important;\n      \n      > .icon {\n        background-color: initial;\n      }\n    }\n  }\n`\n\nconst ContainerDiv = styled.div`\n  float: right;\n  padding: 0px 20px 20px 20px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px !important;\n  width: 100px;\n`\n\n\n\nclass CustomModal extends React.Component\n{\n  static propTypes = {\n    trigger: PropTypes.node,\n    title: PropTypes.string,\n    modalName: PropTypes.string.isRequired,\n    handleSave: PropTypes.func,\n    handleClose: PropTypes.func,\n    size: PropTypes.oneOf(['small', 'large', 'fullscreen']),\n    isOpen: PropTypes.bool,\n    open: PropTypes.func,\n    close: PropTypes.func,\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    size: 'small',\n  }\n\n  handleClose = () => {\n    let doClose = true\n    if (this.props.handleClose) {\n      doClose = this.props.handleClose()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  handleSave = () => {\n    let doClose = true\n    if (this.props.handleSave) {\n      doClose = this.props.handleSave()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  render() {\n    let trigger = this.props.trigger ? React.cloneElement(this.props.trigger, { onClick: this.props.open }) : null\n    return (\n      <Modal open={this.props.isOpen} trigger={trigger} onClose={this.handleClose} size={this.props.size}>\n        <Modal.Header>\n          {this.props.title}\n          <ButtonLink floated=\"right\" onClick={this.handleClose} icon={<Icon name=\"remove\" color=\"grey\" />} />\n        </Modal.Header>\n        <Modal.Content>\n          {this.props.children}\n        </Modal.Content>\n        <ContainerDiv>\n          <StyledButton tabIndex={0} onClick={this.handleClose} type=\"button\">Cancel</StyledButton>\n          <StyledButton tabIndex={0} onClick={this.handleSave} type=\"submit\" color=\"blue\">Save</StyledButton>\n        </ContainerDiv>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  isOpen: getModalOpen(state, ownProps.modalName),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: (e) => {\n      e.preventDefault()\n      dispatch(openModal(ownProps.modalName))\n    },\n    close: () => {\n      dispatch(closeModal(ownProps.modalName, true))\n    },\n  }\n}\n\nexport { CustomModal as ModalComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Modal from './Modal'\nimport { Form, TextArea } from 'semantic-ui-react'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n`\n\nclass EditLocusListButtonAndModal extends React.Component {\n\n  static propTypes = {\n    name: PropTypes.string,\n    locusList: PropTypes.array,\n    setLocusList: PropTypes.func,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.textAreaValue = (this.props.locusList || []).join('\\n')  // TextArea refs don't work - probably because its a pure component, so use this hack\n  }\n\n  render = () => {\n    const locusList = this.props.locusList\n    const title = `Locus List - ${this.props.name}`\n\n    return <Modal\n      title={title}\n      size=\"large\"\n      modalName={title}\n      trigger={\n        <LinkButton>{(locusList || []).length > 0  ? <div><br />Edit Locus List</div> : <div>Add Locus List To Side Bar</div>}</LinkButton>\n      }\n      handleSave={() => {\n        const newLocusList = this.textAreaValue.split(/[,\\s]+/).filter(Boolean)\n        this.props.setLocusList(newLocusList)\n      }}\n    >\n      <Form>\n        <Form.Field\n          control={TextArea}\n          style={{ minHeight: '300px' }}\n          defaultValue={this.textAreaValue}\n          onKeyUp={(e) => {this.textAreaValue = e.target.value}}\n          placeholder=\"Enter genomic positions, intervals, and/or gene names separated by commas, spaces, or new lines. &#10;\n            These can be in any format recognized by the IGV search bar. &#10;\n            For example: DMD, ENST00000589830, chr1:55516888, 2:152341851-152591002\">\n        </Form.Field>\n      </Form>\n      <br />\n      <b><i>NOTE:</i></b> This locus list will be saved across page refreshes in this browser, but is not recorded in the page url, so sharing a page link is not sufficient for sharing the locus list.\n    </Modal>\n  }\n}\n\nexport const EditLocusList = ({name, locusList, setLocus, setLocusList}) => {\n\n  return <div>\n    {\n      locusList.map((locus, i) =>\n        <div key={locus}>{i+1}. &nbsp; <LinkButton onClick={() => {setLocus(locus)}}>{locus}</LinkButton></div>\n      )\n    }\n    <EditLocusListButtonAndModal name={name} locusList={locusList} setLocusList={setLocusList} />\n  </div>\n}\n","import styled from 'styled-components'\nimport {Popup} from \"semantic-ui-react\";\n\nexport const CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nexport const OptionDiv = styled.div`\n  padding-top: 3px;\n`\n\nexport const StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\n","\nexport const SUPPORTED_FILE_EXTENSIONS = {\n  '.bigWig': 'coverage',\n  '.junctions.bed': 'spliceJunctions',\n  '.spliceJunctions.bed': 'spliceJunctions',\n  '.junctions.bed.gz': 'spliceJunctions',\n  '.spliceJunctions.bed.gz': 'spliceJunctions',\n  '.bam': 'bam',\n  '.cram': 'bam',\n  '.vcf': 'vcf',\n  '.vcf.gz': 'vcf',\n}\n\nexport const MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\n\nexport const DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n\n","/* eslint-disable no-undef */\n\nconst RNA_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise(resolve => {\n  if (typeof gapi === 'undefined') {\n    return\n  }\n\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        'clientId': RNA_VIEWER_CLIENT_ID,\n        'scope': 'https://www.googleapis.com/auth/devstorage.read_only',\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest']\n      })\n\n      resolve()\n    })\n  })\n})\n\nexport const googleSignIn = async () => {\n\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(!authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const profile = authInstance.currentUser.get().getBasicProfile()\n\n  return profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance.currentUser.get()\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith(\"gs://\")) {\n    console.error(`${gsPath} doesn't start with \"gs://\"` )\n    return\n  }\n\n  const gsPathParts = gsPath.split(\"/\")\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"` )\n    return\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return await gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults:1000})\n}\n","import { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\nexport const getLocus = state => state.locus\nexport const getRightSideBarLocusList = state => state.rightSideBarLocusList\nexport const getLeftSideBarLocusList = state => state.leftSideBarLocusList\nexport const getGenome = state => state.genome\nexport const getSamplesInCategories = state => state.samplesInCategories\nexport const getSelectedSampleNamesByCategoryName = state => state.selectedSampleNamesByCategoryName\nexport const getSjOptions = state => state.sjOptions\nexport const getVcfOptions = state => state.vcfOptions\nexport const getBamOptions = state => state.bamOptions\nexport const getUser = state => state.user\nexport const getInitialSettingsUrl = state => state.initialSettingsUrl\nexport const getInitialSettings = state => state.initialSettings\n\n\n/**\n * Expects sample info like:\n *\n * [\n *    {\n *      label: 'category1',\n *      samples : [\n *          { sample1 .. },\n *          { sample2 .. },\n *          ...\n *      ]\n *    },\n *    {\n *      label: 'category2',\n *      samples : [\n *        { sample3 .. },\n *        { sample4 .. },\n *        ...\n *      ]\n *    },\n * ]\n */\n\n\nexport const getSamplesByCategoryName = createSelector(\n  getSamplesInCategories,\n  (samplesInCategories) => {\n    return samplesInCategories.reduce((acc, category) => {\n      return { ...acc, [category.categoryName]: category.samples }\n    }, {})\n  })\n\n\n\nexport const getSelectedSamplesByCategoryName = createSelector(\n  getSelectedSampleNamesByCategoryName,\n  getSamplesByCategoryName,\n  (selectedSampleNamesByCategoryName, samplesByCategoryName) => {\n    return Object.entries(selectedSampleNamesByCategoryName).reduce((acc, [categoryName, selectedSampleNames]) => {\n      if (!samplesByCategoryName[categoryName]) {\n        return acc\n      }\n      return { ...acc, [categoryName]: samplesByCategoryName[categoryName].filter(sample => selectedSampleNames.includes(sample.name)) }\n    }, {})\n  })\n\n\nexport const getTracks = createSelector(\n  getSelectedSamplesByCategoryName,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  (selectedSamplesByCategoryName, sjOptions, vcfOptions, bamOptions) => {\n    const igvTracks = []\n\n    Object.values(selectedSamplesByCategoryName).forEach((selectedSamples) => selectedSamples.forEach((sample, i) => {\n      //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n      let junctionsTrack\n      if (sample.junctions && sjOptions.showJunctions) {\n        junctionsTrack = {\n          type: 'spliceJunctions',\n          format: 'bed',\n          url: sample.junctions,\n          indexURL: `${sample.junctions}.tbi`,\n          oauthToken: getGoogleAccessToken,\n          order: i*10,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n          minTotalReads: sjOptions.minTotalReads,\n          maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n          minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n          thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n          bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n          colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n          colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n          hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n          labelUniqueReadCount: sjOptions.labelUniqueReadCount,\n          labelMultiMappedReadCount: sjOptions.labelMultiMappedReadCount,\n          labelTotalReadCount: sjOptions.labelTotalReadCount,\n          labelMotif: sjOptions.labelMotif,\n          labelAnnotatedJunction: sjOptions.labelAnnotatedJunction && sjOptions.labelAnnotatedJunctionValue,\n          hideAnnotatedJunctions: sjOptions.hideAnnotated,\n          hideUnannotatedJunctions: sjOptions.hideUnannotated,\n          hideMotifs: MOTIFS.filter( motif => sjOptions[`hideMotif${motif}`] ), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n        }\n      }\n\n      let coverageTrack\n      if(sample.coverage && sjOptions.showCoverage) {\n        coverageTrack = {\n          type: 'wig',\n          format: 'bigwig',\n          url: sample.coverage,\n          oauthToken: getGoogleAccessToken,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          order: i*10 + 1,\n        }\n      }\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${sample.junctions} & ${sample.coverage} track #`, i*10 + 2)\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          order: i*10 + 2,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${sample.junctions} track #`, i*10 )\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [junctionsTrack],\n          order: i*10 + 3,\n        })\n      } else if (coverageTrack) {\n        console.log(`Adding ${sample.coverage} track #`, i*10 + 1)\n        igvTracks.push(coverageTrack)\n      }\n\n      if (vcfOptions.showVcfs && sample.vcf) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.vcf} track #`, i*10 + 4)\n\n        igvTracks.push({\n          type: 'variant',\n          format: 'vcf',\n          url: sample.vcf,\n          indexUrl: `${sample.vcf}.tbi`,\n          indexed: true,\n          name: `${sample.name} vcf`,\n          displayMode: vcfOptions.displayMode,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 4,\n        })\n      }\n\n      if (bamOptions.showBams && sample.bam) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.bam} track #`, i*10 + 5)\n\n        igvTracks.push({\n          type: 'alignment',\n          url: sample.bam,\n          indexed: true,\n          name: `${sample.name} bam`,\n          height: bamOptions.trackHeight,\n          colorBy: bamOptions.colorBy,\n          viewAsPairs: bamOptions.viewAsPairs,\n          showSoftClips: bamOptions.showSoftClips,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 5,\n        })\n      }\n    }))\n\n\n    igvTracks.push({\n      name: 'Gencode v32 Genes',\n      format: \"refgene\",\n      url: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz\",\n      indexUrl: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz.tbi\",\n      indexed: true,\n      searchable: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: \"EXPANDED\",\n      order: 1000001,\n      color: \"rgb(76,171,225)\",\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport Modal from './Modal'\nimport { Form, Icon, Message, Popup, Radio, TextArea } from 'semantic-ui-react'\nimport yaml from 'js-yaml'\nimport { SUPPORTED_FILE_EXTENSIONS } from '../constants'\nimport { getInitialSettings } from '../redux/selectors'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst ExampleDiv = styled.div`\n  font-family: monospace;\n  margin: 20px 30px;\n  padding: 10px;\n  background-color: #F7F7F7;\n  white-space: nowrap;\n`\n\nconst ExamplePath = styled.span`\n  font-family: monospace;\n  background-color: #F7F7F7;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin: 10px 0px 10px 20px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst StyledPopup = styled(Popup).attrs({ position: 'bottom center' })`\n`\n\n\nclass EditSamplePathsButtonAndModal extends React.Component {\n\n  static propTypes = {\n    title: PropTypes.string,\n    categoryName: PropTypes.string,\n    samples: PropTypes.array,\n    setSamples: PropTypes.func,\n    trigger: PropTypes.node,\n    showResetButton: PropTypes.bool,\n    initialSamplesInCategories: PropTypes.object,\n  }\n\n  getInitialState = () => {\n    const format = this.props.samples && this.props.samples.length > 0 ? 'yaml' : 'basic'\n\n    return {\n      format: format,\n      textAreaValue: this.convertSamplesToTextAreaValue(this.props.samples || [], format),\n      warningMessage: null,\n      errorMessage: null,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = this.getInitialState()\n  }\n\n  parseTextAreaValueToSamples = (textAreaValue, format) => {\n    if (!textAreaValue.trim()) {\n      return { samples: [], errorMessage: null }\n    }\n\n    let samples = []\n    let errorMessage = null\n    const invalidPaths = []\n\n    if (format === 'basic') {\n      const samplePaths = textAreaValue.split(/[,\\s]+/).filter(Boolean)\n\n      const samplesBySampleName = samplePaths.reduce((acc, samplePath) => {\n        const pathTokens = samplePath.split('/')\n        const fileName = pathTokens[pathTokens.length - 1]\n        const matchingExtensions = Object.keys(SUPPORTED_FILE_EXTENSIONS).filter(ext => fileName.endsWith(ext))\n        if (matchingExtensions.length === 0) {\n          invalidPaths.push(samplePath)\n        } else {\n          const ext = matchingExtensions[0]\n          const filePrefix = fileName.replace(ext, '')\n          if (!acc[filePrefix]) {\n            acc[filePrefix] = {}\n          }\n          acc[filePrefix].name = filePrefix\n          acc[filePrefix][SUPPORTED_FILE_EXTENSIONS[ext]] = samplePath\n        }\n        return acc\n      }, {})\n\n      samples = Object.values(samplesBySampleName)\n\n    } else if (format === 'yaml' || format === 'json') {\n      try {\n        samples = yaml.safeLoad(textAreaValue)\n        //TODO validate\n      } catch(e) {\n        errorMessage = 'Unable to parse YAML: ' + e\n      }\n    } else if (format === 'json') {\n      try {\n        samples = JSON.parse(textAreaValue)\n        //TODO validate\n      } catch(e) {\n        errorMessage = 'Unable to parse JSON: ' + e\n      }\n    }\n\n    if (invalidPaths.length > 0) {\n      errorMessage = 'These paths have unexpected file suffixes: ' + invalidPaths.join(', ')\n    }\n\n    return { samples, errorMessage }\n  }\n\n  convertSamplesToTextAreaValue = (samples, format) => {\n    if (!samples || samples.length === 0) {\n      return ''\n    }\n\n    let textAreaValue\n    if (format === 'basic') {\n      textAreaValue = samples.map(sample => Object.keys(sample).filter(key => key !== 'name' && key !== 'description').map(key => sample[key])).flat().join('\\n')\n    } else if(format === 'yaml') {\n      textAreaValue = yaml.safeDump(samples, {flowLevel: 2})\n    } else if(format === 'json') {\n      textAreaValue = JSON.stringify(samples, null, 2)\n    }\n\n    return textAreaValue\n  }\n\n  formatRadioButtonChangeHandler = (e, data) => {\n    const { samples, errorMessage } = this.parseTextAreaValueToSamples(this.state.textAreaValue, this.state.format)\n    if (errorMessage) {\n      e.preventDefault()\n      this.setState({ errorMessage: errorMessage })\n      return false\n    }\n\n    if (data.checked) {\n      const format = data.label\n      const textAreaValue = this.convertSamplesToTextAreaValue(samples, format)\n      this.setState({ format: format, textAreaValue: textAreaValue })\n    }\n  }\n\n  getInitialSamplesInCategory = () => {\n    // cache originalSamples for reset button\n    if (this.props.showResetButton && this.props.initialSamplesInCategories) {\n      const originalCategories = this.props.initialSamplesInCategories.filter(category => category.categoryName === this.props.categoryName)\n      if (originalCategories.length > 0) {\n        return originalCategories[0].samples\n      }\n    }\n\n    return []\n  }\n\n  resetButtonClickHandler = () => {\n    const initialSamples = this.getInitialSamplesInCategory()\n    const textAreaValue = this.convertSamplesToTextAreaValue(initialSamples, this.state.format)\n    this.setState({ textAreaValue: textAreaValue })\n  }\n\n  render = () => {\n    const title = `${this.props.title} Paths`\n    let initialSamplesInCategory;\n    if (this.props.showResetButton) {\n      initialSamplesInCategory = this.getInitialSamplesInCategory()\n    }\n\n    const someSamplesHaveDescriptionOrMultipleDataFiles = this.props.samples.some(sample => sample.description || Object.keys(sample).filter(key => key !== 'name' && key !== 'description').length > 1)\n\n    return <Modal\n      title={title}\n      size=\"large\"\n      modalName={title}\n      trigger={this.props.trigger}\n      handleSave={() => {\n        const {samples, errorMessage} = this.parseTextAreaValueToSamples(this.state.textAreaValue, this.state.format)\n\n        if (errorMessage) {\n          this.setState({ errorMessage: errorMessage })\n          return false\n        }\n\n        this.props.setSamples(samples)\n        return true\n      }}\n\n      handleClose={() => {\n        this.setState(this.getInitialState())\n        return true\n      }}\n    >\n      <div>\n        Enter google bucket path(s) for <i>.bigWig</i>, <i>.junctions.bed.gz</i>, <i>.bam/.cram</i>, or <i>.vcf.gz</i> files:<br />\n        <br />\n        <div>\n          <b>Format:</b>\n          <StyledRadio name=\"format\" label=\"basic\" disabled={someSamplesHaveDescriptionOrMultipleDataFiles} checked={this.state.format === \"basic\"} onChange={this.formatRadioButtonChangeHandler} />\n          <StyledPopup trigger={<Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />} content={\n            <div>\n              {\n                someSamplesHaveDescriptionOrMultipleDataFiles && <div>\n                  <b>[Disabled]</b> because some samples have multiple data files and/or a description.<br />\n                  <br />\n                </div>\n              }\n              <b>Basic format</b>:<br />\n              <br />\n              Enter a list of paths separated by commas, spaces or new lines. <br />\n              <br />\n              Example:<br />\n              <ExampleDiv>\n               gs://your-bucket/dir/sample-name1.bigWig <br />\n               gs://your-bucket/dir/sample2.bigWig <br />\n               gs://your-bucket/dir/sample-name1.junctions.bed.gz <br />\n               gs://your-bucket/dir/sample-name1.bam <br />\n               gs://your-bucket/dir/sample2.junctions.bed.gz <br />\n              </ExampleDiv>\n              Paths that have the same prefix (like <ExamplePath>gs://your-bucket/dir/sample-name1</ExamplePath> in the example) will be interpreted as different data types from the same sample.<br />\n              <br />\n              The order of paths doesn't matter.\n            </div>\n          }/>\n\n          <StyledRadio name=\"format\" label=\"yaml\" checked={this.state.format === \"yaml\"} onChange={this.formatRadioButtonChangeHandler} />\n          <StyledPopup trigger={<Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />}\n            content={<div>\n              <b>YAML format</b>:<br />\n              <br />\n              Provides per-sample file paths just like the Basic format, but allows additional meta-data to be specified - such as sample descriptions - as well as more flexibility in file names.<br />\n              <ExampleDiv>\n                - name: sample1 <br />\n                  &nbsp; description: description of sample1 <br />\n                  &nbsp; coverage: gs://your-bucket/dir/sample-name1.bigWig <br />\n                  &nbsp; junctions: gs://your-bucket/dir2/sample-name1.junctions.bed.gz <br />\n                  &nbsp; bam: gs://your-bucket/dir3/sample-name1.bam <br />\n                  &nbsp; vcf: gs://your-bucket/dir3/sample-name1-wgs-variants.vcf.gz <br />\n                - name: sample2 <br />\n                  &nbsp; coverage: gs://your-bucket/dir/sample2.bigWig <br />\n                  &nbsp; junctions: gs://your-bucket/dir2/sample2.junctions.bed.gz <br />\n              </ExampleDiv>\n            </div>}\n          />\n          <StyledRadio name=\"format\" label=\"json\" checked={this.state.format === \"json\"} onChange={this.formatRadioButtonChangeHandler} />\n          <StyledPopup trigger={<Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />}\n            content={\n              <div>\n                <b>JSON format</b>:<br />\n                <br />\n                Identical to YAML, but represented in the JSON format.<br />\n                <ExampleDiv>\n                  {'[{'}<br />\n                    \"name\": \"sample1\",<br />\n                    \"coverage\": \"gs://your-bucket/dir/sample-name1.bigWig\",<br />\n                    \"junctions\": \"gs://your-bucket/dir2/sample-name1.junctions.bed.gz\",<br />\n                    \"bam\": \"gs://your-bucket/dir3/sample-name1.bam\",<br />\n                    \"vcf\": \"gs://your-bucket/dir3/sample-name1-wgs-variants.vcf.gz\"<br />\n                  {'}, {'}<br />\n                    \"name\": \"sample2\",<br />\n                    \"coverage\": \"gs://your-bucket/dir/sample2.bigWig\",<br />\n                    \"junctions\": \"gs://your-bucket/dir2/sample2.junctions.bed.gz\"<br />\n                  {'}]'}<br />\n                </ExampleDiv>\n              </div>\n            }\n          />\n          {\n            this.props.showResetButton &&\n            <LinkButton style={{ float: 'right' }} onClick={this.resetButtonClickHandler}>Reset To {initialSamplesInCategory ? initialSamplesInCategory.length : 0} Original Samples</LinkButton>\n          }\n        </div>\n      </div>\n      <Form>\n        <TextArea\n          style={{ minHeight: '300px' }}\n          value={this.state.textAreaValue}\n          onChange={(e) => {\n            this.setState({textAreaValue: e.target.value})\n          }}\n          placeholder=\"Enter file path(s)\">\n        </TextArea>\n      </Form>\n\n      <br />\n      <b><i>NOTE:</i></b> These paths will be saved across page refreshes in this browser, but will not be recorded in the page url like other settings. Sharing or saving the page link doesn't include these paths.\n      {\n        this.state.warningMessage &&\n        <Message color='yellow'>\n          {this.state.warningMessage}\n        </Message>\n      }\n      {\n        this.state.errorMessage &&\n        <Message color='red'>\n          {this.state.errorMessage}\n        </Message>\n      }\n    </Modal>\n  }\n}\n\nconst AddOrEditSamplePaths = ({category, updateSamples}) => {\n  return <div>\n    <EditSamplePathsButtonAndModal\n      key={`${JSON.stringify(category.samples)}_add`}\n      title={`Add ${category.categoryName}`}\n      categoryName={category.categoryName}\n      samples={[]}\n      setSamples={(samples) => updateSamples('ADD', category.categoryName, samples)}\n      trigger={<LinkButton>Add {category.samples.length === 0 ? category.categoryName : null} Paths</LinkButton>}\n    />\n    {category.samples.length > 0 && <EditSamplePathsButtonAndModal\n      key={`${JSON.stringify(category.samples)}_edit`}\n      title={`Edit ${category.categoryName}`}\n      categoryName={category.categoryName}\n      samples={category.samples}\n      setSamples={(samples) => updateSamples('SET', category.categoryName, samples)}\n      trigger={<LinkButton>Edit Paths</LinkButton>}\n      showResetButton\n    />}\n  </div>\n}\n\nconst mapStateToProps = state => ({\n  initialSamplesInCategories: getInitialSettings(state).samplesInCategories,\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  updateSamples: (actionType, categoryName, samples) => {\n    dispatch({\n      type: `${actionType}_SAMPLES`,\n      categoryName: categoryName,\n      samples: samples,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrEditSamplePaths)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { EditLocusList } from './EditLocusList'\nimport { CategoryH3, OptionDiv, StyledPopup } from './SideBarUtils'\nimport AddOrEditSamplePaths from './EditSamplePaths'\nimport { getLeftSideBarLocusList, getSamplesInCategories, getSelectedSampleNamesByCategoryName, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\n\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst StyledIcon = styled.div.attrs({ name: \"stop\" })`\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\nconst JunctionsIcon = styled(StyledIcon)`\n   color: #B0B0EC;\n   border: 3px solid #B0B0EC;\n`\n\nconst CoverageIcon = styled(StyledIcon)`\n   color: #B5D29A;\n   border: 3px solid #B5D29A;\n`\n\nconst BamIcon = styled(StyledIcon)`\n   color: #5CB6EA;\n   border: 3px solid #5CB6EA;\n`\n\nconst VcfIcon = styled(StyledIcon)`\n   color: #E6A01B;\n   border: 3px solid #E6A01B;\n`\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst SampleColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\nconst SampleColorLabelsWithPopup = ({sample}) => <Popup\n    content={\n      <table>\n        <tbody>\n          {sample.junctions && <tr><td style={{ paddingRight: '10px' }}><b>Junctions:</b></td><td><NoWrapDiv>{sample.junctions}</NoWrapDiv></td></tr>}\n          {sample.coverage && <tr><td><b>Coverage:</b></td><td><NoWrapDiv>{sample.coverage}</NoWrapDiv></td></tr>}\n          {sample.bam && <tr><td><b>Bam:</b></td><td><NoWrapDiv>{sample.bam}</NoWrapDiv></td></tr>}\n          {sample.vcf && <tr><td><b>Vcf:</b></td><td><NoWrapDiv>{sample.vcf}</NoWrapDiv></td></tr>}\n          <tr><td colSpan={2}><div style={{fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <SampleColorLabelsContainer onClick={() =>\n        navigator.clipboard.writeText(`${(sample.bam+\"\\n\") || \"\"}${(sample.junctions+\"\\n\") || \"\"}${(sample.coverage+\"\\n\") || \"\"}${(sample.vcf+\"\\n\") || \"\"}`)\n      }>\n        {sample.junctions && <JunctionsIcon />}\n        {sample.coverage && <CoverageIcon />}\n        {sample.bam && <BamIcon />}\n        {sample.vcf && <VcfIcon />}\n      </SampleColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />\n\n\nconst CategoryPanel = ({category, updateSelectedSampleNames}) =>\n  <div>\n    <CategoryH3>{category.categoryName.toUpperCase()}</CategoryH3>\n    {\n      category.samples.length >= 12 && <CategoryDetails>{`(N=${category.samples.length}) `}</CategoryDetails>\n    }\n    {\n      category.samples.length > 0 &&\n      <div>\n        <LinkButton onClick={(e) => {\n          e.preventDefault()\n          updateSelectedSampleNames('SET', category.categoryName, [])\n        }}>Uncheck All</LinkButton>\n      </div>\n    }\n  </div>\n\n\nconst SamplesPanel = ({samplesInCategories, selectedSampleNamesByCategoryName, updateSelectedSampleNames}) =>\n  samplesInCategories.map((category, i) =>\n    <div key={category.categoryName || i}>\n      <CategoryPanel category={category} updateSelectedSampleNames={updateSelectedSampleNames} />\n      {\n        category.samples.map((sample, j) => {\n          const selectedSampleNames = selectedSampleNamesByCategoryName[category.categoryName] || []\n          return <SamplePanel key={sample.name || j} sample={sample} categoryName={category.categoryName} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n        })\n      }\n      <AddOrEditSamplePaths category={category} />\n    </div>,\n  )\n\nconst SamplePanel = ({sample, categoryName, selectedSampleNames, updateSelectedSampleNames}) =>\n  <NoWrapDiv>\n    <Checkbox\n      label={sample.name}\n      checked={selectedSampleNames.includes(sample.name)}\n      data-sample={sample.name}\n      onChange={(e, data) => updateSelectedSampleNames( data.checked ? 'ADD' : 'REMOVE', categoryName, [ data['data-sample'] ]) }\n    />\n    <SampleDetails sample={sample} />\n    <SampleColorLabelsWithPopup sample={sample} />\n  </NoWrapDiv>\n\nconst SampleDetails = ({sample}) => {\n  return (sample.description ?\n    <StyledPopup inverted\n      content={sample.description}\n      position=\"right center\"\n      trigger={\n        <Icon style={{marginLeft: '10px'}} name=\"question circle outline\" />\n      } /> : null)\n}\n\nclass LeftSideBar extends React.Component\n{\n  static propTypes = {\n    locusList: PropTypes.array,\n    samplesInCategories: PropTypes.array,\n    selectedSampleNamesByCategoryName: PropTypes.object,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    setLocus: PropTypes.func,\n    setLocusList: PropTypes.func,\n    updateSelectedSampleNames: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    return (\n      <div>\n        <EditLocusList name=\"Left Side Bar\" locusList={this.props.locusList} setLocus={this.props.setLocus} setLocusList={this.props.setLocusList} />\n        <CategoryH3>TRACK TYPES TO SHOW PER SAMPLE</CategoryH3>\n        <OptionDiv>\n          <Checkbox label=\"RNA splice junctions\" defaultChecked={this.props.sjOptions.showJunctions} onChange={(e, data) => this.props.updateSjOptions({ showJunctions: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a splice junction track for each sample selected below.'} position=\"right center\" trigger={<JunctionsIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"RNA coverage\" defaultChecked={this.props.sjOptions.showCoverage} onChange={(e, data) => this.props.updateSjOptions({ showCoverage: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have coverage data. Select this checkbox to show a coverage track for each sample selected below.'} position=\"right center\" trigger={<CoverageIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"BAM track\" defaultChecked={this.props.bamOptions.showBams} onChange={(e, data) => this.props.updateBamOptions({ showBams: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have alignment data. Select this checkbox to show a bam track for each sample selected below.'} position=\"right center\" trigger={<BamIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"VCF track\" defaultChecked={this.props.vcfOptions.showVcfs} onChange={(e, data) => this.props.updateVcfOptions({ showVcfs: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a vcf track for each sample selected below.'} position=\"right center\" trigger={<VcfIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <SamplesPanel\n          samplesInCategories={this.props.samplesInCategories}\n          selectedSampleNamesByCategoryName={this.props.selectedSampleNamesByCategoryName}\n          updateSelectedSampleNames={this.props.updateSelectedSampleNames}\n        />\n      </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  locusList: getLeftSideBarLocusList(state),\n  samplesInCategories: getSamplesInCategories(state),\n  selectedSampleNamesByCategoryName: getSelectedSampleNamesByCategoryName(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_LEFT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSelectedSampleNames: (actionType, categoryName, selectedSampleNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_SAMPLE_NAMES`,\n      categoryName: categoryName,\n      selectedSampleNames: selectedSampleNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { LeftSideBar as LeftSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup, Radio } from 'semantic-ui-react'\nimport { EditLocusList } from './EditLocusList'\nimport { CategoryH3, OptionDiv, StyledPopup } from './SideBarUtils'\nimport { getRightSideBarLocusList, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\n\nconst OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n\nconst ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if ( sjOptions.colorBy === \"strand\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n      <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n    </div>\n  } else if ( sjOptions.colorBy === \"motif\" ) {\n    // IGV.js Dark2 color palette\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n    </div>\n  } else if ( sjOptions.colorBy === \"numUniqueReads\" || sjOptions.colorBy === \"numReads\" ) {\n    return  <div>\n      # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n      &nbsp;≤ &nbsp;\n      <OptionInput\n        type=\"text\"\n        defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n        onKeyUp={e => handleTextInput(e, 'colorByNumReadsThreshold')}\n        style={{ width: '35px'}}\n      />\n      &nbsp; &lt; &nbsp;\n      <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n\n    </div>\n  } else if ( sjOptions.colorBy === \"isAnnotatedJunction\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'orange'  }} /> novel junction\n    </div>\n  } else {\n    return <div></div>\n  }\n}\n\nconst SjOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>JUNCTION TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.colorBy} onChange={e => updateSjOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">strand</option>\n        <option value=\"motif\">donor/acceptor motif</option>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n      <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n    </OptionDiv>\n    <OptionDiv>Junction thickness:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.thicknessBasedOn} onChange={e => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction bounce height:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.bounceHeightBasedOn} onChange={e => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n        <option value=\"random\">random</option>\n        <option value=\"distance\">distance</option>\n        <option value=\"thickness\">thickness</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction label:</OptionDiv>\n    <OptionDiv><Checkbox label=\"# uniquely-mapped\" defaultChecked={sjOptions.labelUniqueReadCount} onChange={(e, data) => updateSjOptions({ labelUniqueReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# multi-mapped\" defaultChecked={sjOptions.labelMultiMappedReadCount} onChange={(e, data) => updateSjOptions({ labelMultiMappedReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# total reads\" defaultChecked={sjOptions.labelTotalReadCount} onChange={(e, data) => updateSjOptions({ labelTotalReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"donor/acceptor motif\" defaultChecked={sjOptions.labelMotif} onChange={(e, data) => updateSjOptions({ labelMotif: data.checked })} /></OptionDiv>\n    <OptionDiv>\n      <Checkbox label=\"known junction:\" defaultChecked={sjOptions.labelAnnotatedJunction} onChange={(e, data) => updateSjOptions({ labelAnnotatedJunction: data.checked })} />\n      <OptionInput type=\"text\" defaultValue={sjOptions.labelAnnotatedJunctionValue} onKeyUp={e => handleTextInput(e, 'labelAnnotatedJunctionValue')} style={{ width: '35px'}}  />\n    </OptionDiv>\n\n    <CategoryH3>JUNCTION TRACK FILTERS</CategoryH3><br />\n    <OptionDiv>\n      Show Strands:\n      <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n    </OptionDiv>\n    <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n\n    <OptionDiv><Checkbox label=\"Show known junctions\" defaultChecked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n    <div>\n      <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={e => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Total reads:</OptionDiv>\n      at least <OptionInput type=\"text\"  defaultValue={sjOptions.minTotalReads} onKeyUp={e => handleTextInput(e, 'minTotalReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Fraction multi-mapped:\n        <StyledPopup inverted\n          content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n          position=\"left center\"\n          on=\"click\"\n          trigger={\n            <Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />\n          } />\n      </OptionDiv>\n      at most <OptionInput type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={e => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={e => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n      {\n        MOTIFS.map(motif =>\n          <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} defaultChecked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>\n        )\n      }\n    </div>\n  </div>\n}\n\nconst BamOptionsPanel = ( { bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>BAM TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv><Checkbox label=\"View as pairs\" defaultChecked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show soft-clips\" defaultChecked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={bamOptions.colorBy} onChange={e => updateBamOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">Strand</option>\n        <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n        <option value=\"pairOrientation\">Pair orientation</option>\n        <option value=\"fragmentLength\">Insert size (TLEN)</option>\n        <option value=\"none\">None</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\n\nconst VcfOptionsPanel = ( { vcfOptions, updateVcfOptions }) => {\n\n  return <div>\n    <CategoryH3>VCF TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>\n      Display mode: &nbsp; <select defaultValue={vcfOptions.displayMode} onChange={e => updateVcfOptions({ displayMode: e.target.value })}>\n        <option value=\"COLLAPSED\">Collapse</option>\n        <option value=\"SQUISHED\">Squish</option>\n        <option value=\"EXPANDED\">Expand</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\nclass RightSideBar extends React.Component\n{\n  static propTypes = {\n    locusList: PropTypes.array,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    setLocus: PropTypes.func,\n    setLocusList: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    return <div>\n      <EditLocusList\n        name=\"Right Side Bar\"\n        locusList={this.props.locusList}\n        setLocus={this.props.setLocus}\n        setLocusList={this.props.setLocusList}\n      />\n\n      {this.props.bamOptions.showBams && <BamOptionsPanel\n        bamOptions={this.props.bamOptions}\n        updateBamOptions={this.props.updateBamOptions}\n      />}\n      {this.props.vcfOptions.showVcfs && <VcfOptionsPanel\n        vcfOptions={this.props.vcfOptions}\n        updateVcfOptions={this.props.updateVcfOptions}\n      />}\n      {(this.props.sjOptions.showCoverage || this.props.sjOptions.showJunctions) && <SjOptionsPanel\n        sjOptions={this.props.sjOptions}\n        updateSjOptions={this.props.updateSjOptions}\n      />}\n    </div>\n  }\n}\n\nconst mapStateToProps = state => ({\n  locusList: getRightSideBarLocusList(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_RIGHT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { RightSideBar as RightSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getUser } from '../redux/selectors'\nimport { connect } from 'react-redux'\n\n\nclass UserInfo extends React.Component\n{\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n  }\n\n  render() {\n    if (!this.props.user.googleUserEmail) {\n      return <div>Signing in to Google Buckets...</div>\n    }\n\n    return <div>Signed in to Google Buckets as <b>{this.props.user.googleUserEmail}</b></div>\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: getUser(state),\n\n})\n\nexport { UserInfo as UserInfoComponent }\n\nexport default connect(mapStateToProps)(UserInfo)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport UserInfo from \"./UserInfo\";\n\nconst HeaderRow = styled(Grid.Row)`\n  color: #444;\n  margin-bottom: 5px;\n`\n\nconst Column1 = styled(Grid.Column).attrs({ width: 6 })`\n  text-align: left;\n  padding-left: 75px !important;\n`\nconst Column2 = styled(Grid.Column).attrs({ width: 10 })`\n  text-align: right;\n  padding-right: 75px !important;\n`\n\n\nexport default () =>\n  <Grid>\n    <HeaderRow>\n      <Column1>\n        <b>RNA-seq Viewer:</b> &nbsp; &nbsp; &nbsp; {/* <a href=\"#\">Intro Video</a> &nbsp; &nbsp; */}<a href={window.location}>More Details</a>\n      </Column1>\n      <Column2>\n        <UserInfo />\n      </Column2>\n    </HeaderRow>\n  </Grid>\n\n","\nexport const throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport { getGenome, getLocus, getTracks, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\nimport { throttle } from '../utils/throttle'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\nconst StyledDiv = styled.div``\n\n\nclass IGV extends React.Component {\n\n  static propTypes = {\n    genome: PropTypes.string.isRequired,\n    locus: PropTypes.string.isRequired,\n    tracks: PropTypes.array.isRequired,\n    locusChangedHandler: PropTypes.func,\n    trackRemovedHandler: PropTypes.func,\n    userChangedHandler: PropTypes.func,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextTrackRemovedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <StyledDiv><div ref={this.setContainerElement} /></StyledDiv>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    let igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus: this.props.locus,\n      genome: this.props.genome,\n      tracks: this.props.tracks,\n    }\n\n    // TODO check if any tracks need google sign-in\n    await initGoogleClient()\n    await googleSignIn()\n    let googleUserEmail = await getGoogleUserEmail()\n    this.props.userChangedHandler(googleUserEmail)\n\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n\n      if (this.props.locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, this.props.locusChangedHandler)) //{chr, start, end, label}\n      }\n\n      if (this.props.trackRemovedHandler) {\n        this.browser.on('trackremoved', track => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            this.props.trackRemovedHandler(track)\n          }\n\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n    })\n  }\n\n  shouldComponentUpdate = nextProps => {\n    if (!this.container) {\n      return false\n    }\n\n    if (nextProps.locus && nextProps.locus !== this.props.locus) {\n      this.browser.search(nextProps.locus)\n    }\n\n    let nextTrackSettingsByTrackName = nextProps.tracks.reduce((acc, item) => {\n      return {[item.name]: item, ...acc}\n    }, {})\n\n    console.log('IGV.nextProps:', nextProps )\n    // update or remove existing tracks\n    for (let track of this.props.tracks) {\n      // TODO check if any tracks need google sign-in\n\n      const nextTrackSettings = nextTrackSettingsByTrackName[track.name]\n      if (nextTrackSettings) {\n        if ( (nextProps.sjOptions !== this.props.sjOptions && ['merged', 'wig', 'spliceJunctions'].includes(track.type) ) ||\n             (nextProps.vcfOptions !== this.props.vcfOptions && 'variant' === track.type) ||\n             (nextProps.bamOptions !== this.props.bamOptions && 'alignment' === track.type)\n        ) {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n          this.browser.loadTrack(nextTrackSettings)\n        }\n\n        // delete track from nextTrackSettingsByTrackName to indicate that it's still selected\n        delete nextTrackSettingsByTrackName[track.name]\n\n      } else {\n        // remove track that was de-selected\n        try {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n        } catch(e) {\n          console.warn('Unable to remove track', track.name, e)\n        }\n      }\n    }\n\n    // load any newly-selected track(s)\n    for (let track of Object.values(nextTrackSettingsByTrackName)) {\n      try {\n        this.browser.loadTrack(track)\n      } catch(e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    }\n\n    return false\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  locusChangedHandler: (event) => {\n    const newLocus = event.label.replace(/,/g, '')\n\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: newLocus,\n    })\n  },\n\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: {googleUserEmail}\n    })\n  },\n\n  trackRemovedHandler: (track) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLE_NAMES',\n      values: [track.name],\n    })\n  },\n})\n\nexport { IGV as IGVComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { getInitialSettingsUrl } from '../redux/selectors'\nimport { connect } from 'react-redux'\nimport { Form, Label, Button, Input } from 'semantic-ui-react'\n\nconst StyledDiv = styled.div`\n  color: #999;\n  width: 100%;\n  text-align: center;\n  \n  .ui.label {\n    color: #444;\n    background-color: #f3f3f3;\n  }\n`\n\nconst StyledInput = styled(Input)`\n  margin-top: 50px;\n  width: calc(100% - 300px);\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 20px !important;\n`\n\nclass InitialSettingsForm extends React.Component\n{\n  static propTypes = {\n    initialSettingsUrl: PropTypes.object.isRequired,\n  }\n\n  render() {\n    return <StyledDiv align=\"center\">\n        <StyledInput\n          label=\"Initial settings:\"\n          defaultValue={this.props.initialSettingsUrl}\n          placeholder=\"URL of .yaml or .json settings file (eg. http://.../settings.json)\"\n        />\n        <StyledButton content='Save URL' />\n    </StyledDiv>\n\n\n  }\n}\n\nconst mapStateToProps = state => ({\n  initialSettingsUrl: getInitialSettingsUrl(state),\n})\n\nexport { InitialSettingsForm as InitialSettingsFormComponent }\n\nexport default connect(mapStateToProps)(InitialSettingsForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport Header from './Header'\nimport UserInfo from './UserInfo'\nimport IGV from './IGV'\nimport InitialSettingsForm from './InitialSettingsForm'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nconst SIDE_BAR_WIDTH = 210\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <LeftSideBar />\n        </Grid.Column>\n        <Grid.Column style={{ minWidth: '800px', width: `calc(100% - ${2*SIDE_BAR_WIDTH}px)` }}>\n          <Header />\n          <IGV />\n          <InitialSettingsForm />\n\n        </Grid.Column>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <RightSideBar />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","import { combineReducers } from 'redux'\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\nimport modalReducers from './utils/modalReducer'\n\n\nconst samplesInCategoriesReducer = (state, action) => {\n  if (!action || !action.categoryName || !action.samples) {\n    return state || []\n  }\n\n  return state.map(category => {\n    if(category.categoryName !== action.categoryName) {\n      return category\n    }\n\n    let updatedSamples\n    switch (action.type) {\n      case 'SET_SAMPLES':\n        updatedSamples = [...action.samples]\n        break\n\n      case 'ADD_SAMPLES':\n        updatedSamples = [...category.samples, ...action.samples]\n        break\n\n      default:\n        updatedSamples = category.samples\n    }\n\n    return {\n      ...category,\n      samples: updatedSamples,\n    }\n  })\n}\n\n\nconst selectedSampleNamesByCategoryNameReducer = (state, action) => {\n  if (!action || !action.categoryName || !Array.isArray(action.selectedSampleNames)) {\n    return state || {}\n  }\n\n  const previousList = state[action.categoryName] || []\n  switch (action.type) {\n    case `SET_SELECTED_SAMPLE_NAMES`:\n    case `ADD_SELECTED_SAMPLE_NAMES`:\n    case `REMOVE_SELECTED_SAMPLE_NAMES`:\n      let updatedList\n      if (action.type === `SET_SELECTED_SAMPLE_NAMES`) {\n        updatedList = [ ...action.selectedSampleNames ]            // make a copy of action.values\n      } else if (action.type === `ADD_SELECTED_SAMPLE_NAMES`) {\n        updatedList = [ ...previousList, ...action.selectedSampleNames ]\n      } else {\n        const valuesToRemove = action.selectedSampleNames\n        updatedList = previousList.filter(v => !valuesToRemove.includes(v))\n      }\n\n      return {\n        ...state,\n        [action.categoryName]: updatedList,\n      }\n  }\n\n  return state\n}\n\n\n// root reducer\nconst rootReducer = combineReducers(Object.assign({\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  rightSideBarLocusList: createArrayReducer('RIGHT_SIDE_BAR_LOCUS_LIST'),\n  leftSideBarLocusList: createArrayReducer('LEFT_SIDE_BAR_LOCUS_LIST'),\n  samplesInCategories: samplesInCategoriesReducer,\n  selectedSampleNamesByCategoryName: selectedSampleNamesByCategoryNameReducer,\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n  initialSettingsUrl: createSingleValueReducer('UPDATE_INITIAL_SETTINGS_URL', ''),\n  initialSettings: createSingleValueReducer('UPDATE_INITIAL_SETTINGS', {}),\n}, modalReducers))\n\nexport default rootReducer\n","/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(label, serializedState)\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\n//import logger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst REFERENCE_DATA_ROOT = 'gs://macarthurlab-rnaseq/reference_tracks/GTEx_ref_data'\nconst REFERENCE_DATA_INFO_LIST = [\n  {\n    name: 'GTEx 100 Muscle',\n    description: '100 randomly-chosen GTEx v3 muscle samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all 100 samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/muscle_100_GTEx_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/muscle_100_GTEx_samples.bigWig`,\n  },\n  {\n    name: 'GTEx 100 Blood',\n    description: '100 randomly-chosen GTEx v3 blood samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all 100 samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/blood_100_GTEx_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/blood_100_GTEx_samples.bigWig`,\n  },\n  {\n    name: 'GTEx 100 Fibs',\n    description: '100 randomly-chosen GTEx v3 fibroblast samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all 100 samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/fibs_100_GTEx_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/fibs_100_GTEx_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Muscle',\n    description: 'All 803 GTEx v3 muscle samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Blood',\n    description: 'All 755 GTEx v3 blood samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Fibs',\n    description: 'All 504 GTEx v3 fibroblast samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Muscle - Norm.',\n    description: 'All 803 GTEx v3 muscle samples combined by summing raw coverage values across all samples and also summing normalized splice-junction-spanning read counts across all samples. The normalization is done by computing the normalized read count for each junction as normalized_read_count = raw_read_count * scalar. Here scalar = average_unique_reads_per_muscle_sample / (total_unqiue_reads_in_this_sample * number_of_muscle_samples), and average_unique_reads_per_muscle_sample = (total_unqiue_reads_in_all_muscle_samples / number_of_muscle_samples)',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.normalized.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Blood - Norm.',\n    description: 'All 755 GTEx v3 blood samples combined by summing raw coverage values across all samples and also summing normalized splice-junction-spanning read counts across all samples. The normalization is done by computing the normalized read count for each junction as normalized_read_count = raw_read_count * scalar. Here scalar = average_unique_reads_per_blood_sample / (total_unqiue_reads_in_this_sample * number_of_blood_samples), and average_unique_reads_per_blood_sample = (total_unqiue_reads_in_all_blood_samples / number_of_blood_samples)',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.normalized.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Fibs - Norm.',\n    description: 'All 504 GTEx v3 fibroblast samples combined by summing raw coverage values across all samples and also summing normalized splice-junction-spanning read counts across all samples. The normalization is done by computing the normalized read count for each junction as normalized_read_count = raw_read_count * scalar. Here scalar = average_unique_reads_per_fibs_sample / (total_unqiue_reads_in_this_sample * number_of_fibs_samples), and average_unique_reads_per_fibs_sample = (total_unqiue_reads_in_all_fibs_samples / number_of_fibs_samples)',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.normalized.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.bigWig`,\n  },\n  /*\n  {\n    name: 'Gencode v32 Genes',\n    description: 'Comprehensive gene annotations for GRCh38 reference chromosomes. Source: https://www.gencodegenes.org/human/release_32.html',\n    annotation: 'gs://macarthurlab-rnaseq/reference_tracks/gencode.v32.annotation.sorted.gtf.gz'\n  },\n  {\n    name: 'RefSeq Genes',\n    path: 'https://s3.amazonaws.com/igv.org.genomes/hg38/refGene.sorted.txt.gz'\n  }\n  */\n]\n\nconst SAMPLE_INFO_LIST = []\n\nconst INITIAL_SAMPLES_IN_CATEGORIES = [\n  {\n    categoryName: 'Reference Data',\n    samples: REFERENCE_DATA_INFO_LIST,\n  },\n  {\n    categoryName: 'Samples',\n    samples: SAMPLE_INFO_LIST,\n  },\n]\n\nconst INITIAL_STATE = {\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  sjOptions: {\n    trackHeight: 170,\n    showCoverage: true,\n    showJunctions: true,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 1,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelUniqueReadCount: true,\n    labelMultiMappedReadCount: false,\n    labelTotalReadCount: false,\n    labelMotif: false,\n    labelAnnotatedJunction: false,\n    labelAnnotatedJunctionValue: \" [A]\",\n  },\n  vcfOptions: {\n    displayMode: 'EXPANDED',\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    alignmentShading: 'strand',\n  },\n  samplesInCategories: INITIAL_SAMPLES_IN_CATEGORIES,\n  selectedSampleNamesByCategoryName: {},\n  leftSideBarLocusList: [],\n  rightSideBarLocusList: [],\n}\n\nINITIAL_STATE.initialSettings = JSON.parse(JSON.stringify(INITIAL_STATE)) // create a deep-copy of INITIAL_STATE\n\nconst PERSIST_KEYS_IN_URL = {\n  'locus': 'locus',\n  'selectedSampleNamesByCategoryName': 'selectedSamples',\n  'sjOptions': 'sjOptions',\n  'bamOptions': 'bamOptions',\n  'vcfOptions': 'vcfOptions',\n  'initialSettingsUrl': 'initialSettingUrl',\n}\n\nconst PERSIST_KEYS_IN_LOCAL_STORAGE = [\n  'samplesInCategories', 'leftSideBarLocusList', 'rightSideBarLocusList',\n]\n\nconst persistStoreMiddleware = store => next => (action) => {\n  const result = next(action)\n  const nextState = store.getState()\n  PERSIST_KEYS_IN_LOCAL_STORAGE.forEach((key) => { saveState(key, nextState[key]) })\n\n  const hashString = Object.keys(nextState)\n    .filter(key => (key in PERSIST_KEYS_IN_URL))\n    .reduce((hashKeyValueList, key) => {\n      const value = key === 'locus' ? nextState[key].replace(',', '') : jsurl.stringify(nextState[key])\n      return [\n        ...hashKeyValueList,\n        `${PERSIST_KEYS_IN_URL[key]}=${value}`,\n      ]\n    }, []).join('&')\n\n  window.location.hash = '#' + hashString\n\n  return result\n}\n\nconst enhancer = compose(\n  applyMiddleware(thunkMiddleware, persistStoreMiddleware),\n)\n\n\n/**\n * Initialize the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const configureStore = (\n  rootReducer = state => state,\n  initialState = INITIAL_STATE,\n) => {\n\n  //restore any values from local storage\n  PERSIST_KEYS_IN_LOCAL_STORAGE.forEach((key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      initialState[key] = v\n    }\n  })\n\n  const REVERSE_KEY_NAME_LOOKUP = Object.entries(PERSIST_KEYS_IN_URL).reduce((acc, [key, value]) => { return { ...acc, [value]: key } }, {})\n  const hashString = window.location.hash.replace(/^#/, '')\n  const stateFromUrlHash = hashString.split('&').reduce((acc, keyValue) => {\n    let keyValueList = keyValue.split('=')\n    let key = (keyValueList[0] in REVERSE_KEY_NAME_LOOKUP) ? REVERSE_KEY_NAME_LOOKUP[keyValueList[0]] : keyValueList[0]\n    if (key === 'locus') {\n      acc[key] = keyValueList[1]\n    } else {\n      try {\n        acc[key] = jsurl.parse(keyValueList[1])\n      } catch(e) {\n        console.error('Couldn\\'t parse url hash param', keyValueList[0], \": \", keyValueList[1])\n      }\n    }\n    return acc\n  }, {})\n\n  //values from url override values from local storage\n  initialState = { ...initialState, ...stateFromUrlHash }\n\n  console.log('Initializing store to:')\n  console.log(initialState)\n\n  return createStore(rootReducer, initialState, enhancer)\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport rootReducer from './redux/rootReducer'\nimport { configureStore } from './redux/configureStore'\n\nfunction App() {\n  return <Provider store={configureStore(rootReducer)}>\n    <BaseLayout />\n  </Provider>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}