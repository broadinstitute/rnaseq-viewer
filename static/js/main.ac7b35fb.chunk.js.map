{"version":3,"sources":["utils/googleAuth.js","constants.js","redux/selectors.js","components/LeftSideBar.jsx","components/RightSideBar.jsx","components/IGV.jsx","components/UserInfo.jsx","components/BaseLayout.jsx","redux/utils/reducerFactories.js","redux/rootReducer.js","utils/localStorage.js","redux/configureStore.js","App.js","index.js"],"names":["googleSignIn","a","gapi","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","getGoogleUserEmail","profile","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","user","reloadAuthResponse","getAuthResponse","access_token","MOTIFS","getLocus","state","locus","getGenome","genome","getSamplesInfo","samplesInfo","getSelectedSampleNames","selectedSampleNames","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getUser","getSelectedSamples","createSelector","map","category","samples","flat","filter","s","includes","name","getTracks","selectedSamples","igvTracks","forEach","sample","i","junctionsTrack","coverageTrack","junctions","showJunctions","type","format","url","indexURL","oauthToken","order","height","trackHeight","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","undefined","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelUniqueReadCount","labelMultiMappedReadCount","labelTotalReadCount","labelMotif","labelAnnotatedJunction","labelAnnotatedJunctionValue","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","coverage","showCoverage","console","log","push","tracks","showVcfs","vcf","indexUrl","indexed","displayMode","showBams","bam","viewAsPairs","showSoftClips","visibilityWindow","color","CategoryH3","styled","h3","CategoryDetails","div","OptionDiv","StyledPopup","Popup","StyledIcon","attrs","JunctionsIcon","CoverageIcon","BamIcon","VcfIcon","SampleColorLabelsContainer","span","NoWrapDiv","SampleColorLabelsWithPopup","content","style","paddingRight","colSpan","fontSize","marginTop","position","trigger","onClick","navigator","clipboard","writeText","marginLeft","CategoryPanel","updateSelectedSampleNames","toUpperCase","length","href","e","preventDefault","sampleNamesInCategory","Set","x","has","SamplesPanel","key","SamplePanel","Checkbox","label","checked","data-sample","onChange","data","SampleDetails","description","inverted","Icon","LeftSideBar","defaultChecked","this","props","updateSjOptions","updateBamOptions","updateVcfOptions","React","Component","connect","dispatch","action","values","newSettings","updates","OptionInput","input","ColorLegendIcon","StyledRadio","Radio","ColorByLegend","handleTextInput","defaultValue","onKeyUp","width","SjOptionsPanel","value","keyCode","target","parseInt","on","BamOptionsPanel","VcfOptionsPanel","RightSideBar","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","StyledDiv","throttle","delay","fn","timerId","args","clearTimeout","setTimeout","IGV","setContainerElement","element","container","render","ref","shouldComponentUpdate","nextProps","nextTrackSettingsByTrackName","reduce","acc","item","track","nextTrackSettings","ignoreNextTrackRemovedEvent","browser","removeTrackByName","loadTrack","warn","Object","igvBrowserOptions","Promise","resolve","load","client","init","googleUserEmail","userChangedHandler","igv","createBrowser","then","locusChangedHandler","trackRemovedHandler","event","newLocus","replace","newValue","UserInfo","Grid","Row","Column","zeroActionsReducer","createSingleObjectReducer","updateActionType","initialState","debug","reducer","error","newState","rootReducer","combineReducers","assign","createSingleValueReducer","actionTypeSuffix","Array","isArray","valuesToRemove","v","createArrayReducer","loadState","serializedState","localStorage","getItem","JSON","parse","err","INITIAL_STATE","window","PERSIST_STATE_IN_URL","PERSIST_STATE_IN_LOCAL_STORAGE","enhancer","compose","applyMiddleware","thunkMiddleware","store","next","result","nextState","getState","stringify","setItem","saveState","stateToSave","keys","obj","location","hash","jsurl","configureStore","createStore","App","BaseLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ac7b35fb.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n\nconst RNA_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise(resolve => {\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        'clientId': RNA_VIEWER_CLIENT_ID,\n        'scope': 'https://www.googleapis.com/auth/devstorage.read_only',\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest']\n      })\n\n      resolve()\n    })\n  })\n})\n\nexport const googleSignIn = async () => {\n\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(!authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const profile = authInstance.currentUser.get().getBasicProfile()\n\n  return profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance.currentUser.get()\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith(\"gs://\")) {\n    console.error(`${gsPath} doesn't start with \"gs://\"` )\n    return\n  }\n\n  const gsPathParts = gsPath.split(\"/\")\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"` )\n    return\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return await gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults:1000})\n}\n","\nexport const MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\n\nexport const DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n\n","import { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\nexport const getLocus = state => state.locus\nexport const getGenome = state => state.genome\nexport const getSamplesInfo = state => state.samplesInfo\nexport const getSelectedSampleNames = state => state.selectedSampleNames\nexport const getSjOptions = state => state.sjOptions\nexport const getVcfOptions = state => state.vcfOptions\nexport const getBamOptions = state => state.bamOptions\nexport const getUser = state => state.user\n\n/**\n * Expects sample info like:\n *\n * [\n *    {\n *      label: 'category1',\n *      samples : [\n *          { sample1 .. },\n *          { sample2 .. },\n *          ...\n *      ]\n *    },\n *    {\n *      label: 'category2',\n *      samples : [\n *        { sample3 .. },\n *        { sample4 .. },\n *        ...\n *      ]\n *    },\n * ]\n */\n\nexport const getSelectedSamples = createSelector(\n  getSamplesInfo,\n  getSelectedSampleNames,\n  (samplesInfo, selectedSampleNames) => samplesInfo.map(category => category.samples).flat().filter(s => selectedSampleNames.includes(s.name)),\n)\n\n\nexport const getTracks = createSelector(\n  getSelectedSamples,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  (selectedSamples, sjOptions, vcfOptions, bamOptions) => {\n    const igvTracks = []\n\n    selectedSamples.forEach((sample, i) => {\n      //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n      let junctionsTrack\n      if (sample.junctions && sjOptions.showJunctions) {\n        junctionsTrack = {\n          type: 'junctions',\n          format: 'bed',\n          url: sample.junctions,\n          indexURL: `${sample.junctions}.tbi`,\n          oauthToken: getGoogleAccessToken,\n          order: i*10,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n          minTotalReads: sjOptions.minTotalReads,\n          maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n          minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n          thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n          bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n          colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n          colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n          hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n          labelUniqueReadCount: sjOptions.labelUniqueReadCount,\n          labelMultiMappedReadCount: sjOptions.labelMultiMappedReadCount,\n          labelTotalReadCount: sjOptions.labelTotalReadCount,\n          labelMotif: sjOptions.labelMotif,\n          labelAnnotatedJunction: sjOptions.labelAnnotatedJunction && sjOptions.labelAnnotatedJunctionValue,\n          hideAnnotatedJunctions: sjOptions.hideAnnotated,\n          hideUnannotatedJunctions: sjOptions.hideUnannotated,\n          hideMotifs: MOTIFS.filter( motif => sjOptions[`hideMotif${motif}`] ), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n        }\n      }\n\n      let coverageTrack\n      if(sample.coverage && sjOptions.showCoverage) {\n        coverageTrack = {\n          type: 'wig',\n          format: 'bigwig',\n          url: sample.coverage,\n          oauthToken: getGoogleAccessToken,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          order: i*10 + 1,\n        }\n      }\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${sample.junctions} & ${sample.coverage} track #`, i*10 + 2)\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          order: i*10 + 2,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${sample.junctions} track #`, i*10 )\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [junctionsTrack],\n          order: i*10 + 3,\n        })\n      } else if (coverageTrack) {\n        console.log(`Adding ${sample.coverage} track #`, i*10 + 1)\n        igvTracks.push(coverageTrack)\n      }\n\n      if (vcfOptions.showVcfs && sample.vcf) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.vcf} track #`, i*10 + 4)\n\n        igvTracks.push({\n          type: 'variant',\n          format: 'vcf',\n          url: sample.vcf,\n          indexUrl: `${sample.vcf}.tbi`,\n          indexed: true,\n          name: `${sample.name} vcf`,\n          displayMode: vcfOptions.displayMode,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 4,\n        })\n      }\n\n      if (bamOptions.showBams && sample.bam) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.bam} track #`, i*10 + 5)\n\n        igvTracks.push({\n          type: 'alignment',\n          url: sample.bam,\n          indexed: true,\n          name: `${sample.name} bam`,\n          height: bamOptions.trackHeight,\n          colorBy: bamOptions.colorBy,\n          viewAsPairs: bamOptions.viewAsPairs,\n          showSoftClips: bamOptions.showSoftClips,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 5,\n        })\n      }\n    })\n\n\n    igvTracks.push({\n      name: 'Gencode v32 Genes',\n      format: \"refgene\",\n      url: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz\",\n      indexUrl: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz.tbi\",\n      indexed: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: \"EXPANDED\",\n      order: 1000001,\n      color: \"rgb(76,171,225)\",\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\"\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getSamplesInfo, getSelectedSampleNames, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\n\n\nconst CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst OptionDiv = styled.div`\n  padding-top: 3px;\n`\n\nconst StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nconst StyledIcon = styled.div.attrs({ name: \"stop\" })`\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\nconst JunctionsIcon = styled(StyledIcon)`\n   color: #B0B0EC;\n   border: 3px solid #B0B0EC;\n`\n\nconst CoverageIcon = styled(StyledIcon)`\n   color: #B5D29A;\n   border: 3px solid #B5D29A;\n`\n\nconst BamIcon = styled(StyledIcon)`\n   color: #5CB6EA;\n   border: 3px solid #5CB6EA;\n`\n\nconst VcfIcon = styled(StyledIcon)`\n   color: #E6A01B;\n   border: 3px solid #E6A01B;\n`\n\nconst SampleColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\nconst SampleColorLabelsWithPopup = ({sample}) => <Popup\n    content={\n      <table>\n        <tbody>\n          {sample.junctions && <tr><td style={{ paddingRight: '10px' }}><b>Junctions:</b></td><td><NoWrapDiv>{sample.junctions}</NoWrapDiv></td></tr>}\n          {sample.coverage && <tr><td><b>Coverage:</b></td><td><NoWrapDiv>{sample.coverage}</NoWrapDiv></td></tr>}\n          {sample.bam && <tr><td><b>Bam:</b></td><td><NoWrapDiv>{sample.bam}</NoWrapDiv></td></tr>}\n          {sample.vcf && <tr><td><b>Vcf:</b></td><td><NoWrapDiv>{sample.vcf}</NoWrapDiv></td></tr>}\n          <tr><td colSpan={2}><div style={{fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <SampleColorLabelsContainer onClick={() =>\n        navigator.clipboard.writeText(`${(sample.bam+\"\\n\") || \"\"}${(sample.junctions+\"\\n\") || \"\"}${(sample.coverage+\"\\n\") || \"\"}${(sample.vcf+\"\\n\") || \"\"}`)\n      }>\n        {sample.junctions && <JunctionsIcon />}\n        {sample.coverage && <CoverageIcon />}\n        {sample.bam && <BamIcon />}\n        {sample.vcf && <VcfIcon />}\n      </SampleColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />\n\n\nconst CategoryPanel = ({category, selectedSampleNames, updateSelectedSampleNames}) =>\n  <div>\n    <CategoryH3>{category.name.toUpperCase()}</CategoryH3>\n    {\n      category.samples.length >= 10 && <CategoryDetails>{`(N=${category.samples.length}) `}</CategoryDetails>\n    }\n    <div>\n      <a href=\"#\" onClick={(e) => {\n        e.preventDefault()\n        const sampleNamesInCategory =  new Set(category.samples.map(s => s.name))\n        updateSelectedSampleNames('SET', selectedSampleNames.filter(x => !sampleNamesInCategory.has(x)))\n      }}>Clear All</a>\n    </div>\n  </div>\n\n\nconst SamplesPanel = ({samplesInfo, selectedSampleNames, updateSelectedSampleNames}) =>\n  samplesInfo.map(category =>\n    <div key={category.name}>\n      <CategoryPanel category={category} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n      {\n        category.samples.map(sample =>\n          <SamplePanel key={sample.name} sample={sample} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n        )\n      }\n    </div>,\n  )\n\nconst SamplePanel = ({sample, selectedSampleNames, updateSelectedSampleNames}) =>\n  <NoWrapDiv>\n    <Checkbox\n      label={sample.name}\n      checked={selectedSampleNames.includes(sample.name)}\n      data-sample={sample.name}\n      onChange={(e, data) => updateSelectedSampleNames( data.checked ? 'ADD' : 'REMOVE', [ data['data-sample'] ]) }\n    />\n    <SampleDetails sample={sample} />\n    <SampleColorLabelsWithPopup sample={sample} />\n  </NoWrapDiv>\n\nconst SampleDetails = ({sample}) => {\n  return (sample.description ?\n    <StyledPopup inverted\n      content={sample.description}\n      position=\"right center\"\n      trigger={\n        <Icon style={{marginLeft: '10px'}} name=\"question circle outline\" />\n      } /> : null)\n}\n\nclass LeftSideBar extends React.Component\n{\n  static propTypes = {\n    samplesInfo: PropTypes.array,\n    selectedSampleNames: PropTypes.array,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    updateSelectedSampleNames: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    return (\n      <div>\n        <CategoryH3>TRACK TYPES TO SHOW PER SAMPLE</CategoryH3>\n        <OptionDiv>\n          <Checkbox label=\"RNA splice-junctions\" defaultChecked={this.props.sjOptions.showJunctions} onChange={(e, data) => this.props.updateSjOptions({ showJunctions: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a splice junction track for each sample selected below.'} position=\"right center\" trigger={<JunctionsIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"RNA coverage\" defaultChecked={this.props.sjOptions.showCoverage} onChange={(e, data) => this.props.updateSjOptions({ showCoverage: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have coverage data. Select this checkbox to show a coverage track for each sample selected below.'} position=\"right center\" trigger={<CoverageIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"BAM track\" defaultChecked={this.props.bamOptions.showBams} onChange={(e, data) => this.props.updateBamOptions({ showBams: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have alignment data. Select this checkbox to show a bam track for each sample selected below.'} position=\"right center\" trigger={<BamIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"VCF track\" defaultChecked={this.props.vcfOptions.showVcfs} onChange={(e, data) => this.props.updateVcfOptions({ showVcfs: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a vcf track for each sample selected below.'} position=\"right center\" trigger={<VcfIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <SamplesPanel\n          samplesInfo={this.props.samplesInfo}\n          selectedSampleNames={this.props.selectedSampleNames}\n          updateSelectedSampleNames={this.props.updateSelectedSampleNames}\n        />\n      </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedSampleNames: getSelectedSampleNames(state),\n  samplesInfo: getSamplesInfo(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateSelectedSampleNames: (action, selectedSampleNames) => {\n    dispatch({\n      type: `${action}_SELECTED_SAMPLE_NAMES`,\n      values: selectedSampleNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { LeftSideBar as LeftSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\"\nimport { Checkbox, Icon, Popup, Radio } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getSamplesInfo, getSelectedSampleNames, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\n\nconst CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nconst OptionDiv = styled.div`\n  padding-top:3px;\n`\n\nconst OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n\nconst StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nconst ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if ( sjOptions.colorBy === \"strand\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n      <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n    </div>\n  } else if ( sjOptions.colorBy === \"motif\" ) {\n    // IGV.js Dark2 color palette\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n    </div>\n  } else if ( sjOptions.colorBy === \"numUniqueReads\" || sjOptions.colorBy === \"numReads\" ) {\n    return  <div>\n      # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n      &nbsp;≤ &nbsp;\n      <OptionInput\n        type=\"text\"\n        defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n        onKeyUp={e => handleTextInput(e, 'colorByNumReadsThreshold')}\n        style={{ width: '35px'}}\n      />\n      &nbsp; &lt; &nbsp;\n      <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n\n    </div>\n  } else if ( sjOptions.colorBy === \"isAnnotatedJunction\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'orange'  }} /> novel junction\n    </div>\n  } else {\n    return <div></div>\n  }\n}\n\nconst SjOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>JUNCTION TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.colorBy} onChange={e => updateSjOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">strand</option>\n        <option value=\"motif\">donor/acceptor motif</option>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n      <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n    </OptionDiv>\n    <OptionDiv>Junction thickness:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.thicknessBasedOn} onChange={e => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction bounce height:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.bounceHeightBasedOn} onChange={e => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n        <option value=\"random\">random</option>\n        <option value=\"distance\">distance</option>\n        <option value=\"thickness\">thickness</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction label:</OptionDiv>\n    <OptionDiv><Checkbox label=\"# uniquely-mapped\" defaultChecked={sjOptions.labelUniqueReadCount} onChange={(e, data) => updateSjOptions({ labelUniqueReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# multi-mapped\" defaultChecked={sjOptions.labelMultiMappedReadCount} onChange={(e, data) => updateSjOptions({ labelMultiMappedReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# total reads\" defaultChecked={sjOptions.labelTotalReadCount} onChange={(e, data) => updateSjOptions({ labelTotalReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"donor/acceptor motif\" defaultChecked={sjOptions.labelMotif} onChange={(e, data) => updateSjOptions({ labelMotif: data.checked })} /></OptionDiv>\n    <OptionDiv>\n      <Checkbox label=\"known junction:\" defaultChecked={sjOptions.labelAnnotatedJunction} onChange={(e, data) => updateSjOptions({ labelAnnotatedJunction: data.checked })} />\n      <OptionInput type=\"text\" defaultValue={sjOptions.labelAnnotatedJunctionValue} onKeyUp={e => handleTextInput(e, 'labelAnnotatedJunctionValue')} style={{ width: '35px'}}  />\n    </OptionDiv>\n\n    <CategoryH3>JUNCTION TRACK FILTERS</CategoryH3><br />\n    <OptionDiv>\n      Show Strands:\n      <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n    </OptionDiv>\n    <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n\n    <OptionDiv><Checkbox label=\"Show known junctions\" defaultChecked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n    <div>\n      <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={e => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Total reads:</OptionDiv>\n      at least <OptionInput type=\"text\"  defaultValue={sjOptions.minTotalReads} onKeyUp={e => handleTextInput(e, 'minTotalReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Fraction multi-mapped:\n        <StyledPopup inverted\n          content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n          position=\"left center\"\n          on=\"click\"\n          trigger={\n            <Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />\n          } />\n      </OptionDiv>\n      at most <OptionInput type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={e => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={e => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n      {\n        MOTIFS.map(motif =>\n          <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} defaultChecked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>\n        )\n      }\n    </div>\n  </div>\n}\n\nconst BamOptionsPanel = ( { bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>BAM TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv><Checkbox label=\"View as pairs\" defaultChecked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show soft-clips\" defaultChecked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={bamOptions.colorBy} onChange={e => updateBamOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">Strand</option>\n        <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n        <option value=\"pairOrientation\">Pair orientation</option>\n        <option value=\"fragmentLength\">Insert size (TLEN)</option>\n        <option value=\"none\">None</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\n\nconst VcfOptionsPanel = ( { vcfOptions, updateVcfOptions }) => {\n\n  return <div>\n    <CategoryH3>VCF TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>\n      Display mode: &nbsp; <select defaultValue={vcfOptions.displayMode} onChange={e => updateVcfOptions({ displayMode: e.target.value })}>\n        <option value=\"COLLAPSED\">Collapse</option>\n        <option value=\"SQUISHED\">Squish</option>\n        <option value=\"EXPANDED\">Expand</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\nclass RightSideBar extends React.Component\n{\n  static propTypes = {\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    samplesInfo: PropTypes.array,\n    selectedSampleNames: PropTypes.array,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    return <div>\n      {this.props.bamOptions.showBams && <BamOptionsPanel\n        bamOptions={this.props.bamOptions}\n        updateBamOptions={this.props.updateBamOptions}\n      />}\n      {this.props.vcfOptions.showVcfs && <VcfOptionsPanel\n        vcfOptions={this.props.vcfOptions}\n        updateVcfOptions={this.props.updateVcfOptions}\n      />}\n      {(this.props.sjOptions.showCoverage || this.props.sjOptions.showJunctions) && <SjOptionsPanel\n        sjOptions={this.props.sjOptions}\n        updateSjOptions={this.props.updateSjOptions}\n      />}\n    </div>\n  }\n}\n\nconst mapStateToProps = state => ({\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n  selectedSampleNames: getSelectedSampleNames(state),\n  samplesInfo: getSamplesInfo(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { RightSideBar as RightSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport { getGenome, getLocus, getTracks, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\nconst StyledDiv = styled.div``\n\nconst throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n\nclass IGV extends React.Component {\n\n  static propTypes = {\n    genome: PropTypes.string.isRequired,\n    locus: PropTypes.string.isRequired,\n    tracks: PropTypes.array.isRequired,\n    locusChangedHandler: PropTypes.func,\n    trackRemovedHandler: PropTypes.func,\n    userChangedHandler: PropTypes.func,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextTrackRemovedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <StyledDiv><div ref={this.setContainerElement} /></StyledDiv>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    let igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus: this.props.locus,\n      genome: this.props.genome,\n      tracks: this.props.tracks,\n    }\n\n    // TODO check if any tracks need google sign-in\n    await initGoogleClient()\n    await googleSignIn()\n    let googleUserEmail = await getGoogleUserEmail()\n    this.props.userChangedHandler(googleUserEmail)\n\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n\n      if (this.props.locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, this.props.locusChangedHandler)) //{chr, start, end, label}\n      }\n\n      if (this.props.trackRemovedHandler) {\n        this.browser.on('trackremoved', track => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            this.props.trackRemovedHandler(track)\n          }\n\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n    })\n  }\n\n  shouldComponentUpdate = nextProps => {\n    if (!this.container) {\n      return false\n    }\n\n    let nextTrackSettingsByTrackName = nextProps.tracks.reduce((acc, item) => {\n      return {[item.name]: item, ...acc}\n    }, {})\n\n    console.log('IGV.nextProps:', nextProps )\n    // update or remove existing tracks\n    for (let track of this.props.tracks) {\n      // TODO check if any tracks need google sign-in\n\n      const nextTrackSettings = nextTrackSettingsByTrackName[track.name]\n      if (nextTrackSettings) {\n        if ( (nextProps.sjOptions !== this.props.sjOptions && ['merged', 'wig', 'junctions'].includes(track.type) ) ||\n             (nextProps.vcfOptions !== this.props.vcfOptions && 'variant' === track.type) ||\n             (nextProps.bamOptions !== this.props.bamOptions && 'alignment' === track.type)\n        ) {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n          this.browser.loadTrack(nextTrackSettings)\n        }\n\n        // delete track from nextTrackSettingsByTrackName to indicate that it's still selected\n        delete nextTrackSettingsByTrackName[track.name]\n\n      } else {\n        // remove track that was de-selected\n        try {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n        } catch(e) {\n          console.warn('Unable to remove track', track.name, e)\n        }\n      }\n    }\n\n    // load any newly-selected track(s)\n    for (let track of Object.values(nextTrackSettingsByTrackName)) {\n      try {\n        this.browser.loadTrack(track)\n      } catch(e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    }\n\n    return false\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  locusChangedHandler: (event) => {\n    const newLocus = event.label.replace(/,/g, '')\n\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: newLocus,\n    })\n  },\n\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: {googleUserEmail}\n    })\n  },\n\n  trackRemovedHandler: (track) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLE_NAMES',\n      values: [track.name],\n    })\n  },\n})\n\nexport { IGV as IGVComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { getUser } from '../redux/selectors'\nimport { connect } from 'react-redux'\n\nconst StyledDiv = styled.div`\n  text-align: right;\n  margin: 70px 70px 0px 0px;\n  color: #999;\n`\n\nclass UserInfo extends React.Component\n{\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n  }\n\n  render() {\n    if (!this.props.user.googleUserEmail) {\n      return <StyledDiv />\n    }\n\n    return <StyledDiv>Signed in to Google Buckets as <b>{this.props.user.googleUserEmail}</b></StyledDiv>\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: getUser(state),\n\n})\n\nexport { UserInfo as UserInfoComponent }\n\nexport default connect(mapStateToProps)(UserInfo)\n","import React from 'react'\nimport styled from \"styled-components\"\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport IGV from './IGV'\nimport UserInfo from './UserInfo'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={2}>\n          <LeftSideBar />\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <IGV />\n          <UserInfo />\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <RightSideBar />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [ ...action.values ]            // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [ ...state, ...action.values ]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter(v => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return Object.assign({}, state, {\n          isLoading: true,\n        })\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return Object.assign({}, state, {\n          isLoading: false,\n          errorMessage: action.error,\n        })\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { combineReducers } from 'redux'\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\n\n// root reducer\nconst rootReducer = combineReducers(Object.assign({\n  //loci: createObjectsByIdReducer('UPDATE_LOCI'),\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  samplesInfo: zeroActionsReducer,\n  selectedSampleNames: createArrayReducer('SELECTED_SAMPLE_NAMES'),\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n}))\n\nexport default rootReducer\n","/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(label, serializedState)\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\n//import logger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst INITIAL_STATE = {\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  sjOptions: {\n    trackHeight: 170,\n    showCoverage: true,\n    showJunctions: true,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 1,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelUniqueReadCount: true,\n    labelMultiMappedReadCount: true,\n    labelTotalReadCount: false,\n    labelMotif: true,\n    labelAnnotatedJunction: false,\n    labelAnnotatedJunctionValue: \" [A]\",\n  },\n  vcfOptions: {\n    displayMode: \"EXPANDED\",\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    colorBy: 'strand',\n  },\n  samplesInfo: [],\n\n  ...(window.IGV_SETTINGS || {}),\n}\n\nconst PERSIST_STATE_IN_URL = [\n  'locus', 'selectedSampleNames', 'sjOptions', 'vcfOptions', 'bamOptions',\n]\n\nconst PERSIST_STATE_IN_LOCAL_STORAGE = []\n\nconst persistStoreMiddleware = store => next => (action) => {\n  const result = next(action)\n  const nextState = store.getState()\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => { saveState(key, nextState[key]) })\n\n  const stateToSave = Object.keys(nextState)\n    .filter(key => PERSIST_STATE_IN_URL.includes(key))\n    .reduce((obj, key) => {\n      return {\n        ...obj,\n        [key]: nextState[key],\n      }\n    }, {})\n\n  window.location.hash = `#${jsurl.stringify(stateToSave)}`\n\n  return result\n}\n\nconst enhancer = compose(\n  applyMiddleware(thunkMiddleware, persistStoreMiddleware),\n)\n\n\n/**\n * Initialize the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const configureStore = (\n  rootReducer = state => state,\n  initialState = INITIAL_STATE,\n) => {\n\n  //restore any values from local storage\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      initialState[key] = v\n    }\n  })\n\n  //values from url override values from local storage\n  initialState = { ...initialState, ...jsurl.parse(window.location.hash.replace(/^#/, '')) }\n\n  console.log('Initializing store to:', initialState)\n\n  return createStore(rootReducer, initialState, enhancer)\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport rootReducer from './redux/rootReducer'\nimport { configureStore } from './redux/configureStore'\n\nfunction App() {\n  return <Provider store={configureStore(rootReducer)}>\n    <BaseLayout />\n  </Provider>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}