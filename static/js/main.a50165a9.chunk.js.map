{"version":3,"sources":["components/SideBarUtils.jsx","components/optionsPanels/ColorPicker.jsx","constants.js","utils/googleAuth.js","redux/selectors.js","components/SelectedDataPanel.jsx","redux/utils/reducerFactories.js","redux/utils/modalReducer.js","components/Modal.jsx","components/EditLocusList.jsx","components/AddRows.jsx","components/SearchRows.jsx","components/LeftSideBar.jsx","components/optionsPanels/BamOptionsPanel.jsx","components/optionsPanels/VcfOptionsPanel.jsx","components/optionsPanels/SpliceJunctionsOptionsPanel.jsx","components/optionsPanels/GcnvOptionsPanel.jsx","components/RightSideBar.jsx","components/About.jsx","components/UserInfo.jsx","components/Header.jsx","utils/throttle.js","components/IGV.jsx","components/LoginAndShowIGV.jsx","components/RequestStatus.jsx","utils/localStorage.js","redux/initialState.js","components/InitialSettingsForm.jsx","components/BaseLayout.jsx","redux/rootReducer.js","App.js","index.js"],"names":["CategoryH3","styled","h3","_templateObject","_taggedTemplateLiteral","StyledPopup","Popup","_templateObject2","ColorLegendIcon","Icon","_templateObject3","OptionDiv","div","_templateObject4","OptionInputDiv","_templateObject5","OptionInput","input","_templateObject6","ColorSwatchBorder","ColorSwatch","attrs","flowing","ColorPicker","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","color","setState","colorChangedHandler","hex","state","_createClass","key","value","_this2","React","createElement","on","position","trigger","style","background","this","content","SwatchesPicker","onChangeComplete","handleApply","onChange","newColor","Component","SJ_MOTIFS","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","googleSignIn","_ref2","_asyncToGenerator","_callee2","authInstance","_context2","gapi","auth2","getAuthInstance","isSignedIn","get","signIn","apply","arguments","getGoogleUserEmail","_ref3","_callee3","user","profile","_context3","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","_ref4","_callee4","_context4","reloadAuthResponse","getAuthResponse","access_token","getLocus","locus","getRightSideBarLocusList","rightSideBarLocusList","getLeftSideBarLocusList","leftSideBarLocusList","getGenome","genome","getIsLeftSideBarVisible","showLeftSideBar","getIsRightSideBarVisible","showRightSideBar","getRowsInCategories","rowsInCategories","getSelectedRowNamesByCategoryName","selectedRowNamesByCategoryName","getSelectedSamplesByCategoryNameAndRowName","selectedSamplesByCategoryNameAndRowName","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getGcnvOptions","gcnvOptions","getUser","getIsGoogleLoginRequired","isGoogleLoginRequired","getInitialSettingsUrl","initialSettingsUrl","getAllDataTypes","createSelector","_toConsumableArray","reduce","acc","category","rows","row","data","filter","map","dataType","add","Set","getDataTypesUsersCanToggle","dataTypes","size","getEnabledDataTypes","dataTypesToShow","allDataTypes","dataTypesUsersCanToggle","includes","getRowsByCategoryName","_objectSpread","categoryName","getSelectedRowsByCategoryName","rowsByCategoryName","entries","_ref","_slicedToArray","selectedRowNames","getTracks","trackOrder","selectedRowsByCategoryName","trackOrderArray","enabledDataTypes","igvTracks","junctionsTrack","coverageTrack","j","computeTrackOrder","trackName","indexOf","concat","label","console","log","url","format","indexURL","height","trackHeight","min","trackMin","max","trackMax","autoscale","highlightSamples","selectedSamples","sampleName","sampleSettings","onlyHandleClicksForHighlightedSamples","oauthToken","order","rowName","error","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","minSamplesWithThisJunction","maxSamplesWithThisJunction","minPercentSamplesWithThisJunction","maxPercentSamplesWithThisJunction","minJunctionEndsVisible","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","undefined","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelWith","labelWithInParen","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","delimiter","nameField","indexed","displayMode","endsWith","viewAsPairs","showSoftClips","tracks","gencodeGeneTrackOrder","searchable","visibilityWindow","SelectedDataCategory","span","DeleteButton","Button","basic","icon","SampleNameText","SamplePanel","sample","hideSample","updateSampleSettings","numSelectedSamplesInRow","whiteSpace","onClick","marginLeft","connect","dispatch","updateGcnvOptions","newSettings","updates","hideRow","selectedSamplesByRowName","sampleSettingsByRowNameAndSampleName","result","categoryObj","_ref5","_ref6","margin","zeroActionsReducer","createSingleValueReducer","updateActionType","initialState","debug","reducer","action","newValue","createSingleObjectReducer","newState","createArrayReducer","actionTypeSuffix","Array","isArray","valuesToRemove","modals","updatesById","shallowCopy","id","obj","createObjectsByIdReducer","getModalOpen","modalName","open","ButtonLink","padding","fontWeight","ContainerDiv","StyledButton","CustomModal","_React$PureComponent","_len","args","_key","doClose","handleClose","close","handleSave","cloneElement","Modal","isOpen","onClose","Header","title","floated","Content","children","tabIndex","PureComponent","defaultProps","ownProps","preventDefault","confirmed","getState","confirmOnClose","confirming","LinkButton","EditLocusListButtonAndModal","_this$props","locusList","setLocusList","newLocusList","textAreaValue","split","Boolean","Form","Field","control","TextArea","minHeight","defaultValue","onKeyUp","target","placeholder","join","EditLocusList","setLocus","ExampleDiv","ExamplePath","SUPPORTED_FILE_EXTENSIONS","AddRowsButtonAndModal","warningMessage","errorMessage","trim","invalidPaths","newRowsByRowName","dataPath","pathTokens","fileName","matchingExtensions","ext","filePrefix","replace","newRows","addRows","_this$parseTextAreaVa","parseTextAreaValueToRows","getInitialState","_this$state","fullTitle","handleModalSave","handleModalClose","fileType","Message","SearchPanelContainer","StyledSearch","Search","INITIAL_STATE","isLoading","results","SearchRows","idTokens","getSelectedSamplesForRow","updateSelectedRowNames","updateSelectedSamples","getSelectedRowNames","getSelectedSamplesByRowName","resultsByCategoryName","resultsCounter","newResult","_","some","isRowSelected","inputStringRegExp","dataItemsWithSamples","samples","warn","test","isSampleSelected","matchingRowsByCategoryName","addMatchingSamplesFromRow","setTimeout","RegExp","escapeRegExp","addRowsToHide","addSamplesToHide","addMatchingRowsAndSamples","useCategories","resultsArray","item","actionLabel","className","loading","onResultSelect","handleResultSelect","onFocus","handleSearchChange","onSearchChange","actionType","CategoryDetails","DataTypeIcon","dataTypeIconColors","junctions","coverage","alignment","vcf","gcnv_bed","default","dataTypeLabels","bed","gff3","gtf","genePred","bigBed","RowColorLabelsContainer","NoWrapDiv","ShowTrackTypesPanel","updateDataTypesToShow","checkBoxes","toUpperCase","Checkbox","toLocaleString","checked","toLowerCase","RowColorLabelsWithPopup","paddingRight","cursor","navigator","clipboard","writeText","classList","onMouseDown","remove","paddingLeft","CategoryPanel","RowsPanel","RowPanel","AddRows","data-row","RowDetails","description","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","LeftSideBar","SelectedDataPanel","updateSjOptions","updateVcfOptions","updateBamOptions","editedFields","keyCode","handleTextInput","parseInt","compact","OptionBox","StyledRadio","Radio","ColorByLegend","width","RightSideBar","SpliceJunctionsOptionsPanel","GcnvOptionsPanel","BamOptionsPanel","VcfOptionsPanel","AboutLink","href","UserInfo","googleUserEmail","HeaderRow","Grid","Row","Column1","Column","Column2","throttle","delay","fn","timerId","clearTimeout","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","popupData","clickState","features","clickedFeatures","featureData","feature","end","genomicLocation","start","config","isVisible","attributes","chr","strand","annotated_junction","toString","uniquely_mapped","multi_mapped","maximum_spliced_alignment_overhang","num_samples_with_this_junction","num_samples_total","percent_samples_with_this_junction","toFixed","info","fd","monkeyPatchPopupData","track","subTrack","IGV","element","container","ref","setContainerElement","nextProps","junctionTrackDisplaySettingsChanged","vcfTrackDisplaySettingsChanged","alignmentTrackDisplaySettingsChanged","gcnvTrackDisplaySettingsChanged","gcnvTrackHighlightedSamplesChanged","isEqual","trackId","getTrackId","existingTrackViews","browser","trackViews","existingTrackView","existingTrackConfig","ignoreNextTrackPropsAfterOrderChangedEvent","nextTrackByTrackNameAndType","_callee","nextTrack","trackView","_context","shouldTrackBeReloaded","getIgvTrackView","updateConfig","postInit","repaintViews","ignoreNextTrackRemovedEvent","removeTrackByName","_x","loadTrack","ignoreNextLocusChangedEvent","_componentDidMount","locusChangedHandler","trackRemovedHandler","trackOrderChangedHandler","igvBrowserOptions","_this3","igv","createBrowser","window","igvBrowser","event","trackNamesInOrder","currentIGVLocus","$searchInput","val","nextIGVLocus","search","reloadRemoveAndAddTracks","newLocus","trackNames","SignInButtonContainer","InfoContainer","LoginAndShowIGV","show","userChangedHandler","dataPathCounter","buckets","startsWith","bucket","from","signInError","marginTop","textAlign","GoogleLogin","clientId","TGG_VIEWER_CLIENT_ID","theme","buttonText","disabled","onSuccess","handleGoogleSignIn","onFailure","cookiePolicy","load","client","init","scope","discoveryDocs","t0","t1","details","RequestStatus","status","IN_PROGRESS","SUCCEEDED","successMessage","ERROR","CACHE","DEFAULT_STATE","alignmentShading","KEYS_TO_PERSIST_IN_LOCAL_STORAGE","getStateFromLocalStorage","serializedState","localStorage","getItem","jsonString","LZString","decompress","JSON","parse","err","loadState","KEYS_TO_PERSIST_IN_URL","getStateFromUrlHash","REVERSE_KEY_NAME_LOOKUP","hashString","location","hash","keyValue","keyValueList","jsurl","updateLocalStorageAndUrl","stringify","compress","setItem","saveState","hashKeyValueList","StyledDiv","StyledInput","Input","StyledButton2","InitialSettingsForm","overrideLocalSettings","globalState","updateInitialSettingsUrl","resetGlobalState","stateFromLocalStorage","stateFromUrlHash","isYaml","isJson","isUnknown","response","fileContents","settings","filteredSettings","fetch","mode","redirect","ok","statusText","text","yaml","safeLoad","_x2","urlParts","bucketName","objectPath","_args2","requestStatus","loadInitialSettingsUrl","NONE","_x3","EXCLUDED_KEYS","globalStateForExport","encodeURIComponent","textInputValue","applyInitialSettingsUrl","align","download","exportCurrentSettings","newUrl","LeftSideBarColumn","RightSideBarColumn","BaseLayout","nSideBars","minWidth","zIndex","otherReducers","combineReducers","assign","updatedRows","existingNames","previousList","updatedList","trace","previousSelectedSamplesByRowName","previousSampleSettingsByRowNameAndSampleName","updatedSelectedSamplesByRowName","updatedSampleSettingsByRowNameAndSampleName","previousSampleSettingsBySampleName","newSampleSettingsBySampleName","mergedSamplesSettingsBySampleName","mergedSampleSettings","modalReducers","rootReducer","nextState","createReduxStore","computeInitialState","createStore","compose","applyMiddleware","thunkMiddleware","App","Provider","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a50165a9.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Icon, Popup } from 'semantic-ui-react'\n\nexport const CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nexport const StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nexport const ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nexport const OptionDiv = styled.div`\n  padding-top: 3px;\n  z-index: 100000;\n`\n\nexport const OptionInputDiv = styled(OptionDiv)`\n  margin: 10px 0px; \n`\n\nexport const OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n","/* eslint-disable react/require-optimization */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { SwatchesPicker } from 'react-color'\nimport { Popup } from 'semantic-ui-react'\n\nconst ColorSwatchBorder = styled.div`\n  display: inline-block;\n  cursor: pointer;\n  border-radius: 2px;\n  padding: 1px 2px;\n  background: #fff;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n`\n\nconst ColorSwatch = styled.div`\n  display: inline-block;\n  cursor: pointer;\n  border-radius: 2px;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n  width: 10px;\n  height: 12px;\n`\n\nconst StyledPopup = styled(Popup).attrs({ flowing: true })`\n  padding: 0px !important;\n  div {\n    overflow-y: visible !important;\n  }\n`\n\n/*\nconst ApplyButton = styled(Button)`\n  margin-top: 15px !important;\n`\n<div style={{ textAlign: 'center' }}><ApplyButton onClick={() => this.handleApply(this.state.color)}>Apply</ApplyButton></div>\n*/\n\nclass ColorPicker extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = { color: this.props.color }\n  }\n\n  handleChange = (color) => {\n    this.setState({ color })\n  }\n\n  handleApply = (color) => {\n    this.props.colorChangedHandler(color.hex)\n  }\n\n  render() {\n    return (\n      <StyledPopup\n        on=\"click\"\n        position=\"left center\"\n        trigger={\n          <ColorSwatchBorder>\n            <ColorSwatch style={{ background: this.state.color }} />\n          </ColorSwatchBorder>\n        }\n        content={\n          <SwatchesPicker\n            color={this.state.color}\n            onChangeComplete={this.handleApply}\n            onChange={(newColor) => this.setState({ color: newColor })}\n          />\n        }\n      />\n    )\n  }\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.string.isRequired,\n  colorChangedHandler: PropTypes.func.isRequired,\n}\n\nexport default ColorPicker\n","/* eslint-disable no-multiple-empty-lines */\n\nexport const SJ_MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\nexport const SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n\nexport const GCNV_DEFAULT_HIGHLIGHT_COLOR = 'blue'\n","/* eslint-disable no-undef */\n\nconst TGG_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise((resolve) => {\n  if (typeof gapi === 'undefined') {\n    return\n  }\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        clientId: TGG_VIEWER_CLIENT_ID,\n        scope: 'https://www.googleapis.com/auth/devstorage.read_only',\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest'],\n      })\n      resolve()\n    })\n  })\n})\n\nexport const isSignedIn = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (!authInstance) {\n    return false\n  }\n  return authInstance.isSignedIn.get()\n}\n\nexport const googleSignIn = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (authInstance && !authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (!authInstance) {\n    return null\n  }\n  const user = authInstance && authInstance.currentUser && authInstance.currentUser.get()\n  const profile = user && user.getBasicProfile()\n  return profile && profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance && authInstance.currentUser && authInstance.currentUser.get()\n  if (!authInstance) {\n    return null\n  }\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith('gs://')) {\n    console.error(`${gsPath} doesn't start with \"gs://\"`)\n    return []\n  }\n\n  const gsPathParts = gsPath.split('/')\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"`)\n    return []\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults: 1000 })\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable object-shorthand */\n/* eslint-disable array-callback-return */\n\nimport { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { SJ_MOTIFS, SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD, GCNV_DEFAULT_HIGHLIGHT_COLOR } from '../constants'\n\nexport const getLocus = (state) => state.locus\nexport const getRightSideBarLocusList = (state) => state.rightSideBarLocusList\nexport const getLeftSideBarLocusList = (state) => state.leftSideBarLocusList\nexport const getGenome = (state) => state.genome\nexport const getIsLeftSideBarVisible = (state) => state.showLeftSideBar\nexport const getIsRightSideBarVisible = (state) => state.showRightSideBar\nexport const getDataTypesToShow = (state) => state.dataTypesToShow\nexport const getRowsInCategories = (state) => state.rowsInCategories\nexport const getSelectedRowNamesByCategoryName = (state) => state.selectedRowNamesByCategoryName\nexport const getSelectedSamplesByCategoryNameAndRowName = (state) => state.selectedSamplesByCategoryNameAndRowName\nexport const getTrackOrder = (state) => state.trackOrder\nexport const getSjOptions = (state) => state.sjOptions\nexport const getVcfOptions = (state) => state.vcfOptions\nexport const getBamOptions = (state) => state.bamOptions\nexport const getGcnvOptions = (state) => state.gcnvOptions\nexport const getUser = (state) => state.user\nexport const getIsGoogleLoginRequired = (state) => state.isGoogleLoginRequired\nexport const getInitialSettingsUrl = (state) => state.initialSettingsUrl\n\nexport const getAllDataTypes = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return [...rowsInCategories.reduce((acc, category) => {\n      category.rows.forEach((row) => {\n        if (row.data) {\n          const dataTypes = row.data.filter((data) => data.type).map((data) => data.type)\n          dataTypes.forEach((dataType) => {\n            acc.add(dataType)\n          })\n        }\n      })\n      return acc\n    }, new Set())]\n  })\n\nexport const getDataTypesUsersCanToggle = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return [...rowsInCategories.reduce((acc, category) => {\n      category.rows.forEach((row) => {\n        if (row.data) {\n          const dataTypes = row.data.filter((data) => data.type).map((data) => data.type)\n          if (new Set(dataTypes).size >= 2) { // only include data types when a row has more than one data type\n            dataTypes.forEach((dataType) => {\n              acc.add(dataType)\n            })\n          }\n        }\n      })\n      return acc\n    }, new Set())]\n  })\n\nexport const getEnabledDataTypes = createSelector(\n  getAllDataTypes,\n  getDataTypesUsersCanToggle,\n  getDataTypesToShow,\n  (allDataTypes, dataTypesUsersCanToggle, dataTypesToShow) => {\n    return allDataTypes.filter((dataType) => (dataTypesUsersCanToggle.includes(dataType) ? dataTypesToShow.includes(dataType) : true))\n  })\n\nexport const getRowsByCategoryName = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return rowsInCategories.reduce((acc, category) => {\n      return { ...acc, [category.categoryName]: category.rows }\n    }, {})\n  })\n\nexport const getSelectedRowsByCategoryName = createSelector(\n  getSelectedRowNamesByCategoryName,\n  getRowsByCategoryName,\n  (selectedRowNamesByCategoryName, rowsByCategoryName) => {\n    return Object.entries(selectedRowNamesByCategoryName).reduce((acc, [categoryName, selectedRowNames]) => {\n      if (!rowsByCategoryName[categoryName]) {\n        return acc\n      }\n      return { ...acc, [categoryName]: rowsByCategoryName[categoryName].filter((row) => selectedRowNames.includes(row.name)) }\n    }, {})\n  })\n\nexport const getTracks = createSelector(\n  getSelectedRowsByCategoryName,\n  getSelectedSamplesByCategoryNameAndRowName,\n  getTrackOrder,\n  getEnabledDataTypes,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  getGcnvOptions,\n  (\n    selectedRowsByCategoryName,\n    selectedSamplesByCategoryNameAndRowName,\n    trackOrderArray,\n    enabledDataTypes,\n    sjOptions,\n    vcfOptions,\n    bamOptions,\n    gcnvOptions,\n  ) => {\n    const igvTracks = []\n\n    Object.entries(selectedRowsByCategoryName).forEach(([categoryName, selectedRows]) => selectedRows.forEach((row, i) => {\n      let junctionsTrack\n      let coverageTrack\n      (row.data || []).forEach((data, j) => {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n        if (!enabledDataTypes.includes(data.type)) {\n          console.log(`Skipping hidden track: ${data.url}`)\n          return\n        }\n\n        const computeTrackOrder = (trackName) => {\n          let trackOrder = trackOrderArray.indexOf(trackName) //add category as prefix to trackOrder strings?\n          if (trackOrder !== -1) {\n            trackOrder += 50000\n          } else {\n            trackOrder = i * 100 + j //default track order\n          }\n          return trackOrder\n        }\n\n        if (data.type === 'gcnv_bed') { // && vcfOptions.showGcnv\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || ''}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'gcnv',\n            format: 'gcnv',\n            name: trackName,\n            url: data.url,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            height: gcnvOptions.trackHeight,\n            min: gcnvOptions.trackMin,\n            max: gcnvOptions.trackMax,\n            autoscale: gcnvOptions.autoscale,\n            highlightSamples: (((selectedSamplesByCategoryNameAndRowName[categoryName] || {}).selectedSamples || {})[row.name] || []).reduce(\n              (acc, sampleName) => {\n                acc[sampleName] = ((((selectedSamplesByCategoryNameAndRowName[categoryName] || {}).sampleSettings || {})[row.name] || {})[sampleName] || {}).color || GCNV_DEFAULT_HIGHLIGHT_COLOR\n                return acc\n              }, {}),\n            onlyHandleClicksForHighlightedSamples: gcnvOptions.onlyHandleClicksForHighlightedSamples,\n            oauthToken: getGoogleAccessToken,\n            order: trackOrder,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n        else if (data.type === 'junctions') {\n          if (junctionsTrack) {\n            console.error('More than one \"junctions\" track found in row', row)\n            return\n          }\n\n          junctionsTrack = {\n            type: 'spliceJunctions',\n            format: 'bed',\n            url: data.url,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            oauthToken: getGoogleAccessToken,\n            name: row.name,\n            order: computeTrackOrder(row.name),\n            height: sjOptions.trackHeight,\n            minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n            minTotalReads: sjOptions.minTotalReads,\n            maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n            minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n            minSamplesWithThisJunction: sjOptions.minSamplesWithThisJunction,\n            maxSamplesWithThisJunction: sjOptions.maxSamplesWithThisJunction,\n            minPercentSamplesWithThisJunction: sjOptions.minPercentSamplesWithThisJunction,\n            maxPercentSamplesWithThisJunction: sjOptions.maxPercentSamplesWithThisJunction,\n            minJunctionEndsVisible: sjOptions.minJunctionEndsVisible,\n            thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n            bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n            colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n            colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n            hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n            labelWith: sjOptions.labelWith,\n            labelWithInParen: sjOptions.labelWithInParen,\n            hideAnnotatedJunctions: sjOptions.hideAnnotated,\n            hideUnannotatedJunctions: sjOptions.hideUnannotated,\n            hideMotifs: SJ_MOTIFS.filter((motif) => sjOptions[`hideMotif${motif}`]), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n            rowName: row.name,\n            categoryName: categoryName,\n          }\n        }\n        else if (data.type === 'coverage') {\n          if (coverageTrack) {\n            console.error('More than one \"coverage\" track found in row', row)\n            return\n          }\n\n          coverageTrack = {\n            type: 'wig',\n            format: 'bigwig',\n            url: data.url,\n            oauthToken: getGoogleAccessToken,\n            name: row.name,\n            order: computeTrackOrder(row.name),\n            height: sjOptions.trackHeight,\n            rowName: row.name,\n            categoryName: categoryName,\n          }\n\n          if (data.url.includes('spliceai')) {\n            coverageTrack.color = (value) => {\n              let c\n              if (value < 0.5) {\n                c = 'rgb(180,180,180)'\n              }\n              else if (value < 0.8) {\n                c = 'rgb(180,180,0)'\n              }\n              else {\n                c = 'rgb(200,0,0)'\n              }\n\n              return c\n            }\n          }\n        }\n        else if (['bed', 'gff3', 'gtf', 'genePred', 'genePredExt', 'peaks', 'narrowPeak', 'broadPeak', 'bigBed', 'bedpe'].includes(data.type)) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || ''}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) ${data.type} track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'annotation',\n            format: data.type,\n            name: trackName,\n            order: trackOrder,\n            url: data.url,\n            delimiter: data.delimiter,\n            nameField: data.nameField,\n            oauthToken: getGoogleAccessToken,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            height: 100,\n          })\n        }\n        else if ((data.type === 'vcf' || data.url.includes('.vcf')) && enabledDataTypes.includes('vcf')) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || 'vcf'}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'variant',\n            format: 'vcf',\n            url: data.url,\n            indexURL: data.indexURL || `${data.url}.tbi`,\n            indexed: true,\n            name: trackName,\n            order: trackOrder,\n            displayMode: vcfOptions.displayMode,\n            oauthToken: getGoogleAccessToken,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n        else if (data.type === 'alignment' || data.url.includes('.bam') || data.url.includes('.cram')) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          const trackName = `${row.name} ${data.label || 'bam'}`\n          const trackOrder = computeTrackOrder(trackName)\n          console.log(`Adding ${trackName} (${data.url}) track: order ${trackOrder}`)\n\n          igvTracks.push({\n            type: 'alignment',\n            url: data.url,\n            indexURL: data.indexURL || (`${data.url}`.endsWith('cram') ? `${data.url}.crai` : `${data.url}`.endsWith('bam') ? `${data.url}.bai` : null),\n            indexed: true,\n            name: trackName,\n            order: trackOrder,\n            height: bamOptions.trackHeight,\n            colorBy: bamOptions.colorBy,\n            viewAsPairs: bamOptions.viewAsPairs,\n            showSoftClips: bamOptions.showSoftClips,\n            oauthToken: getGoogleAccessToken,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n      })\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${junctionsTrack.name} (${junctionsTrack.url} & ${coverageTrack.url}) track: order ${junctionsTrack.order}`)\n        igvTracks.push({\n          type: 'merged',\n          name: junctionsTrack.name,\n          order: junctionsTrack.order,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          rowName: row.name,\n          categoryName: categoryName,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${junctionsTrack.name} (${junctionsTrack.url}) track: order ${junctionsTrack.order}`)\n        igvTracks.push(junctionsTrack)\n      } else if (coverageTrack) {\n        console.log(`Adding ${coverageTrack.name} (${coverageTrack.url}) track: order ${coverageTrack.order}`)\n        igvTracks.push(coverageTrack)\n      }\n    }))\n\n    // add gencode genes\n    const gencodeGeneTrackName = 'Gencode v32 Genes'\n\n    let gencodeGeneTrackOrder = trackOrderArray.indexOf(gencodeGeneTrackName)\n    if (gencodeGeneTrackOrder !== -1) {\n      gencodeGeneTrackOrder += 50000\n    } else {\n      gencodeGeneTrackOrder = 1000001\n    }\n\n    igvTracks.push({\n      name: gencodeGeneTrackName,\n      format: 'refgene',\n      url: 'gs://tgg-viewer/ref/GRCh38/gencode_v44/gencode.v44.hg38.sorted.txt.gz',\n      indexURL: 'gs://tgg-viewer/ref/GRCh38/gencode_v44/gencode.v44.hg38.sorted.txt.gz.tbi',\n      indexed: true,\n      searchable: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: 'EXPANDED',\n      order: gencodeGeneTrackOrder,\n      color: 'rgb(76,171,225)',\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  },\n)\n","/* eslint-disable no-multiple-empty-lines */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport ColorPicker from './optionsPanels/ColorPicker'\nimport { GCNV_DEFAULT_HIGHLIGHT_COLOR } from '../constants'\nimport { getSelectedSamplesByCategoryNameAndRowName } from '../redux/selectors'\n\nconst SelectedDataCategory = styled.span`\n  margin: 10px 0px 8px 0px;\n  font-style: italic;\n`\n\nconst DeleteButton = styled(Button).attrs({ basic: true, icon: true })`\n  padding: 0px !important;\n  box-shadow: none !important;\n`\n\nconst SampleNameText = styled.span`\n  word-wrap: break-word;\n  word-break: break-all;  \n  white-space: normal;\n`\n\nconst SamplePanel = ({ categoryName, rowName, sample, sampleSettings, hideSample, updateSampleSettings, numSelectedSamplesInRow }) => (\n  <div style={{ whiteSpace: 'nowrap' }}>\n    <DeleteButton onClick={() => hideSample(categoryName, rowName, sample, numSelectedSamplesInRow)}>\n      <Icon name=\"delete\" />\n    </DeleteButton>\n    <SampleNameText>{sample}</SampleNameText>\n    <span style={{ marginLeft: '8px' }}>\n      <ColorPicker\n        key={sampleSettings.color}\n        color={sampleSettings.color || GCNV_DEFAULT_HIGHLIGHT_COLOR}\n        colorChangedHandler={(newColor) => updateSampleSettings(categoryName, rowName, sample, { color: newColor })}\n      />\n    </span>\n  </div>)\n\n\nSamplePanel.propTypes = {\n  categoryName: PropTypes.string,\n  rowName: PropTypes.string,\n  sample: PropTypes.string,\n  sampleSettings: PropTypes.object,\n  hideSample: PropTypes.func,\n  updateSampleSettings: PropTypes.func,\n  numSelectedSamplesInRow: PropTypes.number,\n}\n\nconst SelectedDataPanel = ({ selectedSamplesByCategoryNameAndRowName, hideRow, hideSample, updateSampleSettings }) => {\n  const result = []\n  Object.entries(selectedSamplesByCategoryNameAndRowName).forEach(([categoryName, categoryObj]) => {\n    Object.entries(categoryObj.selectedSamples || {}).forEach(([rowName, selectedSamples]) => {\n      result.push(\n        <div key={`${categoryName}!!${rowName}`}>\n          <div style={{ whiteSpace: 'nowrap', margin: '15px 0px 7px 0px' }}>\n            {\n              /*<DeleteButton onClick={() => hideRow(categoryName, rowName)}>\n                <Icon name=\"delete\" />\n              </DeleteButton>\n              */\n            }\n            <SelectedDataCategory>{`${categoryName}: ${rowName}`}</SelectedDataCategory>\n          </div>\n          {\n            selectedSamples.map((sample) => (\n              <SamplePanel\n                key={sample}\n                categoryName={categoryName}\n                rowName={rowName}\n                sample={sample}\n                sampleSettings={((categoryObj.sampleSettings || {})[rowName] || {})[sample] || {}}\n                hideRow={hideRow}\n                hideSample={hideSample}\n                updateSampleSettings={updateSampleSettings}\n                numSelectedSamplesInRow={selectedSamples.length}\n              />),\n            )\n          }\n        </div>)\n    })\n  })\n\n  return result.length > 0 ? result : null\n}\n\nSelectedDataPanel.propTypes = {\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object,\n  hideRow: PropTypes.func,\n  hideSample: PropTypes.func,\n  updateSampleSettings: PropTypes.func,\n}\n\n\nconst mapStateToProps = (state) => ({\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateGcnvOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_GCNV_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  hideRow: (categoryName, rowName) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_ROW_NAMES',\n      categoryName,\n      selectedRowNames: [rowName],\n    })\n  },\n  hideSample: (categoryName, rowName, sample, numSelectedSamplesInRow) => {\n    if (numSelectedSamplesInRow <= 1) {\n      // if the last sample is being hidden, hide the row as well\n      dispatch({\n        type: 'REMOVE_SELECTED_ROW_NAMES',\n        categoryName,\n        selectedRowNames: [rowName],\n      })\n    }\n\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLES',\n      categoryName,\n      selectedSamplesByRowName: {\n        [rowName]: [sample],\n      },\n    })\n  },\n  updateSampleSettings: (categoryName, rowName, sample, newSettings) => {\n    dispatch({\n      type: 'UPDATE_SAMPLE_SETTINGS',\n      categoryName,\n      sampleSettingsByRowNameAndSampleName: {\n        [rowName]: {\n          [sample]: newSettings,\n        },\n      },\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedDataPanel)\n","/* eslint-disable no-multiple-empty-lines */\n\n/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [...action.values] // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [...state, ...action.values]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter((v) => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return { ...state, isLoading: true }\n\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return { ...state, isLoading: false, errorMessage: action.error }\n\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","/* eslint-disable no-multiple-empty-lines */\n\nimport { createObjectsByIdReducer } from './reducerFactories'\n\n\n// actions\nconst UPDATE_MODAL_STATE = 'UPDATE_MODAL_STATE'\n\n// action creators\nexport const openModal = (modalName) => (dispatch) => (\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: true } } })\n)\n\nexport const closeModal = (modalName, confirmed) => (dispatch, getState) => {\n  if (getState().modals[modalName].confirmOnClose && !confirmed) {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: true } } })\n  } else {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: false, confirming: false, confirmOnClose: null } } })\n  }\n}\n\n// root reducer\nexport default {\n  modals: createObjectsByIdReducer(UPDATE_MODAL_STATE),\n}\n\n// basic selectors\nexport const getModalOpen = (state, modalName) => state.modals[modalName] && state.modals[modalName].open\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-multiple-empty-lines */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { getModalOpen, openModal, closeModal } from '../redux/utils/modalReducer'\n\nexport const ButtonLink = styled(Button).attrs({ basic: true })`\n  &.ui.button.basic {\n    white-space: nowrap;\n    border: none;\n    padding: ${(props) => props.padding || 0};\n    color: ${(props) => props.color || '#4183C4'} !important;\n    text-decoration: none;\n    font-weight: ${(props) => props.fontWeight || 'inherit'};\n    box-shadow: none !important;\n    user-select: auto;\n    \n    &:hover, &:focus, &:active {\n      color: #1e70bf !important;\n      background: transparent !important;\n    }\n    \n    &[class*=\"right labeled\"].icon {\n      padding-left: 0 !important;\n      padding-right: 2.1em !important;\n      \n      > .icon {\n        background-color: initial;\n      }\n    }\n  }\n`\n\nconst ContainerDiv = styled.div`\n  float: right;\n  padding: 0px 20px 20px 20px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px !important;\n  width: 100px;\n`\n\n\nclass CustomModal extends React.PureComponent\n{\n  handleClose = () => {\n    let doClose = true\n    if (this.props.handleClose) {\n      doClose = this.props.handleClose()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  handleSave = () => {\n    let doClose = true\n    if (this.props.handleSave) {\n      doClose = this.props.handleSave()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  render() {\n    const trigger = this.props.trigger ? React.cloneElement(this.props.trigger, { onClick: this.props.open }) : null\n    return (\n      <Modal open={this.props.isOpen} trigger={trigger} onClose={this.handleClose} size={this.props.size}>\n        <Modal.Header>\n          {this.props.title}\n          <ButtonLink floated=\"right\" onClick={this.handleClose} icon={<Icon name=\"remove\" color=\"grey\" />} />\n        </Modal.Header>\n        <Modal.Content>\n          {this.props.children}\n        </Modal.Content>\n        <ContainerDiv>\n          <StyledButton tabIndex={0} onClick={this.handleClose} type=\"button\">Cancel</StyledButton>\n          <StyledButton tabIndex={0} onClick={this.handleSave} type=\"submit\" color=\"blue\">{ this.props.handleSave ? 'Save' : 'Ok' }</StyledButton>\n        </ContainerDiv>\n      </Modal>\n    )\n  }\n}\n\nCustomModal.defaultProps = {\n  size: 'small',\n}\n\nCustomModal.propTypes = {\n  trigger: PropTypes.node,\n  title: PropTypes.string,\n  handleSave: PropTypes.func,\n  handleClose: PropTypes.func,\n  size: PropTypes.oneOf(['small', 'large', 'fullscreen']),\n  isOpen: PropTypes.bool,\n  open: PropTypes.func,\n  close: PropTypes.func,\n  children: PropTypes.node,\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  isOpen: getModalOpen(state, ownProps.modalName),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: (e) => {\n      e.preventDefault()\n      dispatch(openModal(ownProps.modalName))\n    },\n    close: () => {\n      dispatch(closeModal(ownProps.modalName, true))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-multiple-empty-lines */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Form, TextArea } from 'semantic-ui-react'\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n`\n\nclass EditLocusListButtonAndModal extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    const {\n      locusList,\n    } = this.props\n\n    this.textAreaValue = (locusList || []).join('\\n') // TextArea refs don't work - probably because its a pure component, so use this hack\n  }\n\n  render = () => {\n    const {\n      locusList,\n      name,\n      setLocusList,\n    } = this.props\n\n    const title = `Locus List - ${name}`\n\n    return (\n      <Modal\n        title={title}\n        size=\"large\"\n        modalName={title}\n        trigger={\n          <LinkButton>\n            {\n              (locusList || []).length > 0\n                ? <div><br />Edit Locus List</div>\n                : <div>Add Locus List To Side Bar</div>\n            }\n          </LinkButton>\n        }\n        handleSave={() => {\n          const newLocusList = this.textAreaValue.split(/[,\\s]+/).filter(Boolean)\n          setLocusList(newLocusList)\n\n          return true\n        }}\n      >\n        <Form>\n          <Form.Field\n            control={TextArea}\n            style={{ minHeight: '300px' }}\n            defaultValue={this.textAreaValue}\n            onKeyUp={(e) => { this.textAreaValue = e.target.value }}\n            placeholder=\"Enter genomic positions, intervals, and/or gene names separated by commas, spaces, or new lines. &#10;\n              These can be in any format recognized by the IGV search bar. &#10;\n              For example: DMD, ENST00000589830, chr1:55516888, 2:152341851-152591002\"\n          />\n        </Form>\n        <br />\n        <b><i>NOTE:</i></b> This locus list will be saved across page refreshes in this browser, &nbsp;\n        but will not be recorded in the page url like other settings.&nbsp;\n        Sharing or bookmarking this page won&apos;t include the contents of this list.\n      </Modal>)\n  }\n}\n\nEditLocusListButtonAndModal.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocusList: PropTypes.func,\n}\n\nconst EditLocusList = ({ name, locusList, setLocus, setLocusList }) => (\n  <div>\n    {\n      locusList.map((locus, i) => <div key={`${locus} ${i}`}>{i + 1}. &nbsp; <LinkButton onClick={() => { setLocus(locus) }}>{locus}</LinkButton></div>)\n    }\n    <EditLocusListButtonAndModal name={name} locusList={locusList} setLocusList={setLocusList} />\n  </div>)\n\n\nEditLocusList.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n}\n\nexport default EditLocusList\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/self-closing-comp */\n/* eslint-disable object-shorthand */\n/* eslint-disable no-else-return */\n/* eslint-disable react/no-array-index-key */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Form, Icon, Message, Popup, TextArea } from 'semantic-ui-react'\n\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst ExampleDiv = styled.div`\n  font-family: monospace;\n  margin: 20px 30px;\n  padding: 10px;\n  background-color: #F7F7F7;\n  white-space: nowrap;\n`\n\nconst ExamplePath = styled.span`\n  font-family: monospace;\n  background-color: #F7F7F7;\n`\n\nconst StyledPopup = styled(Popup).attrs({ position: 'right center' })`\n`\n\nexport const SUPPORTED_FILE_EXTENSIONS = {\n  '.bigWig': 'coverage',\n  '.bw': 'coverage',\n  '.junctions.bed': 'junctions',\n  '.spliceJunctions.bed': 'junctions',\n  '.junctions.bed.gz': 'junctions',\n  '.spliceJunctions.bed.gz': 'junctions',\n\n  '.bam': 'bam',\n  '.cram': 'bam',\n\n  '.vcf': 'vcf',\n  '.vcf.gz': 'vcf',\n\n  '.wig': 'wig',\n  '.bedGraph': 'wig',\n\n  '.gcnv.bed': 'gcnv_bed',\n  '.gcnv.bed.gz': 'gcnv_bed',\n\n  '.bed': 'bed',\n  '.bed.gz': 'bed',\n  '.gff3': 'gff',\n  '.gtf': 'gtf',\n  '.gtf.gz': 'gtf',\n  '.genePred': 'genePred',\n  '.bigBed': 'bigBed',\n}\n\nclass AddRowsButtonAndModal extends React.PureComponent {\n\n  getInitialState = () => {\n    return {\n      textAreaValue: '',\n      warningMessage: null,\n      errorMessage: null,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = this.getInitialState()\n  }\n\n  parseTextAreaValueToRows = (textAreaValue) => {\n    if (!textAreaValue.trim()) {\n      return { rows: [], errorMessage: null }\n    }\n\n    let errorMessage = null\n    const invalidPaths = []\n    const dataPaths = textAreaValue.split(/[,\\s]+/).filter(Boolean)\n\n    const newRowsByRowName = dataPaths.reduce((acc, dataPath) => {\n      const pathTokens = dataPath.split('/')\n      const fileName = pathTokens[pathTokens.length - 1]\n      const matchingExtensions = Object.keys(SUPPORTED_FILE_EXTENSIONS).filter((ext) => fileName.endsWith(ext))\n      if (matchingExtensions.length === 0) {\n        invalidPaths.push(dataPath)\n      } else {\n        const ext = matchingExtensions[0]\n        const filePrefix = fileName.replace(ext, '')\n        if (!acc[filePrefix]) {\n          acc[filePrefix] = { data: [] }\n        }\n\n        acc[filePrefix].name = filePrefix\n        acc[filePrefix].data.push(\n          { type: SUPPORTED_FILE_EXTENSIONS[ext], url: dataPath },\n        )\n      }\n      return acc\n    }, {})\n\n    if (invalidPaths.length > 0) {\n      errorMessage = `These paths have file suffixes that are not recognized: ${invalidPaths.join(', ')}`\n    }\n\n    return { newRows: Object.values(newRowsByRowName), errorMessage }\n  }\n\n  handleModalSave = () => {\n    const {\n      addRows,\n    } = this.props\n\n    const {\n      textAreaValue,\n    } = this.state\n\n    const { newRows, errorMessage } = this.parseTextAreaValueToRows(textAreaValue)\n    if (errorMessage) {\n      this.setState({ errorMessage: errorMessage })\n      return false\n    } else {\n      addRows(newRows)\n      this.setState(this.getInitialState())\n      return true\n    }\n  }\n\n  handleModalClose = () => {\n    this.setState(this.getInitialState())\n    return true\n  }\n\n  render = () => {\n    const {\n      title,\n      trigger,\n    } = this.props\n\n    const {\n      textAreaValue,\n      warningMessage,\n      errorMessage,\n    } = this.state\n\n    const fullTitle = `${title} Rows`\n\n    return (\n      <Modal\n        title={fullTitle}\n        size=\"large\"\n        modalName={fullTitle}\n        trigger={trigger}\n        handleSave={this.handleModalSave}\n        handleClose={this.handleModalClose}\n      >\n        <div>\n          Enter google bucket path(s) for data files: &nbsp;\n          <StyledPopup trigger={<Icon style={{ margin: '10px 0px' }} name=\"question circle outline\" />} content={\n            <div>\n              <b>Format</b>:<br />\n              <br />\n              Enter a list of data file paths separated by commas, spaces or new lines. <br />\n              <br />\n              Example:<br />\n              <ExampleDiv>\n                gs://your-bucket/dir/sample-name1.bigWig <br />\n                gs://your-bucket/dir/sample2.bigWig <br />\n                gs://your-bucket/dir/sample-name1.junctions.bed.gz <br />\n                gs://your-bucket/dir/sample-name1.bam <br />\n                gs://your-bucket/dir/sample2.junctions.bed.gz <br />\n              </ExampleDiv>\n              Paths that have the same prefix (eg. <ExamplePath>gs://your-bucket/dir/sample-name1</ExamplePath> above) will be interpreted as different data types from the same sample.<br />\n              The order of paths doesn&apos;t matter.<br />\n              <br />\n              IGV.js track types will be inferred from file extensions as follows:<br />\n              <div style={{ margin: '10px 30px' }}>\n                <table>\n                  <tbody>\n                    <tr><td> <b> File Extension </b> </td><td> <b>IGV.js Track Type</b> </td></tr>\n                    {Object.entries(SUPPORTED_FILE_EXTENSIONS).filter(([ext]) => !ext.endsWith('.bed')).map(\n                      ([ext, fileType], i) => <tr key={`${ext} ${fileType} ${i}`}><td>{ext}</td><td>{fileType}</td></tr>,\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          }\n          />\n          <br />\n        </div>\n        <Form>\n          <TextArea\n            style={{ minHeight: '300px' }}\n            value={textAreaValue}\n            onChange={(e) => {\n              this.setState({ textAreaValue: e.target.value })\n            }}\n            placeholder=\"Enter file path(s)\"\n          >\n          </TextArea>\n        </Form>\n\n        <br />\n        <b><i>NOTE:</i></b> These paths will be saved across page refreshes in this browser, but will not be recorded in the page url like other settings. Sharing or bookmarking this page won&apos;t include these paths.\n        {\n          warningMessage && (\n          <Message color=\"yellow\">\n            {warningMessage}\n          </Message>)\n        }\n        {\n          errorMessage && (\n          <Message color=\"red\">\n            {errorMessage}\n          </Message>)\n        }\n      </Modal>)\n  }\n}\n\nAddRowsButtonAndModal.propTypes = {\n  title: PropTypes.string,\n  addRows: PropTypes.func,\n  trigger: PropTypes.node,\n}\n\nconst AddRows = ({ category, addRows }) => (\n  <div>\n    <AddRowsButtonAndModal\n      title={`Add ${category.categoryName}`}\n      categoryName={category.categoryName}\n      addRows={(rows) => addRows(category.categoryName, rows)}\n      trigger={<LinkButton>Add {category.rows.length === 0 ? category.categoryName : null} Rows</LinkButton>}\n    />\n  </div>)\n\nAddRows.propTypes = {\n  category: PropTypes.object,\n  addRows: PropTypes.func,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addRows: (categoryName, rows) => {\n    dispatch({\n      type: 'ADD_ROWS',\n      categoryName: categoryName,\n      rows: rows,\n    })\n  },\n})\n\nexport default connect(null, mapDispatchToProps)(AddRows)\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/require-optimization */\n/* eslint-disable no-multiple-empty-lines */\n\nimport _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Search } from 'semantic-ui-react'\nimport { CategoryH3 } from './SideBarUtils'\nimport {\n  getRowsInCategories,\n  getSelectedRowNamesByCategoryName,\n  getSelectedSamplesByCategoryNameAndRowName,\n} from '../redux/selectors'\n\nconst SearchPanelContainer = styled.div`\n  margin: 5px 0px;\n`\n\nconst StyledSearch = styled(Search)`\n  margin: 13px 0px; \n  .prompt {\n    border-radius: 2px !important;\n    width: 155px;\n  }\n  \n  input {\n      max-width: none !important;\n      padding: 5px !important;\n  }\n  \n  .input {\n    -webkit-box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n    -moz-box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n    box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n  }\n  \n  .results {\n      min-width: max-content;\n  }\n\n  .red-text {\n    .title {\n      color: #CC0000 !important;\n      font-weight: 500 !important;\n     }\n  }\n`\n\nconst MAX_AUTOCOMPLETE_RESULTS = 12\nconst INITIAL_STATE = { isLoading: false, results: [], value: '' }\n\nclass SearchRows extends React.Component {\n\n  constructor() {\n    super()\n    this.state = INITIAL_STATE\n  }\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: '' })\n\n    const idTokens = result.id.split('!!')\n    const action = idTokens[0]\n    const categoryName = idTokens[1]\n    const rowName = idTokens[2]\n    const sampleName = idTokens[3]\n\n    if (sampleName) {\n      if (action === 'ADD') {\n        this.props.updateSelectedRowNames(action, categoryName, [rowName])\n      } else if (this.getSelectedSamplesForRow(categoryName, rowName).length <= 1) {\n        this.props.updateSelectedRowNames(action, categoryName, [rowName])\n      }\n      this.props.updateSelectedSamples(action, categoryName, { [rowName]: [sampleName] })\n    } else {\n      this.props.updateSelectedRowNames(action, categoryName, [rowName])\n    }\n  }\n\n  getSelectedRowNames = (categoryName) => (this.props.selectedRowNamesByCategoryName[categoryName] || [])\n\n  isRowSelected = (categoryName, rowName) => this.getSelectedRowNames(categoryName).includes(rowName)\n\n  getSelectedSamplesByRowName = (categoryName) => ((this.props.selectedSamplesByCategoryNameAndRowName[categoryName] || {}).selectedSamples || {})\n\n  getSelectedSamplesForRow = (categoryName, rowName) => (this.getSelectedSamplesByRowName(categoryName)[rowName] || [])\n\n  isSampleSelected = (categoryName, rowName, sample) => this.getSelectedSamplesForRow(categoryName, rowName).includes(sample)\n\n  addRowsToHide = (resultsByCategoryName, resultsCounter) => {\n    Object.keys(this.props.selectedRowNamesByCategoryName).forEach((categoryName) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      this.props.selectedRowNamesByCategoryName[categoryName].forEach((rowName) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n        const newResult = { action: 'REMOVE', categoryName, rowName }\n        if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n          resultsByCategoryName[categoryName].push(newResult)\n          resultsCounter += 1\n        }\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addSamplesToHide = (resultsByCategoryName, resultsCounter) => {\n    Object.keys(this.props.selectedSamplesByCategoryNameAndRowName).forEach((categoryName) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      Object.keys(this.getSelectedSamplesByRowName(categoryName)).forEach((rowName) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS || !this.isRowSelected(categoryName, rowName)) return\n        this.getSelectedSamplesForRow(categoryName, rowName).forEach((sample) => {\n          if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = { action: 'REMOVE', categoryName, rowName, sample }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        })\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addMatchingSamplesFromRow = (categoryName, row, inputStringRegExp, resultsByCategoryName, resultsCounter) => {\n    if (!row.data) {\n      return resultsCounter\n    }\n\n    const dataItemsWithSamples = row.data.filter((data) => data.samples && data.samples.length > 0)\n    if (dataItemsWithSamples.length > 1) {\n      console.warn('Found row with multiple data items each of which has a samples array. This may behave unexpectedly if there are duplicate samples')\n    }\n\n    //add samples with matching names\n    dataItemsWithSamples.forEach((data) => {\n      (data.samples || []).forEach((sample) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        if (inputStringRegExp.test(sample)) {\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = {\n            action: this.isRowSelected(categoryName, row.name) && this.isSampleSelected(categoryName, row.name, sample) ? 'REMOVE' : 'ADD',\n            categoryName,\n            rowName: row.name,\n            sample,\n          }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        }\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addMatchingRowsAndSamples = (inputStringRegExp, resultsByCategoryName, resultsCounter) => {\n    const matchingRowsByCategoryName = {} //used later to add samples from this row\n    this.props.rowsInCategories.forEach((category) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      const { categoryName } = category\n      category.rows.forEach((row) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        //add rows with matching names\n        if (inputStringRegExp.test(row.name)) {\n          matchingRowsByCategoryName[categoryName] = matchingRowsByCategoryName[categoryName] || []\n          matchingRowsByCategoryName[categoryName].push(row)\n\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = {\n            action: this.isRowSelected(categoryName, row.name) ? 'REMOVE' : 'ADD',\n            categoryName,\n            rowName: row.name,\n          }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) { //avoid duplicates\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        }\n\n        resultsCounter = this.addMatchingSamplesFromRow(categoryName, row, inputStringRegExp, resultsByCategoryName, resultsCounter)\n\n      })\n    })\n\n    Object.entries(matchingRowsByCategoryName).forEach(([categoryName, rows]) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n      rows.forEach((row) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        resultsCounter = this.addMatchingSamplesFromRow(categoryName, row, /.*/, resultsByCategoryName, resultsCounter)\n      })\n    })\n\n    return resultsCounter\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) {\n        return this.setState(INITIAL_STATE)\n      }\n\n      const inputStringRegExp = new RegExp(_.escapeRegExp(this.state.value), 'i')\n\n      const resultsByCategoryName = {}\n      let resultsCounter = 0\n\n      // search actions\n      if (inputStringRegExp.test('Hide')) {\n        resultsCounter = this.addRowsToHide(resultsByCategoryName, resultsCounter)\n      }\n\n      if (inputStringRegExp.test('Hide') || inputStringRegExp.test('Hide sample')) {\n        // hide samples\n        resultsCounter = this.addSamplesToHide(resultsByCategoryName, resultsCounter)\n      }\n\n      // search rows\n      this.addMatchingRowsAndSamples(inputStringRegExp, resultsByCategoryName, resultsCounter)\n\n      const useCategories = this.props.rowsInCategories.length > 1\n      const results = useCategories ? {} : []\n      Object.keys(resultsByCategoryName).forEach((categoryName) => {\n        if (useCategories) {\n          results[categoryName] = { name: categoryName, results: [] }\n        }\n        const resultsArray = useCategories ? results[categoryName].results : results\n        resultsByCategoryName[categoryName].forEach((item) => {\n          if (item.sample) {\n            const actionLabel = item.action === 'ADD' ? 'Show sample' : 'Hide sample'\n            resultsArray.push({\n              id: `${item.action}!!${categoryName}!!${item.rowName}!!${item.sample}`,\n              title: `${actionLabel} ${item.rowName} > ${item.sample}`,\n              className: item.action !== 'ADD' ? 'red-text' : null,\n            })\n          } else {\n            const actionLabel = item.action === 'ADD' ? 'Show' : 'Hide'\n            resultsArray.push({\n              id: `${item.action}!!${categoryName}!!${item.rowName}`,\n              title: `${actionLabel} ${item.rowName}`,\n              className: item.action !== 'ADD' ? 'red-text' : null,\n            })\n          }\n        })\n      })\n\n      return this.setState({\n        isLoading: false,\n        results,\n      })\n    }, 1)\n  }\n\n  render = () => {\n    const { isLoading, value, results } = this.state\n\n    return (\n      <SearchPanelContainer>\n        <CategoryH3>Select Data</CategoryH3>\n        <StyledSearch\n          category={this.props.rowsInCategories.length > 1}\n          loading={isLoading}\n          onResultSelect={this.handleResultSelect}\n          onFocus={this.handleSearchChange}\n          onSearchChange={this.handleSearchChange}\n          placeholder=\"Select data\"\n          results={results}\n          value={value}\n        />\n      </SearchPanelContainer>)\n  }\n}\n\nSearchRows.propTypes = {\n  rowsInCategories: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n  updateSelectedSamples: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  rowsInCategories: getRowsInCategories(state),\n  selectedRowNamesByCategoryName: getSelectedRowNamesByCategoryName(state),\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSelectedRowNames: (actionType, categoryName, selectedRowNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_ROW_NAMES`,\n      categoryName,\n      selectedRowNames,\n    })\n  },\n\n  updateSelectedSamples: (actionType, categoryName, selectedSamplesByRowName) => {\n    dispatch({\n      type: `${actionType}_SELECTED_SAMPLES`,\n      categoryName,\n      selectedSamplesByRowName,\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchRows)\n","/* eslint-disable no-multiple-empty-lines */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/no-danger */\n\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport DOMPurify from 'dompurify'\nimport { CategoryH3, OptionDiv, OptionInputDiv, StyledPopup } from './SideBarUtils'\nimport SelectedDataPanel from './SelectedDataPanel'\nimport EditLocusList from './EditLocusList'\nimport AddRows from './AddRows'\nimport SearchRows from './SearchRows'\n\nimport {\n  getLeftSideBarLocusList,\n  getRowsInCategories,\n  getDataTypesUsersCanToggle,\n  getEnabledDataTypes,\n  getSelectedRowNamesByCategoryName,\n} from '../redux/selectors'\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst DataTypeIcon = styled.div.attrs({ name: 'stop' })`\n  color: ${(props) => props.color};\n  background-color: ${(props) => props.color};\n  border: 3px solid ${(props) => props.color};\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n  z-index: 100000;\n`\n\nconst dataTypeIconColors = {\n  junctions: '#B0B0EC',\n  coverage: '#B5D29A',\n  alignment: '#5DB6E9',\n  vcf: '#E6A01B',\n  gcnv_bed: '#AA3333',\n  default: '#000000',\n}\n\nconst dataTypeLabels = {\n  coverage: 'Coverage',\n  junctions: 'Splice Junctions',\n  vcf: 'Variants (VCF)',\n  gcnv_bed: 'gCNV',\n  alignment: 'Reads (BAM)',\n  bed: 'Annotations (BED)',\n  gff3: 'Annotations (GFF3)',\n  gtf: 'Annotations (GTF)',\n  genePred: 'Annotations (genePred)',\n  bigBed: 'Annotations (bigBed)',\n}\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst RowColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n  z-inex: 100000;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\n/*\nconst SelectedDataSectionHeading = styled.div`\n  font-weight: 700;\n  margin: 8px 0px;\n`\n*/\n\nconst ShowTrackTypesPanel = ({ dataTypesUsersCanToggle, enabledDataTypes, updateDataTypesToShow }) => {\n  if (dataTypesUsersCanToggle.length < 2) {\n    return null\n  }\n  const checkBoxes = [...dataTypesUsersCanToggle].map((dataType, i) => {\n    const label = dataTypeLabels[dataType] || (dataType.charAt(0).toUpperCase() + dataType.slice(1)) //to Title case\n    return (\n      <OptionDiv key={`${dataType} ${i}`}>\n        <Checkbox label={`${label.toLocaleString()}`} checked={enabledDataTypes.includes(dataType)} onChange={(e, data) => updateDataTypesToShow(data.checked ? 'ADD' : 'REMOVE', [dataType])} />\n        <RowColorLabelsContainer><Popup on=\"click\" content={`This stripe marks rows that have ${label.toLowerCase()} data. Use the checkbox on the left to show or hide ${label.toLowerCase()} tracks for all rows selected below.`} position=\"right center\" trigger={<DataTypeIcon color={dataTypeIconColors[dataType] || dataTypeIconColors.default} />} /></RowColorLabelsContainer>\n      </OptionDiv>)\n  })\n\n  return (\n    <div>\n      <CategoryH3>Show Track Types</CategoryH3>\n      {checkBoxes}\n    </div>)\n}\n\nShowTrackTypesPanel.propTypes = {\n  dataTypesUsersCanToggle: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  updateDataTypesToShow: PropTypes.func,\n}\n\n\nconst RowColorLabelsWithPopup = ({ row }) => <Popup\n    flowing\n    content={\n      <table>\n        <tbody>\n          {\n            (row.data || []).map((d, i) =>\n                <tr key={`${d.url} ${d.type} ${i}`}>\n                  <td style={{ paddingRight: '10px' }}>\n                    <b>{d.type && (dataTypeLabels[d.type] || d.type.toUpperCase())}:</b>\n                  </td>\n                  <td>\n                    <Popup content=\"Copy url\" trigger={\n                      <Icon name=\"copy outline\" style={{ cursor: 'pointer', paddingRight: '10px' }}\n                        onClick={(e) => { navigator.clipboard.writeText(d.url); e.target.classList.add('outline') }}\n                        onMouseDown={(e) => console.log(e.target.classList.remove('outline'))}\n                      />\n                    }\n                    />\n                  </td>\n                  <td>\n                    <NoWrapDiv>{d.url}</NoWrapDiv>\n                  </td>\n                  <td style={{ color: 'gray', whiteSpace: 'nowrap', paddingLeft: '15px' }}>\n                    {d.samples ? `(${d.samples.length} samples)` : null}\n                  </td>\n                </tr>,\n            )\n          }\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    on=\"click\"\n    trigger={\n      <RowColorLabelsContainer>\n        {\n          (row.data || []).map((d, i) => <DataTypeIcon key={`${d.url} ${d.type} ${i}`} color={dataTypeIconColors[d.type] || dataTypeIconColors.default} />)\n        }\n      </RowColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n/>\n\n\nRowColorLabelsWithPopup.propTypes = {\n  row: PropTypes.object,\n}\n\nconst CategoryPanel = ({ category, updateSelectedRowNames }) => (\n  <div>\n    <CategoryH3>{category.categoryName}</CategoryH3>\n    {\n      category.rows.length >= 12 && <CategoryDetails>{`(N=${category.rows.length}) `}</CategoryDetails>\n    }\n    {\n      category.rows.length > 0 && (\n      <div>\n        <LinkButton onClick={\n          (e) => {\n            e.preventDefault()\n            updateSelectedRowNames('SET', category.categoryName, [])\n          }\n        }\n        >\n          Uncheck All\n        </LinkButton>\n      </div>)\n    }\n  </div>)\n\nCategoryPanel.propTypes = {\n  category: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n}\n\nconst RowsPanel = ({ rowsInCategories, selectedRowNamesByCategoryName, updateSelectedRowNames }) => (\n  rowsInCategories.map((category, i) => (\n    <div key={`${category.categoryName} ${i}`}>\n      <CategoryPanel category={category} updateSelectedRowNames={updateSelectedRowNames} />\n      {\n        category.rows.map((row, j) => {\n          const selectedRowNames = selectedRowNamesByCategoryName[category.categoryName] || []\n          return <RowPanel key={`${row.name} ${j}`} row={row} categoryName={category.categoryName} selectedRowNames={selectedRowNames} updateSelectedRowNames={updateSelectedRowNames} />\n        })\n      }\n      { i === rowsInCategories.length - 1 ? <AddRows category={category} /> : null }\n    </div>),\n  ))\n\nRowsPanel.propTypes = {\n  rowsInCategories: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n}\n\n\nconst RowPanel = ({ row, categoryName, selectedRowNames, updateSelectedRowNames }) => (\n  <NoWrapDiv>\n    <Checkbox\n      label={row.name}\n      checked={selectedRowNames.includes(row.name)}\n      data-row={row.name}\n      onChange={(e, data) => updateSelectedRowNames(data.checked ? 'ADD' : 'REMOVE', categoryName, [data['data-row']])}\n    />\n    <RowDetails row={row} />\n    <RowColorLabelsWithPopup row={row} />\n  </NoWrapDiv>)\n\nRowPanel.propTypes = {\n  row: PropTypes.object,\n  categoryName: PropTypes.string,\n  selectedRowNames: PropTypes.array,\n  updateSelectedRowNames: PropTypes.func,\n}\n/*\nconst DataSubrows = ({ data }) => {\n  if (!data) {\n    return null\n  }\n\n  const items = []\n  data.filter((d) => d.type === 'gcnv_bed' && d.samples).forEach((d) => {\n    d.samples.forEach((sample) => {\n      items.push(<Checkbox\n        key={sample}\n        label={sample}\n        checked={false}\n        onChange={(e, _) => console.log(e, _)}\n      />)\n    })\n  })\n\n  return items\n}\n\nDataSubrows.propTypes = {\n  data: PropTypes.array,\n}\n*/\n\nconst RowDetails = ({ row }) => {\n  return (\n    row.description\n      ? <StyledPopup\n        flowing\n        content={row.description && <div dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(row.description) }} />}\n        position=\"right center\"\n        on=\"click\"\n        trigger={\n          <Icon style={{ marginLeft: '10px', cursor: 'pointer' }} name=\"question circle outline\" />\n        }\n      />\n      : null)\n}\n\nRowDetails.propTypes = {\n  row: PropTypes.object,\n}\n\nclass LeftSideBar extends React.PureComponent\n{\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    const {\n      locusList,\n      rowsInCategories,\n      dataTypesUsersCanToggle,\n      enabledDataTypes,\n      selectedRowNamesByCategoryName,\n      setLocus,\n      setLocusList,\n      updateDataTypesToShow,\n      updateSelectedRowNames,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList name=\"Left Side Bar\" locusList={locusList} setLocus={setLocus} setLocusList={setLocusList} />\n        <ShowTrackTypesPanel\n          dataTypesUsersCanToggle={dataTypesUsersCanToggle}\n          enabledDataTypes={enabledDataTypes}\n          updateDataTypesToShow={updateDataTypesToShow}\n        />\n        <SearchRows />\n        <OptionInputDiv>\n          {/*<SelectedDataSectionHeading>Selected data:</SelectedDataSectionHeading>*/}\n          <SelectedDataPanel />\n        </OptionInputDiv>\n        <RowsPanel\n          rowsInCategories={rowsInCategories}\n          selectedRowNamesByCategoryName={selectedRowNamesByCategoryName}\n          updateSelectedRowNames={updateSelectedRowNames}\n        />\n      </div>)\n  }\n}\n\nLeftSideBar.propTypes = {\n  locusList: PropTypes.array,\n  rowsInCategories: PropTypes.array,\n  dataTypesUsersCanToggle: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n  updateDataTypesToShow: PropTypes.func,\n  updateSelectedRowNames: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getLeftSideBarLocusList(state),\n  rowsInCategories: getRowsInCategories(state),\n  dataTypesUsersCanToggle: getDataTypesUsersCanToggle(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n  selectedRowNamesByCategoryName: getSelectedRowNamesByCategoryName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_LEFT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateDataTypesToShow: (actionType, dataTypes) => {\n    dispatch({\n      type: `${actionType}_DATA_TYPES_TO_SHOW`,\n      values: dataTypes,\n    })\n  },\n  updateSelectedRowNames: (actionType, categoryName, selectedRowNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_ROW_NAMES`,\n      categoryName,\n      selectedRowNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport { CategoryH3, OptionDiv, OptionInputDiv, OptionInput } from '../SideBarUtils'\nimport { getBamOptions } from '../../redux/selectors'\n\nconst editedFields = {}\n\nconst BamOptionsPanel = ({ bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ ...bamOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n\n  const handleApplyButton = () => {\n    updateBamOptions({ ...bamOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>BAM Track <br />Options</CategoryH3><br />\n      <OptionDiv><Checkbox label=\"View as pairs\" checked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"Show soft-clips\" checked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n      <OptionDiv>\n        Color by:\n        <select value={bamOptions.colorBy} onChange={(e) => updateBamOptions({ colorBy: e.target.value })}>\n          <option value=\"strand\">Strand</option>\n          <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n          <option value=\"pairOrientation\">Pair orientation</option>\n          <option value=\"fragmentLength\">Insert size (TLEN)</option>\n          <option value=\"none\">None</option>\n        </select>\n      </OptionDiv>\n      <OptionInputDiv>Track height: <OptionInput key={`track-height-${bamOptions.trackHeight}`} type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n      <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n    </div>)\n}\n\nBamOptionsPanel.propTypes = {\n  bamOptions: PropTypes.object,\n  updateBamOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BamOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { CategoryH3, OptionDiv } from '../SideBarUtils'\nimport { getVcfOptions } from '../../redux/selectors'\n\nconst VcfOptionsPanel = ({ vcfOptions, updateVcfOptions }) => {\n  return (\n    <div>\n      <CategoryH3>VCF Track <br />Options</CategoryH3><br />\n      <OptionDiv>\n        Display mode: &nbsp;\n        <select value={vcfOptions.displayMode} onChange={(e) => updateVcfOptions({ displayMode: e.target.value })}>\n          <option value=\"COLLAPSED\">Collapse</option>\n          <option value=\"SQUISHED\">Squish</option>\n          <option value=\"EXPANDED\">Expand</option>\n        </select>\n      </OptionDiv>\n    </div>)\n}\n\nVcfOptionsPanel.propTypes = {\n  vcfOptions: PropTypes.object,\n  updateVcfOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  vcfOptions: getVcfOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VcfOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable no-multiple-empty-lines */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Checkbox, Icon, Radio } from 'semantic-ui-react'\nimport { CategoryH3, ColorLegendIcon, OptionDiv, OptionInputDiv, OptionInput, StyledPopup } from '../SideBarUtils'\nimport { SJ_MOTIFS, SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../../constants'\nimport { getSjOptions } from '../../redux/selectors'\n\n\nexport const OptionBox = styled.div`\n  margin-top: 5px;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if (sjOptions.colorBy === 'strand') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n        <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'motif') {\n    // IGV.js Dark2 color palette\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'numUniqueReads' || sjOptions.colorBy === 'numReads') {\n    return (\n      <div>\n        # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n        &nbsp;≤ &nbsp;\n        <OptionInput\n          type=\"text\"\n          key={`num-reads-${sjOptions.colorByNumReadsThreshold}`}\n          defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n          onKeyUp={(e) => handleTextInput(e, 'colorByNumReadsThreshold')}\n          style={{ width: '35px' }}\n        />\n        &nbsp; &lt; &nbsp;\n        <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n      </div>)\n  }\n  if (sjOptions.colorBy === 'isAnnotatedJunction') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'orange' }} /> novel junction\n      </div>)\n  }\n\n  return <div />\n}\n\nColorByLegend.propTypes = {\n  sjOptions: PropTypes.object,\n  handleTextInput: PropTypes.func,\n}\n\nconst editedFields = {}\n\nconst SpliceJunctionsOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ ...sjOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n  const handleApplyButton = () => {\n    updateSjOptions({ ...sjOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>Junctions Track Filters</CategoryH3><br />\n      <OptionBox>\n        <OptionDiv>\n          Show: <br />\n          <StyledRadio label=\"only local junctions\" name=\"minJunctionEndsVisibleButton\" checked={sjOptions.minJunctionEndsVisible === 2} onChange={(e, data) => data.checked && updateSjOptions({ minJunctionEndsVisible: 2 })} />\n          <StyledPopup\n            content=\"Only show splice junctions that start and end within the current view.\"\n            position=\"left center\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          /><br />\n          <StyledRadio label=\"semi-local junctions\" name=\"minJunctionEndsVisibleButton\" checked={sjOptions.minJunctionEndsVisible === 1} onChange={(e, data) => data.checked && updateSjOptions({ minJunctionEndsVisible: 1 })} />\n          <StyledPopup\n            content=\"Hide splice junctions that span the current view (start to the left of the current view and end to the right of it).\"\n            position=\"left center\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          /><br />\n          <StyledRadio label=\"all junctions\" name=\"minJunctionEndsVisibleButton\" checked={sjOptions.minJunctionEndsVisible === 0} onChange={(e, data) => data.checked && updateSjOptions({ minJunctionEndsVisible: 0 })} />\n          <StyledPopup\n            content=\"Show all splice junctions\"\n            position=\"left center\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>\n          Show Strands:\n          <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n          <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n          <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv><Checkbox label=\"Show known junctions\" checked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n        <OptionDiv><Checkbox label=\"Show novel junctions\" checked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <div>\n          <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n          at least <OptionInput key={`uniquely-mapped-reads-${sjOptions.minUniquelyMappedReads}`} type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={(e) => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv>Total reads:</OptionDiv>\n          at least <OptionInput key={`total-reads-${sjOptions.minTotalReads}`} type=\"text\" defaultValue={sjOptions.minTotalReads} onKeyUp={(e) => handleTextInput(e, 'minTotalReads', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv>Fraction multi-mapped:\n            <StyledPopup\n              content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n              position=\"left center\"\n              trigger={\n                <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n              }\n            />\n          </OptionDiv>\n          at most <OptionInput key={`fraction-multi-mapped-${sjOptions.maxFractionMultiMappedReads}`} type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={(e) => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value, 10))} />\n        </div>\n      </OptionBox>\n      <OptionBox>\n        <div>\n          <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n          at least <OptionInput key={`spliced-alignment-overhang-${sjOptions.minSplicedAlignmentOverhang}`} type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={(e) => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv># samples with junction:\n            <StyledPopup\n              content=\"Filter junctions based on how many samples in the batch have this junction. A sample is counted as having the junction as long as the junction is supported by at least one read.\"\n              position=\"left center\"\n              trigger={\n                <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n              }\n            />\n          </OptionDiv>\n          <OptionInput key={`samples-with-junction-more-than-${sjOptions.minSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.minSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'minSamplesWithThisJunction', parseInt(e.target.value, 10))} /> &nbsp;≤ n ≤ <OptionInput key={`samples-with-junction-less-than-${sjOptions.maxSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.maxSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'maxSamplesWithThisJunction', parseInt(e.target.value, 10))} />\n        </div>\n        <div>\n          <OptionDiv>% samples with junction:\n            <StyledPopup\n              content=\"Filter junctions based on what percentage of samples in the batch have this junction. A sample is counted as having the junction as long as the junction is supported by at least one read.\"\n              position=\"left center\"\n              trigger={\n                <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n              }\n            />\n          </OptionDiv>\n          <OptionInput key={`percent-samples-with-junction-more-than-${sjOptions.minPercentSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.minPercentSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'minPercentSamplesWithThisJunction', parseInt(e.target.value, 10))} /> &nbsp;≤ % ≤ <OptionInput key={`percent-samples-with-junction-less-than-${sjOptions.maxPercentSamplesWithThisJunction}`} type=\"text\" defaultValue={sjOptions.maxPercentSamplesWithThisJunction} onKeyUp={(e) => handleTextInput(e, 'maxPercentSamplesWithThisJunction', parseInt(e.target.value, 10))} />\n        </div>\n      </OptionBox>\n      <OptionBox>\n        <div>\n          <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n          {\n            SJ_MOTIFS.map((motif) => <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} checked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>)\n          }\n        </div>\n        <OptionInputDiv>Track height: <OptionInput key={`track-height-${sjOptions.trackHeight}`} type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n        <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n      </OptionBox>\n      <CategoryH3>Junctions Track <br />Options</CategoryH3><br />\n      <OptionBox>\n        <OptionDiv>Color by:</OptionDiv>\n        <OptionDiv>\n          <select value={sjOptions.colorBy} onChange={(e) => updateSjOptions({ colorBy: e.target.value })}>\n            <option value=\"strand\">strand</option>\n            <option value=\"motif\">donor/acceptor motif</option>\n            <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n            <option value=\"numReads\"># total reads</option>\n            <option value=\"isAnnotatedJunction\">is known junction</option>\n          </select>\n          <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction label #1:</OptionDiv>\n        <OptionDiv>\n          <StyledRadio label=\"# uniquely-mapped\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'uniqueReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'uniqueReadCount' })} />\n          <StyledRadio label=\"# total reads\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'totalReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'totalReadCount' })} />\n          <StyledRadio label=\"# samples with junction\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'numSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'numSamplesWithThisJunction' })} />\n          <StyledRadio label=\"% samples with junction\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'percentSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'percentSamplesWithThisJunction' })} />\n          <StyledRadio label=\"motif\" name=\"junctionLabelButton\" checked={sjOptions.labelWith === 'motif'} onChange={(e, data) => data.checked && updateSjOptions({ labelWith: 'motif' })} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction label #2:</OptionDiv>\n        <OptionDiv>\n          <StyledRadio label=\"none\" name=\"junctionLabel2Button\" checked={!sjOptions.labelWithInParen} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: null })} />\n          <StyledRadio label=\"# uniquely-mapped\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'uniqueReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'uniqueReadCount' })} />\n          <StyledRadio label=\"# total reads\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'totalReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'totalReadCount' })} />\n          <StyledRadio label=\"# multi-mapped\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'multiMappedReadCount'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'multiMappedReadCount' })} />\n          <StyledRadio label=\"# samples with junction\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'numSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'numSamplesWithThisJunction' })} />\n          <StyledRadio label=\"% samples with junction\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'percentSamplesWithThisJunction'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'percentSamplesWithThisJunction' })} />\n          <StyledRadio label=\"motif\" name=\"junctionLabel2Button\" checked={sjOptions.labelWithInParen === 'motif'} onChange={(e, data) => data.checked && updateSjOptions({ labelWithInParen: 'motif' })} />\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction thickness:</OptionDiv>\n        <OptionDiv>\n          <select value={sjOptions.thicknessBasedOn} onChange={(e) => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n            <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n            <option value=\"numReads\"># total reads</option>\n            <option value=\"isAnnotatedJunction\">is known junction</option>\n            <option value=\"numSamplesWithThisJunction\"># samples with this junction</option>\n          </select>\n        </OptionDiv>\n      </OptionBox>\n      <OptionBox>\n        <OptionDiv>Junction bounce height:</OptionDiv>\n        <OptionDiv>\n          <select value={sjOptions.bounceHeightBasedOn} onChange={(e) => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n            <option value=\"random\">random</option>\n            <option value=\"distance\">distance</option>\n            <option value=\"thickness\">thickness</option>\n          </select>\n        </OptionDiv>\n      </OptionBox>\n    </div>)\n}\n\nSpliceJunctionsOptionsPanel.propTypes = {\n  sjOptions: PropTypes.object,\n  updateSjOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  sjOptions: getSjOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpliceJunctionsOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n//import styled from 'styled-components'\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport { CategoryH3, OptionInputDiv, OptionInput } from '../SideBarUtils'\nimport { getGcnvOptions } from '../../redux/selectors'\n\nconst editedFields = {}\n\nconst GcnvOptionsPanel = ({ gcnvOptions, updateGcnvOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateGcnvOptions({ ...gcnvOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n\n  const handleApplyButton = () => {\n    updateGcnvOptions({ ...gcnvOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>gCNV Options</CategoryH3><br />\n      <OptionInputDiv><Checkbox label=\"Enable clicking background samples\" checked={!gcnvOptions.onlyHandleClicksForHighlightedSamples} onChange={(e, data) => updateGcnvOptions({ ...gcnvOptions, onlyHandleClicksForHighlightedSamples: !data.checked })} /></OptionInputDiv>\n      <OptionInputDiv>Y-min: <OptionInput key={`y-max-${gcnvOptions.trackMin}`} type=\"text\" defaultValue={gcnvOptions.trackMin} onKeyUp={(e) => handleTextInput(e, 'trackMin', parseInt(e.target.value, 10))} /> copies</OptionInputDiv>\n      <OptionInputDiv>Y-max: <OptionInput key={`y-max-${gcnvOptions.trackMax}`} type=\"text\" defaultValue={gcnvOptions.trackMax} onKeyUp={(e) => handleTextInput(e, 'trackMax', parseInt(e.target.value, 10))} /> copies</OptionInputDiv>\n      <OptionInputDiv>Track height: <OptionInput key={`track-height-${gcnvOptions.trackHeight}`} type=\"text\" defaultValue={gcnvOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n      <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n    </div>)\n}\n\nGcnvOptionsPanel.propTypes = {\n  gcnvOptions: PropTypes.object,\n  updateGcnvOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  gcnvOptions: getGcnvOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateGcnvOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_GCNV_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GcnvOptionsPanel)\n","/* eslint-disable no-multiple-empty-lines */\n/* eslint-disable react/jsx-indent */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport EditLocusList from './EditLocusList'\nimport BamOptionsPanel from './optionsPanels/BamOptionsPanel'\nimport VcfOptionsPanel from './optionsPanels/VcfOptionsPanel'\nimport SpliceJunctionsOptionsPanel from './optionsPanels/SpliceJunctionsOptionsPanel'\nimport GcnvOptionsPanel from './optionsPanels/GcnvOptionsPanel'\n\nimport {\n  getRightSideBarLocusList,\n  getEnabledDataTypes,\n} from '../redux/selectors'\n\nclass RightSideBar extends React.PureComponent\n{\n  render() {\n    const {\n      locusList,\n      enabledDataTypes,\n      setLocus,\n      setLocusList,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList\n          name=\"Right Side Bar\"\n          locusList={locusList}\n          setLocus={setLocus}\n          setLocusList={setLocusList}\n        />\n\n        {enabledDataTypes.includes('junctions') && <SpliceJunctionsOptionsPanel />}\n        {enabledDataTypes.includes('gcnv_bed') && <GcnvOptionsPanel />}\n        {enabledDataTypes.includes('alignment') && <BamOptionsPanel />}\n        {enabledDataTypes.includes('vcf') && <VcfOptionsPanel />}\n      </div>)\n  }\n}\n\nRightSideBar.propTypes = {\n  locusList: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getRightSideBarLocusList(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_RIGHT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable react/jsx-closing-tag-location */\n/* eslint-disable no-trailing-spaces */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Icon } from 'semantic-ui-react'\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  margin-left: 20px;\n`\n\nconst AboutLink = () => (\n  <Modal\n    title=\"About TGG Viewer\"\n    size=\"large\"\n    modalName=\"AboutModal\"\n    trigger={<LinkButton>About</LinkButton>}\n  >\n    The Translational Genomics Group (TGG) Viewer is a free, open-source web app for visualizing splice junctions, copy number, and other data\n    genome-wide using <a href=\"https://github.com/igvteam/igv.js\" target=\"_blank\">IGV.js</a><br />\n    <br />\n    <b>Updates:</b><br />\n    <br />\n    <i>9/5/2023</i> - fixed: genomic location no longer resets when a new track is added<br />\n    <br />\n    <b>Main features:</b><br />\n    <ul>\n      <li>Supports most file formats supported by IGV.js, including: .bed, .vcf, .bam, .cram, .bigWig, as well as\n        several custom formats for splice junctions (.junctions.bed.gz) and gCNV copy-number variants (.gcnv.bed.gz) </li>\n      <li>Includes custom reference tracks such as splice junctions from GTEx v8 muscle, blood, and fibroblast samples.</li>\n      <li>Supports adding gene or locus lists to left or right side bar for quick navigation across a list of regions.</li>\n      <li>Can load data files or reference tracks from any Google bucket to which you have read-access.</li>\n      <li>Retrieves just the on-screen sections of the files directly from Google buckets.</li>\n      <li>All settings, gene lists, and data paths can be exported and later restored or shared with others via a .json config file.\n        To export all current settings, click the <Icon name=\"download\" /> button, upload the .json file to github (or another public url), and then\n        to restore the settings, paste the file's URL into the Initial Settings input, and Apply. </li>\n      <li>The page url also records page settings so that they can be bookmarked or shared, but does not include gene lists.</li>\n    </ul>\n\n    <a href=\"https://github.com/broadinstitute/tgg-viewer/issues\" target=\"_blank\">Issues</a>\n    &nbsp;or <a href=\"https://github.com/broadinstitute/tgg-viewer/issues\" target=\"_blank\">Feature Requests</a>\n    &nbsp;can be submitted via <a href=\"https://github.com/broadinstitute/tgg-viewer\" target=\"_blank\">GitHub</a>.\n  </Modal>\n)\n\nexport default AboutLink\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable no-multiple-empty-lines */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getUser, getIsGoogleLoginRequired } from '../redux/selectors'\n\n\nclass UserInfo extends React.PureComponent\n{\n  render() {\n\n    const {\n      isGoogleLoginRequired,\n      user,\n    } = this.props\n\n    if (isGoogleLoginRequired) {\n      if (!user.googleUserEmail) {\n        return <div>Signing in to Google Buckets...</div>\n      }\n\n      return <div>Signed in to Google Buckets as <b>{user.googleUserEmail}</b></div>\n    }\n\n    return <div />\n  }\n}\n\nUserInfo.propTypes = {\n  isGoogleLoginRequired: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  isGoogleLoginRequired: getIsGoogleLoginRequired(state),\n  user: getUser(state),\n\n})\n\nexport default connect(mapStateToProps)(UserInfo)\n","/* eslint-disable react/jsx-one-expression-per-line */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport AboutLink from './About'\nimport UserInfo from './UserInfo'\n\nconst HeaderRow = styled(Grid.Row)`\n  color: #444;\n  margin-bottom: 5px;\n`\n\nconst Column1 = styled(Grid.Column).attrs({ width: 6 })`\n  text-align: left;\n  padding-left: 75px !important;\n`\nconst Column2 = styled(Grid.Column).attrs({ width: 10 })`\n  text-align: right;\n  padding-right: 75px !important;\n`\n\nexport default () => (\n  <Grid>\n    <HeaderRow>\n      <Column1>\n        <b>TGG Viewer </b> version <i> 9/5/2023</i>\n        <AboutLink />\n\n        {/* <a href=\"#\">Intro Video</a> &nbsp; &nbsp; */}\n      </Column1>\n      <Column2>\n        <UserInfo />\n      </Column2>\n    </HeaderRow>\n  </Grid>)\n","/* eslint-disable no-multiple-empty-lines */\n\nexport const throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable radix */\n/* eslint-disable prefer-template */\n/* eslint-disable no-else-return */\n/* eslint-disable no-multiple-empty-lines */\n\nimport _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport {\n  getGenome,\n  getLocus,\n  getTracks,\n  getSelectedSamplesByCategoryNameAndRowName,\n  getEnabledDataTypes,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  getGcnvOptions,\n} from '../redux/selectors'\nimport { throttle } from '../utils/throttle'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\n\n/**\n * Use a custom popupData function for the spliceJunction track\n */\nfunction popupData(clickState, features) {\n\n  if (!features) features = this.clickedFeatures(clickState)\n\n  let featureData = []\n  features.forEach((feature) => {\n\n    if (feature.end < clickState.genomicLocation || feature.start > clickState.genomicLocation) {\n      return\n    }\n    if (this.config.type === 'spliceJunctions') {\n      if (!feature.isVisible || !feature.attributes) {\n        return\n      }\n      featureData.push('<hr />')\n      featureData.push(\n        { name: `<b>${feature.chr}:${feature.start}-${feature.end} (${feature.strand} strand)</b>`, value: ' ' })\n\n      if (feature.attributes.annotated_junction) {\n        if (feature.attributes.annotated_junction === 'true') {\n          featureData.push({ name: 'Known Junction', value: '' })\n        } else {\n          featureData.push({ name: 'Novel Junction', value: '' })\n        }\n      }\n      featureData.push('<hr />')\n\n      featureData.push(\n        { name: (feature.end - feature.start).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','), value: 'bp length' })\n\n      if (feature.attributes.uniquely_mapped) {\n        featureData.push(\n          { name: feature.attributes.uniquely_mapped, value: 'uniquely mapped reads' })\n      }\n      if (feature.attributes.multi_mapped) {\n        featureData.push(\n          { name: feature.attributes.multi_mapped, value: 'multi-mapped reads' })\n      }\n      if (feature.attributes.uniquely_mapped && feature.attributes.multi_mapped) {\n        featureData.push(\n          { name: parseInt(feature.attributes.uniquely_mapped) + parseInt(feature.attributes.multi_mapped), value: 'total reads' })\n      }\n      if (feature.attributes.maximum_spliced_alignment_overhang) {\n        featureData.push({ name: feature.attributes.maximum_spliced_alignment_overhang, value: 'bp maximum overhang' })\n      }\n\n      if (feature.attributes.num_samples_with_this_junction) {\n        featureData.push({\n          name: feature.attributes.num_samples_with_this_junction,\n          value: (feature.attributes.num_samples_total ? `out of ${feature.attributes.num_samples_total} ` : '') + 'samples have this junction',\n        })\n        if (feature.attributes.percent_samples_with_this_junction) {\n          featureData.push({ name: feature.attributes.percent_samples_with_this_junction.toFixed(1), value: '% of samples have this junction' })\n        }\n\n      }\n      if (feature.attributes.info) {\n        featureData.push({ name: ' ', value: feature.attributes.info.replace('_', ' ') })\n      }\n\n      //add any other keys not already processed above\n      Object.keys(feature.attributes).filter((key) => ![\n        'line_width', 'color', 'left_shape', 'right_shape', 'info',\n        'annotated_junction', 'uniquely_mapped', 'multi_mapped', 'maximum_spliced_alignment_overhang',\n        'num_samples_with_this_junction', 'percent_samples_with_this_junction', 'num_samples_total',\n      ].includes(key)).forEach((key) => {\n        featureData.push({ name: key.replace(/_/g, ' '), value: feature.attributes[key].replace(/_/g, ' ') })\n      })\n\n      featureData = featureData.map((fd) => {\n        if (fd.name && fd.value) {\n          return { name: `<b>${fd.name}</b>`, value: fd.value }\n        } else {\n          return fd\n        }\n      })\n    }\n  })\n\n  return featureData\n}\n\n\nconst monkeyPatchPopupData = (track) => {\n  if (!track) {\n    console.warn('monkeyPatchPopupData: track arg is undefined')\n    return\n  }\n\n  if (track.type === 'spliceJunctions') {\n    track.popupData = popupData\n  } else if (track.type === 'merged') {\n    track.tracks.filter((subTrack) => subTrack.type === 'spliceJunctions').forEach((subTrack) => {\n      subTrack.popupData = popupData\n    })\n  }\n}\n\n\nclass IGV extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextLocusChangedEvent = false\n    this.ignoreNextTrackRemovedEvent = false\n    this.ignoreNextTrackPropsAfterOrderChangedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <div><div ref={this.setContainerElement} /></div>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    const {\n      genome,\n      locus,\n      tracks,\n      locusChangedHandler,\n      trackRemovedHandler,\n      trackOrderChangedHandler,\n    } = this.props\n\n    const igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus,\n      genome,\n      tracks,\n    }\n\n    //console.log('Calling igv.createBrowser(..)', igvBrowserOptions)\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n      window.igvBrowser = browser //for debugging\n\n      browser.trackViews.forEach((trackView) => { monkeyPatchPopupData(trackView.track) })\n\n      if (locusChangedHandler) {\n        this.browser.on('locuschange', throttle(100, (event) => {\n          if (!this.ignoreNextLocusChangedEvent) {\n            locusChangedHandler(event)\n          }\n          this.ignoreNextLocusChangedEvent = false\n        }))\n      }\n\n      if (trackRemovedHandler) {\n        this.browser.on('trackremoved', (track) => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            trackRemovedHandler(track.config.categoryName, track.config.rowName)\n          }\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n\n      if (trackOrderChangedHandler) {\n        this.browser.on('trackorderchanged', (trackNamesInOrder) => {\n          this.ignoreNextTrackPropsAfterOrderChangedEvent = true\n          trackOrderChangedHandler(trackNamesInOrder)\n        })\n      }\n    })\n  }\n\n  shouldTrackBeReloaded = (track, props, nextProps) => {\n    const {\n      selectedSamplesByCategoryNameAndRowName,\n      enabledDataTypes,\n      sjOptions,\n      vcfOptions,\n      bamOptions,\n      gcnvOptions,\n    } = props\n\n    const junctionTrackDisplaySettingsChanged = ['merged', 'wig', 'spliceJunctions'].includes(track.type) && (\n      nextProps.enabledDataTypes.includes('junctions') !== enabledDataTypes.includes('junctions')\n      || nextProps.enabledDataTypes.includes('coverage') !== enabledDataTypes.includes('coverage')\n      || nextProps.sjOptions !== sjOptions)\n    const vcfTrackDisplaySettingsChanged = track.type === 'variant' && nextProps.vcfOptions !== vcfOptions\n    const alignmentTrackDisplaySettingsChanged = track.type === 'alignment' && nextProps.bamOptions !== bamOptions\n    const gcnvTrackDisplaySettingsChanged = track.type === 'gcnv' && nextProps.gcnvOptions !== gcnvOptions\n    const gcnvTrackHighlightedSamplesChanged = track.type === 'gcnv' && (\n      !_.isEqual(\n        ((nextProps.selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).selectedSamples || {})[track.rowName],\n        ((selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).selectedSamples || {})[track.rowName])\n      || !_.isEqual(\n        ((nextProps.selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).sampleSettings || {})[track.rowName],\n        ((selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).sampleSettings || {})[track.rowName])\n    )\n\n    const result = junctionTrackDisplaySettingsChanged\n      || vcfTrackDisplaySettingsChanged\n      || alignmentTrackDisplaySettingsChanged\n      || gcnvTrackDisplaySettingsChanged\n      || gcnvTrackHighlightedSamplesChanged\n\n    //console.log('Should track', track.name, track.order, 'be reloaded? ', result)\n\n    return result\n  }\n\n  getTrackId = (track) => `${track.url}|${track.categoryName}|${track.rowName}`\n\n  getIgvTrackView = (track) => {\n    const trackId = this.getTrackId(track)\n\n    const existingTrackViews = this.browser.trackViews.filter((existingTrackView) => {\n      const existingTrackConfig = (existingTrackView.track || {}).config || {}\n      return trackId === this.getTrackId(existingTrackConfig)\n    })\n\n    return existingTrackViews.length > 0 && existingTrackViews[0]\n  }\n\n  reloadRemoveAndAddTracks = (nextProps) => {\n    if (this.ignoreNextTrackPropsAfterOrderChangedEvent) {\n      this.ignoreNextTrackPropsAfterOrderChangedEvent = false\n      return\n    }\n    const nextTrackByTrackNameAndType = nextProps.tracks.reduce((acc, track) => {\n      return { [`${track.name}|${track.type}`]: track, ...acc }\n    }, {})\n\n    // reload or remove existing tracks\n    if (this.props.tracks) {\n      this.props.tracks.forEach(async (track) => {\n        const nextTrack = nextTrackByTrackNameAndType[`${track.name}|${track.type}`]\n        if (nextTrack) {\n          if (this.shouldTrackBeReloaded(track, this.props, nextProps)) {\n            const trackView = this.getIgvTrackView(track)\n            console.log('Reloading track', track.name, nextTrack)\n            trackView.track.updateConfig(nextTrack)\n            await trackView.track.postInit()\n            //await trackView.updateViews(true)\n            trackView.repaintViews()\n          }\n\n          // delete track from nextTrackByTrackNameAndType to indicate that it's still selected\n          delete nextTrackByTrackNameAndType[`${track.name}|${track.type}`]\n\n        } else {\n          // remove track that was de-selected\n          try {\n            console.log('Removing track', track.name)\n            this.ignoreNextTrackRemovedEvent = true\n            this.browser.removeTrackByName(track.name)\n          } catch (e) {\n            console.warn('Unable to remove track', track.name, e)\n          }\n        }\n      })\n    }\n    // load any newly-selected track(s)\n    const remainingTracks = Object.values(nextTrackByTrackNameAndType)\n    remainingTracks.forEach((track) => {\n      try {\n        if (!this.getIgvTrackView(track)) { // double-check that the track isn't already loaded\n          console.log('Loading new track', track.name)\n          this.browser.loadTrack(track).then(monkeyPatchPopupData)\n        }\n      } catch (e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (!this.container || !this.browser) {\n      return false\n    }\n\n    //console.log('Should component update', nextProps)\n    //update locus\n    const currentIGVLocus = this.browser.$searchInput.val()\n    const nextIGVLocus = nextProps.locus\n    if (nextProps.locus && (!currentIGVLocus || nextIGVLocus.replace(/,/g, '') !== currentIGVLocus.replace(/,/g, ''))) {\n      this.ignoreNextLocusChangedEvent = true\n      this.browser.search(nextIGVLocus)\n    }\n\n    this.reloadRemoveAndAddTracks(nextProps)\n\n    return false\n  }\n}\n\nIGV.propTypes = {\n  genome: PropTypes.string.isRequired,\n  locus: PropTypes.string.isRequired,\n  tracks: PropTypes.array.isRequired,\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object.isRequired,\n  enabledDataTypes: PropTypes.array.isRequired,\n  locusChangedHandler: PropTypes.func,\n  trackRemovedHandler: PropTypes.func,\n  trackOrderChangedHandler: PropTypes.func,\n  sjOptions: PropTypes.object,\n  vcfOptions: PropTypes.object,\n  bamOptions: PropTypes.object,\n  gcnvOptions: PropTypes.object,\n}\n\nconst mapStateToProps = (state) => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n  gcnvOptions: getGcnvOptions(state),\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  locusChangedHandler: (event) => {\n    if (event && event[0] && event[0].chr && event[0].start && event[0].end) {\n      const newLocus = `${event[0].chr}:${parseInt(event[0].start) + 1}-${parseInt(event[0].end)}`\n      dispatch({\n        type: 'UPDATE_LOCUS',\n        newValue: newLocus,\n      })\n    }\n  },\n\n  trackRemovedHandler: (categoryName, trackName) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_ROW_NAMES',\n      categoryName,\n      selectedRowNames: [trackName],\n    })\n  },\n\n  trackOrderChangedHandler: (trackNames) => {\n    dispatch({\n      type: 'UPDATE_TRACK_ORDER',\n      newValue: trackNames,\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/require-optimization */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable operator-linebreak */\n/* eslint-disable no-multiple-empty-lines */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { GoogleLogin } from 'react-google-login'\nimport IGV from './IGV'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\nimport { getInitialSettingsUrl, getRowsInCategories, getIsGoogleLoginRequired } from '../redux/selectors'\n\nconst SignInButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 50px;\n  margin-left: 100px;\n  word-wrap: break-word;\n  word-break: break-all;\n`\n\nclass LoginAndShowIGV extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  handleGoogleSignIn = (user) => {\n    const profile = user && user.getBasicProfile()\n    const googleUserEmail = profile && profile.getEmail()\n\n    this.setState({ show: googleUserEmail ? 'igv' : 'signin-button' })\n    this.props.userChangedHandler(googleUserEmail)\n  }\n\n  async componentDidMount() {\n    if (!this.props.isGoogleLoginRequired) {\n      this.setState({ show: 'igv' })\n      return\n    }\n\n    try {\n      await initGoogleClient()\n    } catch (e) {\n      console.error('Error during google sign-in init:', e)\n      this.setState({ show: 'signin-button' })\n      return\n    }\n\n    try {\n      this.setState({ signInError: null })\n      await googleSignIn()\n    } catch (e) {\n      console.error('Error during google sign-in:', e)\n      if (e.details && e.details.search('Cookies are not enabled') >= 0) {\n        this.setState({ signInError: 'cookies-disabled' })\n      }\n\n      this.setState({ show: 'signin-button' })\n      return\n    }\n    const googleUserEmail = await getGoogleUserEmail()\n\n    this.setState({ show: googleUserEmail ? 'igv' : 'signin-button' })\n    this.props.userChangedHandler(googleUserEmail)\n  }\n\n  render = () => {\n    if (this.state.show === 'igv' || !this.props.isGoogleLoginRequired) {\n      console.log('Render <IGV />')\n      return <IGV />\n    }\n\n    if (this.state.show === 'signin-button') {\n      let dataPathCounter = 0\n      const buckets = new Set()\n      this.props.rowsInCategories.forEach((category) => {\n        category.rows.forEach((row) => {\n          if (row.data) {\n            row.data.forEach((data) => {\n              if (data.url && data.url.startsWith('gs://')) {\n                dataPathCounter += 1\n\n                const urlTokens = data.url.split('/')\n                const bucket = urlTokens[2]\n                if (bucket !== 'tgg-viewer') {\n                  buckets.add(bucket)\n                }\n              }\n            })\n          }\n        })\n      })\n\n      if (dataPathCounter === 0) {\n        return <InfoContainer>No dataset paths loaded. &nbsp; Please specify an Initial settings url.</InfoContainer>\n      }\n\n      return (\n        <div>\n          <InfoContainer>\n            <div>\n              Retrieved {dataPathCounter} data paths from settings file: <a href={this.props.initialSettingsUrl} target=\"_blank\">{this.props.initialSettingsUrl}</a><br />\n              <br />\n            </div>\n\n            {\n              buckets.size > 0 &&\n              <div>\n                To view this data, you should have read access to the following Google Storage buckets:\n                <ul>\n                  {\n                    Array.from(buckets).map((bucket) => <li key={bucket}><a href={`https://console.cloud.google.com/storage/browser/${bucket}`} target=\"_blank\">{bucket}</a></li>)\n                  }\n                </ul>\n              </div>\n            }\n            {\n              this.state.signInError === 'cookies-disabled' &&\n              <div style={{ marginTop: '20px', color: 'red', textAlign: 'left' }}>\n\n                <b>ERROR: Cookies are disabled</b><br />\n                Please allow cookies to enable sign in with Google.\n              </div>\n            }\n          </InfoContainer>\n\n          <SignInButtonContainer>\n            <GoogleLogin\n              clientId={window.TGG_VIEWER_CLIENT_ID}\n              theme=\"dark\"\n              buttonText=\"Sign in with Google\"\n              disabled={this.state.signInError}\n              onSuccess={this.handleGoogleSignIn}\n              onFailure={this.handleGoogleSignIn}\n              cookiePolicy=\"single_host_origin\"\n            />\n          </SignInButtonContainer>\n        </div>)\n\n    }\n\n    return null\n  }\n}\n\nLoginAndShowIGV.propTypes = {\n  isGoogleLoginRequired: PropTypes.bool,\n  rowsInCategories: PropTypes.array,\n  initialSettingsUrl: PropTypes.string,\n  userChangedHandler: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  isGoogleLoginRequired: getIsGoogleLoginRequired(state),\n  rowsInCategories: getRowsInCategories(state),\n  initialSettingsUrl: getInitialSettingsUrl(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: { googleUserEmail },\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginAndShowIGV)\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-multiple-empty-lines */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon, Popup } from 'semantic-ui-react'\n\n\nclass RequestStatus extends React.PureComponent {\n\n  static NONE = 'NONE'\n\n  static IN_PROGRESS = 'IN_PROGRESS'\n\n  static SUCCEEDED = 'SUCCEEDED'\n\n  static ERROR = 'ERROR'\n\n  render() {\n    switch (this.props.status) {\n      case RequestStatus.IN_PROGRESS:\n        return <Icon loading name=\"spinner\" style={{ color: '#4183c4' }} />\n      case RequestStatus.SUCCEEDED:\n        return <Popup\n          trigger={\n            <Icon name=\"check circle\" style={{ color: '#00C000' }} />\n          }\n          content={this.props.successMessage || 'Success'}\n          position=\"top center\"\n          size=\"small\"\n        />\n      case RequestStatus.ERROR:\n        return <Popup\n          trigger={\n            <Icon name=\"warning circle\" style={{ color: '#F00000' }} />\n          }\n          content={this.props.errorMessage || ''}\n          position=\"top center\"\n          size=\"small\"\n        />\n      default:\n        return <Icon name=\"warning circle\" style={{ color: 'rgb(0,0,0,0.0)' }} />\n    }\n  }\n}\n\nRequestStatus.propTypes = {\n  status: PropTypes.string,\n  errorMessage: PropTypes.string,\n  successMessage: PropTypes.string,\n}\n\nexport default RequestStatus\n","/* eslint-disable no-multiple-empty-lines */\n\nimport LZString from 'lz-string'\n\n/* in-memory cache to avoid unnecessary compression/decompression */\nconst CACHE = {}\n\n/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const jsonString = JSON.stringify(state)\n    if (CACHE[label] === jsonString) {\n      return\n    }\n    console.warn(`LocalStorage: compressing ${label}`)\n    const serializedState = LZString.compress(jsonString)\n    localStorage.setItem(label, serializedState)\n    CACHE[label] = jsonString\n  } catch (err) {\n    console.warn('Unable to save state: ', label, state, err)\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    const jsonString = LZString.decompress(serializedState)\n    CACHE[label] = jsonString\n\n    if (jsonString === null) {\n      return undefined\n    }\n\n    return JSON.parse(jsonString)\n  } catch (err) {\n    return undefined\n  }\n}\n","/* eslint-disable operator-linebreak */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-multiple-empty-lines */\n\n\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\n\nconst INITIAL_ROWS_IN_CATEGORIES = []\n\nexport const DEFAULT_STATE = {\n  isGoogleLoginRequired: true,\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  showLeftSideBar: true,\n  showRightSideBar: true,\n  dataTypesToShow: ['junctions', 'coverage', 'vcf', 'gcnv_bed'],\n  leftSideBarLocusList: [],\n  rightSideBarLocusList: [],\n  rowsInCategories: INITIAL_ROWS_IN_CATEGORIES,\n  selectedRowNamesByCategoryName: {},\n  sjOptions: {\n    trackHeight: 170,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 0,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    maxPercentSamplesWithThisJunction: 100,\n    maxSamplesWithThisJunction: 1000000000,\n    minJunctionEndsVisible: 0,\n    minPercentSamplesWithThisJunction: 0,\n    minSamplesWithThisJunction: 0,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelWith: 'uniqueReadCount',\n  },\n  vcfOptions: {\n    displayMode: 'EXPANDED',\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    alignmentShading: 'strand',\n  },\n  gcnvOptions: {\n    trackHeight: 200,\n    trackMin: 0,\n    trackMax: 5,\n    autoscale: false,\n    onlyHandleClicksForHighlightedSamples: true,\n  },\n  initialSettingsUrl: 'https://tgg-viewer.broadinstitute.org/default_config.json',\n}\n\n\nconst KEYS_TO_PERSIST_IN_LOCAL_STORAGE = [\n  'leftSideBarLocusList', 'rightSideBarLocusList',\n]\n\nexport const getStateFromLocalStorage = () => {\n  // restore values from local storage\n  const stateFromLocalStorage = KEYS_TO_PERSIST_IN_LOCAL_STORAGE.reduce((acc, key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      acc[key] = v\n    }\n    return acc\n  }, {})\n\n  return stateFromLocalStorage\n}\n\nconst KEYS_TO_PERSIST_IN_URL = {\n  locus: 'locus',\n  dataTypesToShow: 'show',\n  trackOrder: 'order',\n  selectedRowNamesByCategoryName: 'selectedRows',\n  selectedSamplesByCategoryNameAndRowName: 'selectedSamples',\n  sjOptions: 'sjOptions',\n  vcfOptions: 'vcfOptions',\n  bamOptions: 'bamOptions',\n  gcnvOptions: 'gcnvOptions',\n  initialSettingsUrl: 'settingsUrl',\n}\n\nexport const getStateFromUrlHash = () => {\n  // restore values from url\n  const REVERSE_KEY_NAME_LOOKUP = Object.entries(KEYS_TO_PERSIST_IN_URL).reduce(\n    (acc, [key, value]) => {\n      return { ...acc, [value]: key }\n    }, {})\n  const hashString = window.location.hash.replace(/^#/, '')\n\n  const stateFromUrlHash = hashString ?\n    hashString.split('&').reduce((acc, keyValue) => {\n      const keyValueList = keyValue.split('=')\n      const key = (keyValueList[0] in REVERSE_KEY_NAME_LOOKUP) ? REVERSE_KEY_NAME_LOOKUP[keyValueList[0]] : keyValueList[0]\n      if (key === 'locus') {\n        acc = { ...acc, [key]: keyValueList[1] }\n      } else {\n        try {\n          acc[key] = jsurl.parse(keyValueList[1])\n        } catch (e) {\n          console.error('Couldn\\'t parse url hash param', keyValueList[0], ': ', keyValueList[1])\n        }\n      }\n      if (!acc[key] || (typeof acc[key] === 'object' && Object.keys(acc[key]).length === 0)) {\n        //delete keys with empty values\n        delete acc[key]\n      }\n\n      return acc\n    }, {})\n    : {}\n\n  return stateFromUrlHash\n}\n\nexport const computeInitialState = () => {\n\n  const stateFromLocalStorage = getStateFromLocalStorage()\n  const stateFromUrlHash = getStateFromUrlHash()\n\n  // default values are over-ridden by values from local storage, which are over-ridden by values from the url\n  const initialState = { ...DEFAULT_STATE, ...stateFromLocalStorage, ...stateFromUrlHash }\n\n  return initialState\n}\n\n\nexport const updateLocalStorageAndUrl = (state) => {\n  //update local storage\n\n  KEYS_TO_PERSIST_IN_LOCAL_STORAGE.forEach((key) => {\n    saveState(key, state[key])\n  })\n\n  //update url\n  const hashString = Object.keys(state)\n    .filter((key) => (key in KEYS_TO_PERSIST_IN_URL))\n    .reduce((hashKeyValueList, key) => {\n      const value = key === 'locus' ? state[key].replace(',', '') : jsurl.stringify(state[key])\n      return [\n        ...hashKeyValueList,\n        `${KEYS_TO_PERSIST_IN_URL[key]}=${value}`,\n      ]\n    }, []).join('&')\n\n  window.location.hash = `#${hashString}`\n}\n","/* eslint-disable react/no-find-dom-node */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-multiple-empty-lines */\n/* eslint-disable react/jsx-indent */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Input, Popup } from 'semantic-ui-react'\nimport delay from 'timeout-as-promise'\nimport yaml from 'js-yaml'\nimport { getInitialSettingsUrl } from '../redux/selectors'\nimport RequestStatus from './RequestStatus'\nimport { DEFAULT_STATE, getStateFromLocalStorage, getStateFromUrlHash } from '../redux/initialState'\n\nconst StyledDiv = styled.div`\n  color: #999;\n  width: 100%;\n  text-align: center;\n  \n  .ui.label {\n    color: #444;\n    background-color: #f3f3f3;\n  }\n`\n\nconst StyledInput = styled(Input)`\n  margin-top: 100px;\n  width: calc(100% - 350px);\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 20px !important;\n  margin-right: 15px !important;\n`\n\nconst StyledButton2 = styled(Button)`\n  margin-left: 10px !important;\n`\n\nclass InitialSettingsForm extends React.PureComponent\n{\n  constructor(props) {\n    super(props)\n    this.textInputValue = props.initialSettingsUrl || ''\n    this.state = {\n      requestStatus: RequestStatus.NONE,\n      successMessage: '',\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    const { initialSettingsUrl } = this.props\n    if (initialSettingsUrl) {\n      // download url\n      console.log('Loading settings from', initialSettingsUrl)\n      await this.applyInitialSettingsUrl(initialSettingsUrl, false)\n    }\n  }\n\n  loadInitialSettingsUrl = async (url, overrideLocalSettings) => {\n    const {\n      globalState,\n      updateInitialSettingsUrl,\n      resetGlobalState,\n    } = this.props\n\n    if (!url) {\n      //reset url to empty\n      resetGlobalState({ ...DEFAULT_STATE, ...{ user: globalState.user } })\n      updateInitialSettingsUrl('')\n      return\n    }\n\n    let stateFromLocalStorage\n    let stateFromUrlHash\n    if (!overrideLocalSettings) {\n      stateFromLocalStorage = getStateFromLocalStorage()\n      stateFromUrlHash = getStateFromUrlHash()\n    }\n\n    //validate url\n    if (url.search(':') === -1 || url.search('/') === -1) {\n      throw new Error(`Invalid url: \"${url}\"`)\n    }\n\n    const isYaml = url.search('.yaml') !== -1 || url.search('.yml') !== -1\n    const isJson = url.search('.json') !== -1\n    const isUnknown = !isYaml && !isJson\n\n    //NOTE: changed my mind about requiring a .yaml or .json extension to allow for more flexibility.\n    //if (!isYamlURL && !isJsonURL) {\n    //  throw new Error('Expected file extensions (\".yaml\", \".yml\", or \".json\") not found in the URL')\n    //}\n\n    console.log('Loading settings from', url)\n    const response = await fetch(url, { mode: 'cors', redirect: 'follow' })\n    if (!response.ok) {\n      throw new Error(`Couldn't load URL. Error: ${response.statusText.toLowerCase()} (${response.status})`)\n    }\n\n    const fileContents = await response.text()\n\n    let settings = null\n    if (!settings && (isYaml || isUnknown)) {\n      try {\n        settings = yaml.safeLoad(fileContents)\n      } catch (e) {\n        throw new Error(`Unable to parse YAML file: ${url}  ${e}`)\n      }\n    }\n\n    if (!settings && (isJson || isUnknown)) {\n      try {\n        settings = JSON.parse(fileContents)\n      } catch (e) {\n        throw new Error(`Unable to parse JSON file: ${url}  ${e}`)\n      }\n    }\n\n    if (!settings) {\n      throw new Error(`Unable to parse settings from file: ${url}`)\n    }\n\n    // TODO validate settings more\n\n    // filter settings to keys in globalState\n    const filteredSettings = Object.keys(globalState).reduce((acc, key) => {\n      if (key in settings) {\n        return { ...acc, [key]: settings[key] }\n      }\n      return acc\n    }, {})\n\n    console.log('Retrieved state from config file:', filteredSettings)\n\n    // apply settings\n    let newState = { ...globalState, ...filteredSettings }\n    if (!overrideLocalSettings) {\n      console.log('Applying settings from local storage', stateFromLocalStorage)\n      console.log('Applying settings from url hash', stateFromUrlHash)\n      newState = { ...newState, ...stateFromLocalStorage, ...stateFromUrlHash }\n    }\n\n    console.log('Setting global state to', newState)\n    resetGlobalState(newState)\n    updateInitialSettingsUrl(url)\n  }\n\n  applyInitialSettingsUrl = async (url, overrideLocalSettings = false) => {\n\n    this.setState({ requestStatus: RequestStatus.IN_PROGRESS })\n\n    if (url.startsWith('https://github.com/')) {\n      // switch to the github raw url\n      url = url.replace('https://github.com', 'https://raw.githubusercontent.com').replace('blob/', '')\n    } else if (url.startsWith('https://storage.googleapis.com') || url.startsWith('gs://')) {\n      // switch to the url that supports CORS (https://stackoverflow.com/questions/66934689/getting-cors-issue-on-wildcard-cors-enabled-gcs-bucket-with-fetch)\n      const urlParts = url.replace('gs://', '').replace('https://storage.googleapis.com/', '').split('/')\n      const bucketName = urlParts[0]\n      const objectPath = urlParts.slice(1).join('/')\n      url = `https://${bucketName}.storage.googleapis.com/${objectPath}`\n    }\n\n\n    try {\n      await this.loadInitialSettingsUrl(url, overrideLocalSettings)\n\n      this.setState({ requestStatus: RequestStatus.SUCCEEDED, successMessage: url ? 'Successfully loaded URL and applied settings' : 'Reset all settings to defaults' })\n    } catch (e) {\n      this.setState({ requestStatus: RequestStatus.ERROR, errorMessage: e.toString() })\n    }\n\n    // wait and then clear the message\n    await delay(10000)\n    if (this.state.requestStatus !== RequestStatus.IN_PROGRESS) {\n      this.setState({ requestStatus: RequestStatus.NONE, errorMessage: '' })\n    }\n  }\n\n  exportCurrentSettings = () => {\n    //convert global state to a JSON string\n    const EXCLUDED_KEYS = ['user', 'modals']\n    const globalStateForExport = Object.keys(this.props.globalState).reduce((acc, key) => {\n      if (!EXCLUDED_KEYS.includes(key)) {\n        acc[key] = this.props.globalState[key]\n      }\n      return acc\n    }, {})\n\n    return encodeURIComponent(JSON.stringify(globalStateForExport, null, 5))\n  }\n\n  render() {\n    const {\n      initialSettingsUrl,\n    } = this.props\n\n    return (\n      <StyledDiv align=\"center\">\n        <StyledInput\n          label=\"Initial settings:\"\n          defaultValue={initialSettingsUrl}\n          placeholder=\"URL of .yaml or .json settings file (eg. http://.../settings.json), or blank to reset all settings to defaults.\"\n          onChange={(e) => { this.textInputValue = e.target.value }}\n          onKeyUp={(e) => e.keyCode === 13 && this.applyInitialSettingsUrl(e.target.value, true)}\n        />\n        <StyledButton\n          content=\"Apply\"\n          onClick={() => this.applyInitialSettingsUrl(this.textInputValue, true)}\n        />\n        <RequestStatus\n          status={this.state.requestStatus}\n          errorMessage={this.state.errorMessage}\n          successMessage={this.state.successMessage}\n        />\n        <Popup\n          content=\"Export current settings to a .json file. If you then upload this file to a public url (for example to github) and then paste the url here, the current settings will be restored.\"\n          position=\"right center\"\n          trigger={\n            <a download=\"settings.json\" href={`data:text/json;charset=utf-8,${this.exportCurrentSettings()}`}>\n              <StyledButton2 icon=\"download\" />\n            </a>\n          }\n        />\n      </StyledDiv>)\n  }\n}\n\nInitialSettingsForm.propTypes = {\n  initialSettingsUrl: PropTypes.string.isRequired,\n  globalState: PropTypes.object,\n  updateInitialSettingsUrl: PropTypes.func,\n  resetGlobalState: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  globalState: state,\n  initialSettingsUrl: getInitialSettingsUrl(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateInitialSettingsUrl: (newUrl) => {\n    dispatch({\n      type: 'UPDATE_INITIAL_SETTINGS_URL',\n      newValue: newUrl,\n    })\n  },\n  resetGlobalState: (state) => {\n    dispatch({\n      type: 'RESET_GLOBAL_STATE',\n      newState: state,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialSettingsForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport Header from './Header'\nimport LoginAndShowIGV from './LoginAndShowIGV'\nimport InitialSettingsForm from './InitialSettingsForm'\nimport {\n  getIsLeftSideBarVisible, getIsRightSideBarVisible,\n} from '../redux/selectors'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nconst SIDE_BAR_WIDTH = 210\n\nconst LeftSideBarColumn = styled(Grid.Column)`\n  min-width: ${SIDE_BAR_WIDTH}px !important;\n  z-index: 2;\n`\n\nconst RightSideBarColumn = styled(Grid.Column)`\n  min-width: ${SIDE_BAR_WIDTH}px !important;\n  z-index: 0;\n`\n\nclass BaseLayout extends React.PureComponent\n{\n  render()\n  {\n\n    const {\n      showLeftSideBar,\n      showRightSideBar,\n    } = this.props\n\n    const nSideBars = (showLeftSideBar ? 1 : 0) + (showRightSideBar ? 1 : 0)\n\n    return (\n      <StyledDiv>\n        <Grid>\n          <Grid.Row>\n            {showLeftSideBar ? <LeftSideBarColumn><LeftSideBar /></LeftSideBarColumn> : null}\n            <Grid.Column style={{ minWidth: `calc(99% - ${nSideBars * SIDE_BAR_WIDTH + 5}px)`, zIndex: 1 }}>\n              <Header />\n              <LoginAndShowIGV />\n              <InitialSettingsForm />\n            </Grid.Column>\n            {showRightSideBar ? <RightSideBarColumn><RightSideBar /></RightSideBarColumn> : null}\n          </Grid.Row>\n        </Grid>\n      </StyledDiv>\n    )\n  }\n}\n\nBaseLayout.propTypes = {\n  showLeftSideBar: PropTypes.bool,\n  showRightSideBar: PropTypes.bool,\n}\n\nconst mapStateToProps = (state) => ({\n  showLeftSideBar: getIsLeftSideBarVisible(state),\n  showRightSideBar: getIsRightSideBarVisible(state),\n})\n\nexport default connect(mapStateToProps)(BaseLayout)\n","/* eslint-disable prefer-object-spread */\n/* eslint-disable no-multiple-empty-lines */\n\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { updateLocalStorageAndUrl, computeInitialState } from './initialState'\n\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\nimport modalReducers from './utils/modalReducer'\n\n\nconst rowsInCategoriesReducer = (state, action) => {\n  if (!action || !action.categoryName || !action.rows) {\n    return state || []\n  }\n\n  return state.map((category) => {\n    if (category.categoryName !== action.categoryName) {\n      return category\n    }\n\n    let updatedRows\n    switch (action.type) {\n      case 'SET_ROWS': {\n        updatedRows = [...action.rows]\n        break\n      }\n      case 'ADD_ROWS': {\n        const existingNames = category.rows.map((row) => row.name)\n        updatedRows = [...category.rows, ...action.rows.filter((row) => !existingNames.includes(row.name))]\n        break\n      }\n      default:\n        updatedRows = category.rows\n    }\n\n    const result = {\n      ...category,\n      rows: updatedRows,\n    }\n    return result\n  })\n}\n\n\nconst selectedRowNamesByCategoryNameReducer = (state, action) => {\n  if (!action || !action.categoryName || !Array.isArray(action.selectedRowNames)) {\n    return state || {}\n  }\n  const previousList = state[action.categoryName] || []\n  switch (action.type) {\n    case 'SET_SELECTED_ROW_NAMES':\n    case 'ADD_SELECTED_ROW_NAMES':\n    case 'REMOVE_SELECTED_ROW_NAMES': {\n      let updatedList\n      if (action.type === 'SET_SELECTED_ROW_NAMES') {\n        updatedList = Array.from(new Set(action.selectedRowNames)) // make a copy of action.values\n      } else if (action.type === 'ADD_SELECTED_ROW_NAMES') {\n        updatedList = Array.from(new Set([...previousList, ...action.selectedRowNames]))\n      } else {\n        const valuesToRemove = action.selectedRowNames\n        updatedList = previousList.filter((v) => !valuesToRemove.includes(v))\n      }\n\n      return {\n        ...state,\n        [action.categoryName]: updatedList,\n      }\n    }\n    default:\n      console.trace(`Unknown action type: ${action.type}`)\n  }\n\n  return state\n}\n\n\nconst selectedSamplesByCategoryNameAndRowNameReducer = (state, action) => {\n  if (!action || !action.categoryName || (!action.selectedSamplesByRowName && !action.sampleSettingsByRowNameAndSampleName)) {\n    return state || {}\n  }\n\n  const categoryObj = state[action.categoryName] || {}\n  const previousSelectedSamplesByRowName = categoryObj.selectedSamples || {}\n  const previousSampleSettingsByRowNameAndSampleName = categoryObj.sampleSettings || {}\n  let updatedSelectedSamplesByRowName = previousSelectedSamplesByRowName\n  let updatedSampleSettingsByRowNameAndSampleName = previousSampleSettingsByRowNameAndSampleName\n\n  switch (action.type) {\n    case 'SET_SELECTED_SAMPLES':\n    case 'ADD_SELECTED_SAMPLES':\n    case 'REMOVE_SELECTED_SAMPLES': {\n      if (action.type === 'SET_SELECTED_SAMPLES') {\n        updatedSelectedSamplesByRowName = { ...previousSelectedSamplesByRowName, ...action.selectedSamplesByRowName }\n      } else if (action.type === 'ADD_SELECTED_SAMPLES') {\n        updatedSelectedSamplesByRowName = Array.from(new Set([\n          ...Object.keys(previousSelectedSamplesByRowName),\n          ...Object.keys(action.selectedSamplesByRowName),\n        ])).reduce((acc, rowName) => {\n          acc[rowName] = Array.from(new Set([...(previousSelectedSamplesByRowName[rowName] || []), ...(action.selectedSamplesByRowName[rowName] || [])]))\n\n          return acc\n        }, {})\n      } else {\n        updatedSelectedSamplesByRowName = Object.keys(previousSelectedSamplesByRowName).reduce((acc, rowName) => {\n          const valuesToRemove = action.selectedSamplesByRowName[rowName] || []\n          const updatedList = (previousSelectedSamplesByRowName[rowName] || []).filter((v) => !valuesToRemove.includes(v))\n          if (updatedList.length > 0) {\n            acc[rowName] = updatedList\n          }\n          return acc\n        }, {})\n      }\n      break\n    }\n\n    case 'UPDATE_SAMPLE_SETTINGS': {\n      updatedSampleSettingsByRowNameAndSampleName = {\n        ...previousSampleSettingsByRowNameAndSampleName,\n        ...action.sampleSettingsByRowNameAndSampleName,\n      }\n      Object.keys(action.sampleSettingsByRowNameAndSampleName).forEach((rowName) => {\n        const previousSampleSettingsBySampleName = previousSampleSettingsByRowNameAndSampleName[rowName] || {}\n        const newSampleSettingsBySampleName = action.sampleSettingsByRowNameAndSampleName[rowName]\n        const mergedSamplesSettingsBySampleName = {\n          ...previousSampleSettingsBySampleName,\n          ...newSampleSettingsBySampleName,\n        }\n        Object.entries(newSampleSettingsBySampleName).forEach(\n          ([sampleName, sampleSettings]) => {\n            const mergedSampleSettings = {\n              ...previousSampleSettingsBySampleName[sampleName] || {},\n              ...sampleSettings,\n            }\n            mergedSamplesSettingsBySampleName[sampleName] = mergedSampleSettings\n          })\n        updatedSampleSettingsByRowNameAndSampleName[rowName] = mergedSamplesSettingsBySampleName\n      })\n      break\n    }\n\n    default: {\n      console.trace(`Unknown action type: ${action.type}`)\n      return state\n    }\n  }\n\n  return {\n    ...state,\n    [action.categoryName]: {\n      selectedSamples: updatedSelectedSamplesByRowName,\n      sampleSettings: updatedSampleSettingsByRowNameAndSampleName,\n    },\n  }\n}\n\n// combined reducers\nconst otherReducers = combineReducers(Object.assign({\n  isGoogleLoginRequired: zeroActionsReducer,\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  showLeftSideBar: zeroActionsReducer,\n  showRightSideBar: zeroActionsReducer,\n  rightSideBarLocusList: createArrayReducer('RIGHT_SIDE_BAR_LOCUS_LIST'),\n  leftSideBarLocusList: createArrayReducer('LEFT_SIDE_BAR_LOCUS_LIST'),\n  dataTypesToShow: createArrayReducer('DATA_TYPES_TO_SHOW'),\n  rowsInCategories: rowsInCategoriesReducer,\n  selectedRowNamesByCategoryName: selectedRowNamesByCategoryNameReducer,\n  selectedSamplesByCategoryNameAndRowName: selectedSamplesByCategoryNameAndRowNameReducer,\n  trackOrder: createSingleValueReducer('UPDATE_TRACK_ORDER', []),\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  gcnvOptions: createSingleObjectReducer('UPDATE_GCNV_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n  initialSettingsUrl: createSingleValueReducer('UPDATE_INITIAL_SETTINGS_URL', ''),\n}, modalReducers))\n\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'RESET_GLOBAL_STATE') {\n    return action.newState\n  }\n\n  const nextState = otherReducers(state, action)\n\n  updateLocalStorageAndUrl(nextState)\n  return nextState\n}\n\n\n/**\n * Initialize and return the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const createReduxStore = () => {\n\n  const initialState = computeInitialState()\n\n  console.log('Initializing store to:', initialState)\n\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunkMiddleware)))\n}\n","/* eslint-disable react/jsx-indent */\n\nimport React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport { createReduxStore } from './redux/rootReducer'\n\nfunction App() {\n  return (\n    <Provider store={createReduxStore()}>\n      <BaseLayout />\n    </Provider>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}