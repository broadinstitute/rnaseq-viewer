{"version":3,"sources":["utils/googleAuth.js","constants.js","redux/selectors.js","components/LeftSideBar.jsx","components/RightSideBar.jsx","components/IGV.jsx","components/GoogleAuth.jsx","components/BaseLayout.jsx","redux/utils/reducerFactories.js","redux/rootReducer.js","utils/localStorage.js","redux/configureStore.js","App.js","index.js"],"names":["googleSignIn","a","gapi","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","getGoogleUserEmail","profile","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","user","reloadAuthResponse","getAuthResponse","access_token","MOTIFS","getLocus","state","locus","getGenome","genome","getSamplesInfo","samplesInfo","getSelectedSampleNames","selectedSampleNames","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getSelectedSamples","createSelector","map","category","samples","flat","filter","s","includes","name","getTracks","selectedSamples","igvTracks","forEach","sample","i","junctionsTrack","coverageTrack","junctions","showJunctions","type","format","url","indexURL","oauthToken","order","height","trackHeight","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","thicknessBasedOn","bounceHeightBasedOn","colorBy","labelUniqueReadCount","labelMultiMappedReadCount","labelTotalReadCount","labelMotif","labelIsAnnotatedJunction","labelIsAnnotatedJunctionValue","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","coverage","showCoverage","console","log","push","tracks","showVcfs","vcf","indexUrl","indexed","displayMode","showBams","bam","viewAsPairs","showSoftClips","visibilityWindow","color","CategoryH3","styled","h3","CategoryDetails","div","OptionDiv","StyledPopup","Popup","StyledIcon","attrs","JunctionsIcon","CoverageIcon","BamIcon","VcfIcon","SampleColorLabelsContainer","span","NoWrapDiv","SampleColorLabelsWithPopup","content","style","paddingRight","colSpan","fontSize","marginTop","position","trigger","onClick","navigator","clipboard","writeText","marginLeft","CategoryPanel","updateSelectedSampleNames","toUpperCase","length","href","e","preventDefault","sampleNamesInCategory","Set","x","has","SamplesPanel","key","SamplePanel","Checkbox","label","checked","data-sample","onChange","data","SampleDetails","description","inverted","Icon","LeftSideBar","defaultChecked","this","props","updateSjOptions","updateBamOptions","updateVcfOptions","React","Component","connect","dispatch","newValue","newSettings","updates","OptionInput","input","SjOptionsPanel","handleTextInput","value","keyCode","target","defaultValue","onKeyUp","parseInt","width","on","BamOptionsPanel","VcfOptionsPanel","RightSideBar","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","StyledDiv","IGV","setContainerElement","element","container","render","ref","shouldComponentUpdate","nextProps","nextTrackSettingsByTrackName","reduce","acc","item","track","nextTrackSettings","browser","removeTrackByName","loadTrack","warn","Object","values","igvBrowserOptions","igv","createBrowser","then","locusChangedHandler","delay","fn","timerId","args","clearTimeout","setTimeout","throttle","trackRemovedHandler","event","newLocus","replace","GoogleAuth","Promise","resolve","load","client","init","googleUserEmail","setState","Grid","Row","Column","zeroActionsReducer","createSingleValueReducer","updateActionType","initialState","debug","reducer","action","undefined","error","createSingleObjectReducer","newState","rootReducer","combineReducers","assign","loadState","serializedState","localStorage","getItem","JSON","parse","err","INITIAL_STATE","window","PERSIST_STATE_IN_URL","PERSIST_STATE_IN_LOCAL_STORAGE","enhancer","compose","applyMiddleware","thunkMiddleware","store","next","result","nextState","getState","stringify","setItem","saveState","stateToSave","keys","obj","location","hash","jsurl","configureStore","v","createStore","App","BaseLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d32715ab.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n\nconst RNA_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise(resolve => {\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        'clientId': RNA_VIEWER_CLIENT_ID,\n        'scope': 'https://www.googleapis.com/auth/devstorage.read_only',\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest']\n      })\n\n      resolve()\n    })\n  })\n})\n\nexport const googleSignIn = async () => {\n\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(!authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const profile = authInstance.currentUser.get().getBasicProfile()\n\n  return profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance.currentUser.get()\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith(\"gs://\")) {\n    console.error(`${gsPath} doesn't start with \"gs://\"` )\n    return\n  }\n\n  const gsPathParts = gsPath.split(\"/\")\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"` )\n    return\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return await gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults:1000})\n}\n","\nexport const MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\n\n","import { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { MOTIFS } from '../constants'\n\nexport const getLocus = state => state.locus\nexport const getGenome = state => state.genome\nexport const getSamplesInfo = state => state.samplesInfo\nexport const getSelectedSampleNames = state => state.selectedSampleNames\nexport const getSjOptions = state => state.sjOptions\nexport const getVcfOptions = state => state.vcfOptions\nexport const getBamOptions = state => state.bamOptions\n\n\n/**\n * Expects sample info like:\n *\n * [\n *    {\n *      label: 'category1',\n *      samples : [\n *          { sample1 .. },\n *          { sample2 .. },\n *          ...\n *      ]\n *    },\n *    {\n *      label: 'category2',\n *      samples : [\n *        { sample3 .. },\n *        { sample4 .. },\n *        ...\n *      ]\n *    },\n * ]\n */\n\nexport const getSelectedSamples = createSelector(\n  getSamplesInfo,\n  getSelectedSampleNames,\n  (samplesInfo, selectedSampleNames) => samplesInfo.map(category => category.samples).flat().filter(s => selectedSampleNames.includes(s.name)),\n)\n\n\nexport const getTracks = createSelector(\n  getSelectedSamples,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  (selectedSamples, sjOptions, vcfOptions, bamOptions) => {\n    const igvTracks = []\n\n    selectedSamples.forEach((sample, i) => {\n      //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n      let junctionsTrack\n      if (sample.junctions && sjOptions.showJunctions) {\n        junctionsTrack = {\n          type: 'junctions',\n          format: 'bed',\n          url: sample.junctions,\n          indexURL: `${sample.junctions}.tbi`,\n          oauthToken: getGoogleAccessToken,\n          order: i*10,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n          minTotalReads: sjOptions.minTotalReads,\n          maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n          minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n          thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n          bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n          colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n          labelUniqueReadCount: sjOptions.labelUniqueReadCount,\n          labelMultiMappedReadCount: sjOptions.labelMultiMappedReadCount,\n          labelTotalReadCount: sjOptions.labelTotalReadCount,\n          labelMotif: sjOptions.labelMotif,\n          labelIsAnnotatedJunction: sjOptions.labelIsAnnotatedJunction && sjOptions.labelIsAnnotatedJunctionValue,\n          hideAnnotatedJunctions: sjOptions.hideAnnotated,\n          hideUnannotatedJunctions: sjOptions.hideUnannotated,\n          hideMotifs: MOTIFS.filter( motif => sjOptions[`hideMotif${motif}`] ), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n        }\n      }\n\n      let coverageTrack\n      if(sample.coverage && sjOptions.showCoverage) {\n        coverageTrack = {\n          type: 'wig',\n          format: 'bigwig',\n          url: sample.coverage,\n          oauthToken: getGoogleAccessToken,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          order: i*10 + 1,\n        }\n      }\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${sample.junctions} & ${sample.coverage} track #`, i*10 + 2)\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          order: i*10 + 2,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${sample.junctions} track #`, i*10 )\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [junctionsTrack],\n          order: i*10 + 3,\n        })\n      } else if (coverageTrack) {\n        console.log(`Adding ${sample.coverage} track #`, i*10 + 1)\n        igvTracks.push(coverageTrack)\n      }\n\n      if (vcfOptions.showVcfs && sample.vcf) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.vcf} track #`, i*10 + 4)\n\n        igvTracks.push({\n          type: 'variant',\n          format: 'vcf',\n          url: sample.vcf,\n          indexUrl: `${sample.vcf}.tbi`,\n          indexed: true,\n          name: `${sample.name} vcf`,\n          displayMode: vcfOptions.displayMode,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 4,\n        })\n      }\n\n      if (bamOptions.showBams && sample.bam) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.bam} track #`, i*10 + 5)\n\n        igvTracks.push({\n          type: 'alignment',\n          url: sample.bam,\n          indexed: true,\n          name: `${sample.name} bam`,\n          height: bamOptions.trackHeight,\n          colorBy: bamOptions.colorBy,\n          viewAsPairs: bamOptions.viewAsPairs,\n          showSoftClips: bamOptions.showSoftClips,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 5,\n        })\n      }\n    })\n\n\n    igvTracks.push({\n      name: 'Gencode v32 Genes',\n      format: \"refgene\",\n      url: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz\",\n      indexUrl: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz.tbi\",\n      indexed: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: \"EXPANDED\",\n      order: 1000001,\n      color: \"rgb(76,171,225)\",\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\"\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getSamplesInfo, getSelectedSampleNames, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\n\n\nconst CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst OptionDiv = styled.div`\n  padding-top: 3px;\n`\n\nconst StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nconst StyledIcon = styled.div.attrs({ name: \"stop\" })`\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\n\nconst JunctionsIcon = styled(StyledIcon)`\n   color: #B0B0EC;\n   border: 3px solid #B0B0EC;\n`\n\nconst CoverageIcon = styled(StyledIcon)`\n   color: #B5D29A;\n   border: 3px solid #B5D29A;\n`\n\nconst BamIcon = styled(StyledIcon)`\n   color: #5CB6EA;\n   border: 3px solid #5CB6EA;\n`\n\nconst VcfIcon = styled(StyledIcon)`\n   color: #E6A01B;\n   border: 3px solid #E6A01B;\n`\n\nconst SampleColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\nconst SampleColorLabelsWithPopup = ({sample}) => <Popup\n    content={\n      <table>\n        <tbody>\n          {sample.junctions && <tr><td style={{ paddingRight: '10px' }}><b>Junctions:</b></td><td><NoWrapDiv>{sample.junctions}</NoWrapDiv></td></tr>}\n          {sample.coverage && <tr><td><b>Coverage:</b></td><td><NoWrapDiv>{sample.coverage}</NoWrapDiv></td></tr>}\n          {sample.bam && <tr><td><b>Bam:</b></td><td><NoWrapDiv>{sample.bam}</NoWrapDiv></td></tr>}\n          {sample.vcf && <tr><td><b>Vcf:</b></td><td><NoWrapDiv>{sample.vcf}</NoWrapDiv></td></tr>}\n          <tr><td colSpan={2}><div style={{fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <SampleColorLabelsContainer onClick={() =>\n        navigator.clipboard.writeText(`${(sample.bam+\"\\n\") || \"\"}${(sample.junctions+\"\\n\") || \"\"}${(sample.coverage+\"\\n\") || \"\"}${(sample.vcf+\"\\n\") || \"\"}`)\n      }>\n        {sample.junctions && <JunctionsIcon />}\n        {sample.coverage && <CoverageIcon />}\n        {sample.bam && <BamIcon />}\n        {sample.vcf && <VcfIcon />}\n      </SampleColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />\n\n\nconst CategoryPanel = ({category, selectedSampleNames, updateSelectedSampleNames}) =>\n  <div>\n    <CategoryH3>{category.name.toUpperCase()}</CategoryH3>\n    {\n      category.samples.length >= 10 && <CategoryDetails>{`(N=${category.samples.length}) `}</CategoryDetails>\n    }\n    <div>\n      <a href=\"#\" onClick={(e) => {\n        e.preventDefault()\n        const sampleNamesInCategory =  new Set(category.samples.map(s => s.name))\n        updateSelectedSampleNames(selectedSampleNames.filter(x => !sampleNamesInCategory.has(x)))\n      }}>Clear All</a>\n    </div>\n  </div>\n\n\nconst SamplesPanel = ({samplesInfo, selectedSampleNames, updateSelectedSampleNames}) =>\n  samplesInfo.map(category =>\n    <div key={category.name}>\n      <CategoryPanel category={category} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n      {\n        category.samples.map(sample =>\n          <SamplePanel key={sample.name} sample={sample} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n        )\n      }\n    </div>,\n  )\n\nconst SamplePanel = ({sample, selectedSampleNames, updateSelectedSampleNames}) =>\n  <NoWrapDiv>\n    <Checkbox\n      label={sample.name}\n      checked={selectedSampleNames.includes(sample.name)}\n      data-sample={sample.name}\n      onChange={(e, data) =>\n        updateSelectedSampleNames(\n          data.checked ? [...selectedSampleNames, data['data-sample']] : selectedSampleNames.filter(x => x !== data['data-sample']),\n        )\n      }\n    />\n    <SampleDetails sample={sample} />\n    <SampleColorLabelsWithPopup sample={sample} />\n  </NoWrapDiv>\n\nconst SampleDetails = ({sample}) => {\n  return (sample.description ?\n    <StyledPopup inverted\n      content={sample.description}\n      position=\"right center\"\n      trigger={\n        <Icon style={{marginLeft: '10px'}} name=\"question circle outline\" />\n      } /> : null)\n}\n\nclass LeftSideBar extends React.Component\n{\n  static propTypes = {\n    samplesInfo: PropTypes.array,\n    selectedSampleNames: PropTypes.array,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    updateSelectedSampleNames: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    return (\n      <div>\n        <CategoryH3>TRACK TYPES TO SHOW PER SAMPLE</CategoryH3>\n        <OptionDiv>\n          <Checkbox label=\"RNA splice-junctions\" defaultChecked={this.props.sjOptions.showJunctions} onChange={(e, data) => this.props.updateSjOptions({ showJunctions: data.checked })} />\n          <SampleColorLabelsContainer><JunctionsIcon /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"RNA coverage\" defaultChecked={this.props.sjOptions.showCoverage} onChange={(e, data) => this.props.updateSjOptions({ showCoverage: data.checked })} />\n          <SampleColorLabelsContainer><CoverageIcon /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"BAM track\" defaultChecked={this.props.bamOptions.showBams} onChange={(e, data) => this.props.updateBamOptions({ showBams: data.checked })} />\n          <SampleColorLabelsContainer><BamIcon /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"VCF track\" defaultChecked={this.props.vcfOptions.showVcfs} onChange={(e, data) => this.props.updateVcfOptions({ showVcfs: data.checked })} />\n          <SampleColorLabelsContainer><VcfIcon /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <SamplesPanel\n          samplesInfo={this.props.samplesInfo}\n          selectedSampleNames={this.props.selectedSampleNames}\n          updateSelectedSampleNames={this.props.updateSelectedSampleNames}\n        />\n      </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedSampleNames: getSelectedSampleNames(state),\n  samplesInfo: getSamplesInfo(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateSelectedSampleNames: (selectedSampleNames) => {\n    dispatch({\n      type: 'UPDATE_SELECTED_SAMPLES',\n      newValue: selectedSampleNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { LeftSideBar as LeftSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from \"styled-components\"\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { getSamplesInfo, getSelectedSampleNames, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { MOTIFS } from '../constants'\n\n\nconst CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nconst OptionDiv = styled.div`\n  padding-top:3px;\n`\n\nconst OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n\nconst StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nconst SjOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>JUNCTION TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv><Checkbox label=\"Show known junctions\" defaultChecked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show unknown junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.colorBy} onChange={e => updateSjOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">strand</option>\n        <option value=\"motif\">donor/acceptor motif</option>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction thickness:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.thicknessBasedOn} onChange={e => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction bounce height:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.bounceHeightBasedOn} onChange={e => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n        <option value=\"random\">random</option>\n        <option value=\"distance\">distance</option>\n        <option value=\"thickness\">thickness</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction label:</OptionDiv>\n    <OptionDiv><Checkbox label=\"# uniquely-mapped\" defaultChecked={sjOptions.labelUniqueReadCount} onChange={(e, data) => updateSjOptions({ labelUniqueReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# multi-mapped\" defaultChecked={sjOptions.labelMultiMappedReadCount} onChange={(e, data) => updateSjOptions({ labelMultiMappedReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# total reads\" defaultChecked={sjOptions.labelTotalReadCount} onChange={(e, data) => updateSjOptions({ labelTotalReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"donor/acceptor motif\" defaultChecked={sjOptions.labelMotif} onChange={(e, data) => updateSjOptions({ labelMotif: data.checked })} /></OptionDiv>\n    <OptionDiv>\n      <Checkbox label=\"known junction:\" defaultChecked={sjOptions.labelIsAnnotatedJunction} onChange={(e, data) => updateSjOptions({ labelIsAnnotatedJunction: data.checked })} />\n      <OptionInput type=\"text\" defaultValue={sjOptions.labelIsAnnotatedJunctionValue} onKeyUp={e => handleTextInput(e, 'labelIsAnnotatedJunctionValue')} style={{ width: '35px'}}  />\n    </OptionDiv>\n\n    <CategoryH3>JUNCTION TRACK FILTERS</CategoryH3><br />\n    <div>\n      <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={e => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Total reads:</OptionDiv>\n      at least <OptionInput type=\"text\"  defaultValue={sjOptions.minTotalReads} onKeyUp={e => handleTextInput(e, 'minTotalReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Fraction multi-mapped:\n        <StyledPopup inverted\n          content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n          position=\"left center\"\n          on=\"click\"\n          trigger={\n            <Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />\n          } />\n      </OptionDiv>\n      at most <OptionInput type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={e => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={e => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n      {\n        MOTIFS.map(motif =>\n          <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} defaultChecked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>\n        )\n      }\n    </div>\n  </div>\n}\n\nconst BamOptionsPanel = ( { bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>BAM TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv><Checkbox label=\"View as pairs\" defaultChecked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show soft-clips\" defaultChecked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={bamOptions.colorBy} onChange={e => updateBamOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">Strand</option>\n        <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n        <option value=\"pairOrientation\">Pair orientation</option>\n        <option value=\"fragmentLength\">Insert size (TLEN)</option>\n        <option value=\"none\">None</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\n\nconst VcfOptionsPanel = ( { vcfOptions, updateVcfOptions }) => {\n\n  return <div>\n    <CategoryH3>VCF TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>\n      Display mode: &nbsp; <select defaultValue={vcfOptions.displayMode} onChange={e => updateVcfOptions({ displayMode: e.target.value })}>\n        <option value=\"COLLAPSED\">Collapse</option>\n        <option value=\"SQUISHED\">Squish</option>\n        <option value=\"EXPANDED\">Expand</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\nclass RightSideBar extends React.Component\n{\n  static propTypes = {\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    samplesInfo: PropTypes.array,\n    selectedSampleNames: PropTypes.array,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n    updateSelectedSampleNames: PropTypes.func,\n  }\n\n  render() {\n    return <div>\n      {this.props.bamOptions.showBams && <BamOptionsPanel\n        bamOptions={this.props.bamOptions}\n        updateBamOptions={this.props.updateBamOptions}\n      />}\n      {this.props.vcfOptions.showVcfs && <VcfOptionsPanel\n        vcfOptions={this.props.vcfOptions}\n        updateVcfOptions={this.props.updateVcfOptions}\n      />}\n      {(this.props.sjOptions.showCoverage || this.props.sjOptions.showJunctions) && <SjOptionsPanel\n        sjOptions={this.props.sjOptions}\n        updateSjOptions={this.props.updateSjOptions}\n      />}\n    </div>\n  }\n}\n\nconst mapStateToProps = state => ({\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n  selectedSampleNames: getSelectedSampleNames(state),\n  samplesInfo: getSamplesInfo(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateSelectedSampleNames: (selectedSampleNames) => {\n    dispatch({\n      type: 'UPDATE_SELECTED_SAMPLES',\n      newValue: selectedSampleNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { RightSideBar as RightSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport igv from 'igv'\nimport { connect } from 'react-redux'\n\nimport { getGenome, getLocus, getTracks, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\nconst StyledDiv = styled.div``\n\nconst throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n\nclass IGV extends React.Component {\n\n  static propTypes = {\n    genome: PropTypes.string.isRequired,\n    locus: PropTypes.string.isRequired,\n    tracks: PropTypes.array.isRequired,\n    locusChangedHandler: PropTypes.func,\n    trackRemovedHandler: PropTypes.func,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <StyledDiv><div ref={this.setContainerElement} /></StyledDiv>\n\n  componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    let igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus: this.props.locus,\n      genome: this.props.genome,\n      tracks: this.props.tracks,\n    }\n\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n\n      if (this.props.locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, this.props.locusChangedHandler)) //{chr, start, end, label}\n      }\n\n      if (this.props.trackRemovedHandler) {\n        this.browser.on('trackremoved', this.props.trackRemovedHandler)\n      }\n    })\n  }\n\n  shouldComponentUpdate = nextProps => {\n    if (!this.container) {\n      return false\n    }\n\n    let nextTrackSettingsByTrackName = nextProps.tracks.reduce((acc, item) => {\n      return {[item.name]: item, ...acc}\n    }, {})\n\n    console.log('IGV.nextProps:', nextProps )\n    // update or remove existing tracks\n    for (let track of this.props.tracks) {\n      const nextTrackSettings = nextTrackSettingsByTrackName[track.name]\n      if (nextTrackSettings) {\n        if ( (nextProps.sjOptions !== this.props.sjOptions && ['merged', 'wig', 'junctions'].includes(track.type) ) ||\n             (nextProps.vcfOptions !== this.props.vcfOptions && 'variant' === track.type) ||\n             (nextProps.bamOptions !== this.props.bamOptions && 'alignment' === track.type)\n        ) {\n          this.browser.removeTrackByName(track.name)\n          this.browser.loadTrack(nextTrackSettings)\n        }\n\n        // delete track from nextTrackSettingsByTrackName to indicate that it's still selected\n        delete nextTrackSettingsByTrackName[track.name]\n\n      } else {\n        // remove track that was de-selected\n        try {\n          this.browser.removeTrackByName(track.name)\n        } catch(e) {\n          console.warn('Unable to remove track', track.name, e)\n        }\n      }\n    }\n\n    // load any newly-selected track(s)\n    for (let track of Object.values(nextTrackSettingsByTrackName)) {\n      try {\n        this.browser.loadTrack(track)\n      } catch(e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    }\n\n    return false\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  locusChangedHandler: (event) => {\n    const newLocus = event.label.replace(/,/g, '')\n\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: newLocus,\n    })\n  },\n  /*\n  trackRemovedHandler: (track) => {\n    const trackName = track.name\n    dispatch({\n      type: 'UPDATE_SELECTED_SAMPLES',\n      newValue: selectedSampleNames,\n    })\n  },\n  */\n})\n\nconst mapStateToProps = state => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nexport { IGV as IGVComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n\n","import React from 'react'\nimport styled from \"styled-components\"\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from \"../utils/googleAuth\"\n\nconst StyledDiv = styled.div`\n  text-align: right;\n  margin: 20px 70px 0px 0px;\n  color: #999;\n`\n\nclass GoogleAuth extends React.Component\n{\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  async componentDidMount() {\n\n    await initGoogleClient()\n    await googleSignIn()\n    this.googleUserEmail = await getGoogleUserEmail()\n    this.setState({googleUserEmail: this.googleUserEmail})\n  }\n\n  render() {\n    if (!this.state.googleUserEmail) {\n      return <StyledDiv />\n    }\n\n    return <StyledDiv>Signed in to Google Buckets as <b>{this.state.googleUserEmail}</b></StyledDiv>\n  }\n}\n\nexport { GoogleAuth as GoogleAuthComponent }\n\nexport default GoogleAuth\n","import React from 'react'\nimport styled from \"styled-components\"\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport IGV from './IGV'\nimport GoogleAuth from './GoogleAuth'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={2}>\n          <LeftSideBar />\n        </Grid.Column>\n        <Grid.Column width={12}>\n          <IGV />\n          <GoogleAuth />\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <RightSideBar />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return Object.assign({}, state, {\n          isLoading: true,\n        })\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return Object.assign({}, state, {\n          isLoading: false,\n          errorMessage: action.error,\n        })\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { combineReducers } from 'redux'\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n} from './utils/reducerFactories'\n\n\n// root reducer\nconst rootReducer = combineReducers(Object.assign({\n  //loci: createObjectsByIdReducer('UPDATE_LOCI'),\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  samplesInfo: zeroActionsReducer,\n  selectedSampleNames: createSingleValueReducer('UPDATE_SELECTED_SAMPLES', []),\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n}))\n\nexport default rootReducer\n","/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(label, serializedState)\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\n//import logger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst INITIAL_STATE = {\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  sjOptions: {\n    trackHeight: 170,\n    showCoverage: true,\n    showJunctions: true,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 1,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelUniqueReadCount: true,\n    labelMultiMappedReadCount: true,\n    labelTotalReadCount: false,\n    labelMotif: true,\n    labelIsAnnotatedJunction: false,\n    labelIsAnnotatedJunctionValue: \" [A]\",\n  },\n  vcfOptions: {\n    displayMode: \"EXPANDED\",\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    colorBy: 'strand',\n  },\n  samplesInfo: [],\n\n  ...(window.IGV_SETTINGS || {}),\n}\n\nconst PERSIST_STATE_IN_URL = [\n  'locus', 'selectedSampleNames', 'sjOptions', 'vcfOptions', 'bamOptions',\n]\n\nconst PERSIST_STATE_IN_LOCAL_STORAGE = []\n\nconst persistStoreMiddleware = store => next => (action) => {\n  const result = next(action)\n  const nextState = store.getState()\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => { saveState(key, nextState[key]) })\n\n  const stateToSave = Object.keys(nextState)\n    .filter(key => PERSIST_STATE_IN_URL.includes(key))\n    .reduce((obj, key) => {\n      return {\n        ...obj,\n        [key]: nextState[key],\n      }\n    }, {})\n\n  window.location.hash = `#${jsurl.stringify(stateToSave)}`\n\n  return result\n}\n\nconst enhancer = compose(\n  applyMiddleware(thunkMiddleware, persistStoreMiddleware),\n)\n\n\n/**\n * Initialize the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const configureStore = (\n  rootReducer = state => state,\n  initialState = INITIAL_STATE,\n) => {\n\n  //restore any values from local storage\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      initialState[key] = v\n    }\n  })\n\n  //values from url override values from local storage\n  initialState = { ...initialState, ...jsurl.parse(window.location.hash.replace(/^#/, '')) }\n\n  console.log('Initializing store to:', initialState)\n\n  return createStore(rootReducer, initialState, enhancer)\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport rootReducer from './redux/rootReducer'\nimport { configureStore } from './redux/configureStore'\n\nfunction App() {\n  return <Provider store={configureStore(rootReducer)}>\n    <BaseLayout />\n  </Provider>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}