{"version":3,"sources":["redux/utils/reducerFactories.js","redux/utils/modalReducer.js","components/Modal.jsx","components/EditLocusList.jsx","components/SideBarUtils.jsx","constants.js","components/EditSamplePaths.jsx","utils/googleAuth.js","redux/selectors.js","components/LeftSideBar.jsx","components/RightSideBar.jsx","utils/throttle.js","components/IGV.jsx","components/UserInfo.jsx","components/BaseLayout.jsx","redux/rootReducer.js","utils/localStorage.js","redux/configureStore.js","App.js","index.js"],"names":["createSingleObjectReducer","updateActionType","initialState","debug","reducer","state","action","type","undefined","updates","console","error","newState","log","createArrayReducer","actionTypeSuffix","Array","isArray","values","valuesToRemove","filter","v","includes","modals","key","updatesById","shallowCopy","Object","entries","forEach","id","obj","createObjectsByIdReducer","getModalOpen","modalName","open","ButtonLink","styled","color","padding","props","Button","attrs","basic","fontWeight","ContainerDiv","div","StyledButton","CustomModal","handleClose","doClose","close","handleSave","trigger","this","React","cloneElement","onClick","Modal","isOpen","onClose","size","Header","title","floated","icon","Icon","name","Content","children","tabIndex","Component","defaultProps","connect","ownProps","dispatch","e","preventDefault","confirmed","getState","confirmOnClose","confirming","LinkButton","a","EditLocusListButtonAndModal","render","locusList","length","newLocusList","textAreaValue","split","Boolean","setLocusList","Form","Field","control","TextArea","style","minHeight","defaultValue","onKeyUp","target","value","placeholder","join","EditLocusList","setLocus","map","locus","i","CategoryH3","h3","OptionDiv","StyledPopup","Popup","SUPPORTED_FILE_EXTENSIONS","MOTIFS","ExampleDiv","ExamplePath","span","StyledRadio","Radio","position","EditSamplePathsButtonAndModal","getInitialState","format","samples","convertSamplesToTextAreaValue","warningMessage","errorMessage","parseTextAreaValueToSamples","trim","invalidPaths","samplesBySampleName","reduce","acc","samplePath","pathTokens","fileName","matchingExtensions","keys","ext","endsWith","push","filePrefix","replace","yaml","safeLoad","JSON","parse","sample","flat","safeDump","flowLevel","stringify","formatRadioButtonChangeHandler","data","setState","checked","label","resetButtonClickHandler","originalSamples","someSamplesHaveDescriptionOrMultipleDataFiles","some","description","setSamples","disabled","onChange","marginLeft","content","showResetButton","float","Message","originalCategories","window","INITIAL_SAMPLES_IN_CATEGORIES","category","categoryName","updateSamples","actionType","googleSignIn","gapi","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","getGoogleUserEmail","profile","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","user","reloadAuthResponse","getAuthResponse","access_token","getLocus","getRightSideBarLocusList","rightSideBarLocusList","getLeftSideBarLocusList","leftSideBarLocusList","getGenome","genome","getSamplesInCategories","samplesInCategories","getSelectedSampleNamesByCategoryName","selectedSampleNamesByCategoryName","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getUser","getSamplesByCategoryName","createSelector","getSelectedSamplesByCategoryName","samplesByCategoryName","selectedSampleNames","getTracks","selectedSamplesByCategoryName","igvTracks","selectedSamples","junctionsTrack","coverageTrack","junctions","showJunctions","url","indexURL","oauthToken","order","height","trackHeight","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelUniqueReadCount","labelMultiMappedReadCount","labelTotalReadCount","labelMotif","labelAnnotatedJunction","labelAnnotatedJunctionValue","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","coverage","showCoverage","tracks","showVcfs","vcf","indexUrl","indexed","displayMode","showBams","bam","viewAsPairs","showSoftClips","searchable","visibilityWindow","CategoryDetails","StyledIcon","JunctionsIcon","CoverageIcon","BamIcon","VcfIcon","SampleColorLabelsContainer","NoWrapDiv","SampleColorLabelsWithPopup","paddingRight","colSpan","fontSize","marginTop","navigator","clipboard","writeText","CategoryPanel","updateSelectedSampleNames","toUpperCase","href","SamplesPanel","j","SamplePanel","Checkbox","data-sample","SampleDetails","inverted","LeftSideBar","defaultChecked","updateSjOptions","updateBamOptions","updateVcfOptions","newValue","newSettings","OptionInput","input","ColorLegendIcon","ColorByLegend","handleTextInput","width","SjOptionsPanel","keyCode","parseInt","on","BamOptionsPanel","VcfOptionsPanel","RightSideBar","throttle","delay","fn","timerId","args","clearTimeout","setTimeout","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","StyledDiv","IGV","setContainerElement","element","container","ref","shouldComponentUpdate","nextProps","browser","search","nextTrackSettingsByTrackName","item","track","nextTrackSettings","ignoreNextTrackRemovedEvent","removeTrackByName","loadTrack","warn","igvBrowserOptions","Promise","resolve","load","client","init","googleUserEmail","userChangedHandler","igv","createBrowser","then","locusChangedHandler","trackRemovedHandler","event","newLocus","UserInfo","Grid","Row","Column","minWidth","rootReducer","combineReducers","assign","createSingleValueReducer","updatedSamples","previousList","updatedList","modalReducers","loadState","serializedState","localStorage","getItem","err","INITIAL_STATE","PERSIST_STATE_IN_URL","PERSIST_STATE_IN_LOCAL_STORAGE","enhancer","compose","applyMiddleware","thunkMiddleware","store","next","result","nextState","setItem","saveState","stateToSave","location","hash","jsurl","configureStore","createStore","App","BaseLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b68ef3ce.chunk.js","sourcesContent":["/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [ ...action.values ]            // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [ ...state, ...action.values ]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter(v => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return Object.assign({}, state, {\n          isLoading: true,\n        })\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return Object.assign({}, state, {\n          isLoading: false,\n          errorMessage: action.error,\n        })\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { createObjectsByIdReducer } from './reducerFactories'\n\n\n// actions\nconst UPDATE_MODAL_STATE = 'UPDATE_MODAL_STATE'\n\n// action creators\nexport const openModal = modalName => dispatch =>\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: true } } })\n\nexport const closeModal = (modalName, confirmed) => (dispatch, getState) => {\n  if (getState().modals[modalName].confirmOnClose && !confirmed) {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: true } } })\n  } else {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: false, confirming: false, confirmOnClose: null } } })\n  }\n}\n\n// root reducer\nexport default {\n  modals: createObjectsByIdReducer(UPDATE_MODAL_STATE),\n}\n\n// basic selectors\nexport const getModalOpen = (state, modalName) => state.modals[modalName] && state.modals[modalName].open\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { getModalOpen, openModal, closeModal } from '../redux/utils/modalReducer'\n\nexport const ButtonLink = styled(({ color, padding, ...props }) => <Button {...props} />).attrs({ basic: true })`\n  &.ui.button.basic {\n    white-space: nowrap;\n    border: none;\n    padding: ${props => props.padding || 0};\n    color: ${props => props.color || '#4183C4'} !important;\n    text-decoration: none;\n    font-weight: ${props => props.fontWeight || 'inherit'};\n    box-shadow: none !important;\n    user-select: auto;\n    \n    &:hover, &:focus, &:active {\n      color: #1e70bf !important;\n      background: transparent !important;\n    }\n    \n    &[class*=\"right labeled\"].icon {\n      padding-left: 0 !important;\n      padding-right: 2.1em !important;\n      \n      > .icon {\n        background-color: initial;\n      }\n    }\n  }\n`\n\nconst ContainerDiv = styled.div`\n  float: right;\n  padding: 0px 20px 20px 20px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px !important;\n  width: 100px;\n`\n\n\n\nclass CustomModal extends React.Component\n{\n  static propTypes = {\n    trigger: PropTypes.node,\n    title: PropTypes.string,\n    modalName: PropTypes.string.isRequired,\n    handleSave: PropTypes.func,\n    handleClose: PropTypes.func,\n    size: PropTypes.oneOf(['small', 'large', 'fullscreen']),\n    isOpen: PropTypes.bool,\n    open: PropTypes.func,\n    close: PropTypes.func,\n    children: PropTypes.node,\n  }\n\n  static defaultProps = {\n    size: 'small',\n  }\n\n  handleClose = () => {\n    let doClose = true\n    if (this.props.handleClose) {\n      doClose = this.props.handleClose()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  handleSave = () => {\n    let doClose = true\n    if (this.props.handleSave) {\n      doClose = this.props.handleSave()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  render() {\n    let trigger = this.props.trigger ? React.cloneElement(this.props.trigger, { onClick: this.props.open }) : null\n    return (\n      <Modal open={this.props.isOpen} trigger={trigger} onClose={this.handleClose} size={this.props.size}>\n        <Modal.Header>\n          {this.props.title}\n          <ButtonLink floated=\"right\" onClick={this.handleClose} icon={<Icon name=\"remove\" color=\"grey\" />} />\n        </Modal.Header>\n        <Modal.Content>\n          {this.props.children}\n        </Modal.Content>\n        <ContainerDiv>\n          <StyledButton tabIndex={0} onClick={this.handleClose} type=\"button\">Cancel</StyledButton>\n          <StyledButton tabIndex={0} onClick={this.handleSave} type=\"submit\" color=\"blue\">Save</StyledButton>\n        </ContainerDiv>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  isOpen: getModalOpen(state, ownProps.modalName),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: (e) => {\n      e.preventDefault()\n      dispatch(openModal(ownProps.modalName))\n    },\n    close: () => {\n      dispatch(closeModal(ownProps.modalName, true))\n    },\n  }\n}\n\nexport { CustomModal as ModalComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Modal from './Modal'\nimport { Form, TextArea } from 'semantic-ui-react'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n`\n\nclass EditLocusListButtonAndModal extends React.Component {\n\n  static propTypes = {\n    name: PropTypes.string,\n    locusList: PropTypes.array,\n    setLocusList: PropTypes.func,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.textAreaValue = (this.props.locusList || []).join('\\n')  // TextArea refs don't work - probably because its a pure component, so use this hack\n  }\n\n  render = () => {\n    const locusList = this.props.locusList\n    const title = `Locus List - ${this.props.name}`\n\n    return <Modal\n      title={title}\n      size=\"large\"\n      modalName={title}\n      trigger={\n        <LinkButton>{(locusList || []).length > 0  ? <div><br />Edit Locus List</div> : <div>Add Locus List To Side Bar</div>}</LinkButton>\n      }\n      handleSave={() => {\n        const newLocusList = this.textAreaValue.split(/[,\\s]+/).filter(Boolean)\n        this.props.setLocusList(newLocusList)\n      }}\n    >\n      <Form>\n        <Form.Field\n          control={TextArea}\n          style={{ minHeight: '300px' }}\n          defaultValue={this.textAreaValue}\n          onKeyUp={(e) => {this.textAreaValue = e.target.value}}\n          placeholder=\"Enter genomic positions, intervals, and/or gene names separated by commas, spaces, or new lines. &#10;\n            These can be in any format recognized by the IGV search bar. &#10;\n            For example: DMD, ENST00000589830, chr1:55516888, 2:152341851-152591002\">\n        </Form.Field>\n      </Form>\n      <br />\n      <b><i>NOTE:</i></b> This locus list will be saved across page refreshes in this browser, but is not recorded in the page url, so sharing a page link is not sufficient for sharing the locus list.\n    </Modal>\n  }\n}\n\nexport const EditLocusList = ({name, locusList, setLocus, setLocusList}) => {\n\n  return <div>\n    {\n      locusList.map((locus, i) =>\n        <div key={locus}>{i+1}. &nbsp; <LinkButton onClick={() => {setLocus(locus)}}>{locus}</LinkButton></div>\n      )\n    }\n    <EditLocusListButtonAndModal name={name} locusList={locusList} setLocusList={setLocusList} />\n  </div>\n}\n","import styled from 'styled-components'\nimport {Popup} from \"semantic-ui-react\";\n\nexport const CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nexport const OptionDiv = styled.div`\n  padding-top: 3px;\n`\n\nexport const StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\n","\nexport const SUPPORTED_FILE_EXTENSIONS = {\n  '.bigWig': 'coverage',\n  '.junctions.bed.gz': 'junctions',\n  '.bam': 'bam',\n  '.cram': 'bam',\n  '.vcf.gz': 'vcf',\n}\n\nexport const MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\n\nexport const DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport Modal from './Modal'\nimport { Form, Icon, Message, Popup, Radio, TextArea } from 'semantic-ui-react'\nimport yaml from 'js-yaml'\nimport { SUPPORTED_FILE_EXTENSIONS } from '../constants'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst ExampleDiv = styled.div`\n  font-family: monospace;\n  margin: 20px 30px;\n  padding: 10px;\n  background-color: #F7F7F7;\n  white-space: nowrap;\n`\n\nconst ExamplePath = styled.span`\n  font-family: monospace;\n  background-color: #F7F7F7;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin: 10px 0px 10px 20px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst StyledPopup = styled(Popup).attrs({ position: 'bottom center' })`\n`\n\n\nclass EditSamplePathsButtonAndModal extends React.Component {\n\n  static propTypes = {\n    title: PropTypes.string,\n    categoryName: PropTypes.string,\n    samples: PropTypes.array,\n    setSamples: PropTypes.func,\n    trigger: PropTypes.node,\n    showResetButton: PropTypes.bool,\n  }\n\n  getInitialState = () => {\n    const format = this.props.samples && this.props.samples.length > 0 ? 'yaml' : 'basic'\n\n    return {\n      format: format,\n      textAreaValue: this.convertSamplesToTextAreaValue(this.props.samples || [], format),\n      warningMessage: null,\n      errorMessage: null,\n    }\n  }\n  constructor(props) {\n    super(props)\n\n    this.state = this.getInitialState()\n\n    // cache originalSamples for reset button\n    if (this.props.showResetButton) {\n      const originalCategories = window.INITIAL_SAMPLES_IN_CATEGORIES.filter(category => category.categoryName === this.props.categoryName)\n      if (originalCategories.length > 0) {\n        this.originalSamples = originalCategories[0].samples\n      }\n    }\n  }\n\n  parseTextAreaValueToSamples = (textAreaValue, format) => {\n    if (!textAreaValue.trim()) {\n      return { samples: [], errorMessage: null }\n    }\n\n    let samples = []\n    let errorMessage = null\n    const invalidPaths = []\n\n    if (format === 'basic') {\n      const samplePaths = textAreaValue.split(/[,\\s]+/).filter(Boolean)\n\n      const samplesBySampleName = samplePaths.reduce((acc, samplePath) => {\n        const pathTokens = samplePath.split('/')\n        const fileName = pathTokens[pathTokens.length - 1]\n        const matchingExtensions = Object.keys(SUPPORTED_FILE_EXTENSIONS).filter(ext => fileName.endsWith(ext))\n        if (matchingExtensions.length === 0) {\n          invalidPaths.push(samplePath)\n        } else {\n          const ext = matchingExtensions[0]\n          const filePrefix = fileName.replace(ext, '')\n          if (!acc[filePrefix]) {\n            acc[filePrefix] = {}\n          }\n          acc[filePrefix].name = filePrefix\n          acc[filePrefix][SUPPORTED_FILE_EXTENSIONS[ext]] = samplePath\n        }\n        return acc\n      }, {})\n\n      samples = Object.values(samplesBySampleName)\n\n    } else if (format === 'yaml' || format === 'json') {\n      try {\n        samples = yaml.safeLoad(textAreaValue)\n        //TODO validate\n      } catch(e) {\n        errorMessage = 'Unable to parse YAML: ' + e\n      }\n    } else if (format === 'json') {\n      try {\n        samples = JSON.parse(textAreaValue)\n        //TODO validate\n      } catch(e) {\n        errorMessage = 'Unable to parse JSON: ' + e\n      }\n    }\n\n    if (invalidPaths.length > 0) {\n      errorMessage = 'These paths have unexpected file suffixes: ' + invalidPaths.join(', ')\n    }\n\n    return { samples, errorMessage }\n  }\n\n  convertSamplesToTextAreaValue = (samples, format) => {\n    if (samples.length === 0) {\n      return ''\n    }\n\n    let textAreaValue\n    if (format === 'basic') {\n      textAreaValue = samples.map(sample => Object.keys(sample).filter(key => key !== 'name' && key !== 'description').map(key => sample[key])).flat().join('\\n')\n    } else if(format === 'yaml') {\n      textAreaValue = yaml.safeDump(samples, {flowLevel: 2})\n    } else if(format === 'json') {\n      textAreaValue = JSON.stringify(samples, null, 2)\n    }\n\n    return textAreaValue\n  }\n\n  formatRadioButtonChangeHandler = (e, data) => {\n    const { samples, errorMessage } = this.parseTextAreaValueToSamples(this.state.textAreaValue, this.state.format)\n    if (errorMessage) {\n      e.preventDefault()\n      this.setState({ errorMessage: errorMessage })\n      return false\n    }\n\n    if (data.checked) {\n      const format = data.label\n      const textAreaValue = this.convertSamplesToTextAreaValue(samples, format)\n      this.setState({ format: format, textAreaValue: textAreaValue })\n    }\n  }\n\n  resetButtonClickHandler = () => {\n    const textAreaValue = this.convertSamplesToTextAreaValue(this.originalSamples, this.state.format)\n    this.setState({ textAreaValue: textAreaValue })\n  }\n\n  render = () => {\n    const title = `${this.props.title} Paths`\n\n    const someSamplesHaveDescriptionOrMultipleDataFiles = this.props.samples.some(sample => sample.description || Object.keys(sample).filter(key => key !== 'name' && key !== 'description').length > 1)\n\n    return <Modal\n      title={title}\n      size=\"large\"\n      modalName={title}\n      trigger={this.props.trigger}\n      handleSave={() => {\n        const {samples, errorMessage} = this.parseTextAreaValueToSamples(this.state.textAreaValue, this.state.format)\n\n        if (errorMessage) {\n          this.setState({ errorMessage: errorMessage })\n          return false\n        }\n\n        this.props.setSamples(samples)\n        return true\n      }}\n\n      handleClose={() => {\n        this.setState(this.getInitialState())\n        return true\n      }}\n    >\n      <div>\n        Enter google bucket path(s) for <i>.bigWig</i>, <i>.junctions.bed.gz</i>, <i>.bam/.cram</i>, or <i>.vcf.gz</i> files:<br />\n        <br />\n        <div>\n          <b>Format:</b>\n          <StyledRadio name=\"format\" label=\"basic\" disabled={someSamplesHaveDescriptionOrMultipleDataFiles} checked={this.state.format === \"basic\"} onChange={this.formatRadioButtonChangeHandler} />\n          <StyledPopup trigger={<Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />} content={\n            <div>\n              {\n                someSamplesHaveDescriptionOrMultipleDataFiles && <div>\n                  <b>[Disabled]</b> because some samples have multiple data files and/or a description.<br />\n                  <br />\n                </div>\n              }\n              <b>Basic format</b>:<br />\n              <br />\n              Enter a list of paths separated by commas, spaces or new lines. <br />\n              <br />\n              Example:<br />\n              <ExampleDiv>\n               gs://your-bucket/dir/sample-name1.bigWig <br />\n               gs://your-bucket/dir/sample2.bigWig <br />\n               gs://your-bucket/dir/sample-name1.junctions.bed.gz <br />\n               gs://your-bucket/dir/sample-name1.bam <br />\n               gs://your-bucket/dir/sample2.junctions.bed.gz <br />\n              </ExampleDiv>\n              Paths that have the same prefix (like <ExamplePath>gs://your-bucket/dir/sample-name1</ExamplePath> in the example) will be interpreted as different data types from the same sample.<br />\n              <br />\n              The order of paths doesn't matter.\n            </div>\n          }/>\n\n          <StyledRadio name=\"format\" label=\"yaml\" checked={this.state.format === \"yaml\"} onChange={this.formatRadioButtonChangeHandler} />\n          <StyledPopup trigger={<Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />}\n            content={<div>\n              <b>YAML format</b>:<br />\n              <br />\n              Provides per-sample file paths just like the Basic format, but allows additional meta-data to be specified - such as sample descriptions - as well as more flexibility in file names.<br />\n              <ExampleDiv>\n                - name: sample1 <br />\n                  &nbsp; description: description of sample1 <br />\n                  &nbsp; coverage: gs://your-bucket/dir/sample-name1.bigWig <br />\n                  &nbsp; junctions: gs://your-bucket/dir2/sample-name1.junctions.bed.gz <br />\n                  &nbsp; bam: gs://your-bucket/dir3/sample-name1.bam <br />\n                  &nbsp; vcf: gs://your-bucket/dir3/sample-name1-wgs-variants.vcf.gz <br />\n                - name: sample2 <br />\n                  &nbsp; coverage: gs://your-bucket/dir/sample2.bigWig <br />\n                  &nbsp; junctions: gs://your-bucket/dir2/sample2.junctions.bed.gz <br />\n              </ExampleDiv>\n            </div>}\n          />\n          <StyledRadio name=\"format\" label=\"json\" checked={this.state.format === \"json\"} onChange={this.formatRadioButtonChangeHandler} />\n          <StyledPopup trigger={<Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />}\n            content={\n              <div>\n                <b>JSON format</b>:<br />\n                <br />\n                Identical to YAML, but represented in the JSON format.<br />\n                <ExampleDiv>\n                  {'[{'}<br />\n                    \"name\": \"sample1\",<br />\n                    \"coverage\": \"gs://your-bucket/dir/sample-name1.bigWig\",<br />\n                    \"junctions\": \"gs://your-bucket/dir2/sample-name1.junctions.bed.gz\",<br />\n                    \"bam\": \"gs://your-bucket/dir3/sample-name1.bam\",<br />\n                    \"vcf\": \"gs://your-bucket/dir3/sample-name1-wgs-variants.vcf.gz\"<br />\n                  {'}, {'}<br />\n                    \"name\": \"sample2\",<br />\n                    \"coverage\": \"gs://your-bucket/dir/sample2.bigWig\",<br />\n                    \"junctions\": \"gs://your-bucket/dir2/sample2.junctions.bed.gz\"<br />\n                  {'}]'}<br />\n                </ExampleDiv>\n              </div>\n            }\n          />\n          {\n            this.props.showResetButton &&\n            <LinkButton style={{ float: 'right' }} onClick={this.resetButtonClickHandler}>Reset To {this.originalSamples.length} Original Samples</LinkButton>\n\n          }\n        </div>\n      </div>\n      <Form>\n        <TextArea\n          style={{ minHeight: '300px' }}\n          value={this.state.textAreaValue}\n          onChange={(e) => {\n            this.setState({textAreaValue: e.target.value})\n          }}\n          placeholder=\"Enter file path(s)\">\n        </TextArea>\n      </Form>\n\n      <br />\n      <b><i>NOTE:</i></b> These paths will be saved across page refreshes in this browser, but will not be recorded in the page url, so sharing a page link is not sufficient for sharing the paths.\n      {\n        this.state.warningMessage &&\n        <Message color='yellow'>\n          {this.state.warningMessage}\n        </Message>\n      }\n      {\n        this.state.errorMessage &&\n        <Message color='red'>\n          {this.state.errorMessage}\n        </Message>\n      }\n    </Modal>\n  }\n}\n\nconst AddOrEditSamplePaths = ({category, updateSamples}) => {\n  return <div>\n    <EditSamplePathsButtonAndModal\n      key={`${JSON.stringify(category.samples)}_add`}\n      title={`Add ${category.categoryName}`}\n      categoryName={category.categoryName}\n      samples={[]}\n      setSamples={(samples) => updateSamples('ADD', category.categoryName, samples)}\n      trigger={<LinkButton>Add {category.samples.length === 0 ? category.categoryName : null} Paths</LinkButton>}\n    />\n    {category.samples.length > 0 && <EditSamplePathsButtonAndModal\n      key={`${JSON.stringify(category.samples)}_edit`}\n      title={`Edit ${category.categoryName}`}\n      categoryName={category.categoryName}\n      samples={category.samples}\n      setSamples={(samples) => updateSamples('SET', category.categoryName, samples)}\n      trigger={<LinkButton>Edit Paths</LinkButton>}\n      showResetButton\n    />}\n  </div>\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateSamples: (actionType, categoryName, samples) => {\n    dispatch({\n      type: `${actionType}_SAMPLES`,\n      categoryName: categoryName,\n      samples: samples,\n    })\n  },\n})\n\nexport default connect(null, mapDispatchToProps)(AddOrEditSamplePaths)\n","/* eslint-disable no-undef */\n\nconst RNA_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise(resolve => {\n  if (typeof gapi === 'undefined') {\n    return\n  }\n\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        'clientId': RNA_VIEWER_CLIENT_ID,\n        'scope': 'https://www.googleapis.com/auth/devstorage.read_only',\n        'discoveryDocs': ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest']\n      })\n\n      resolve()\n    })\n  })\n})\n\nexport const googleSignIn = async () => {\n\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(!authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const profile = authInstance.currentUser.get().getBasicProfile()\n\n  return profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance.currentUser.get()\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if(authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith(\"gs://\")) {\n    console.error(`${gsPath} doesn't start with \"gs://\"` )\n    return\n  }\n\n  const gsPathParts = gsPath.split(\"/\")\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"` )\n    return\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return await gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults:1000})\n}\n","import { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\nexport const getLocus = state => state.locus\nexport const getRightSideBarLocusList = state => state.rightSideBarLocusList\nexport const getLeftSideBarLocusList = state => state.leftSideBarLocusList\nexport const getGenome = state => state.genome\nexport const getSamplesInCategories = state => state.samplesInCategories\nexport const getSelectedSampleNamesByCategoryName = state => state.selectedSampleNamesByCategoryName\nexport const getSjOptions = state => state.sjOptions\nexport const getVcfOptions = state => state.vcfOptions\nexport const getBamOptions = state => state.bamOptions\nexport const getUser = state => state.user\n\n/**\n * Expects sample info like:\n *\n * [\n *    {\n *      label: 'category1',\n *      samples : [\n *          { sample1 .. },\n *          { sample2 .. },\n *          ...\n *      ]\n *    },\n *    {\n *      label: 'category2',\n *      samples : [\n *        { sample3 .. },\n *        { sample4 .. },\n *        ...\n *      ]\n *    },\n * ]\n */\n\n\n\nexport const getSamplesByCategoryName = createSelector(\n  getSamplesInCategories,\n  (samplesInCategories) => {\n    return samplesInCategories.reduce((acc, category) => {\n      return { ...acc, [category.categoryName]: category.samples }\n    }, {})\n  })\n\n\n\nexport const getSelectedSamplesByCategoryName = createSelector(\n  getSelectedSampleNamesByCategoryName,\n  getSamplesByCategoryName,\n  (selectedSampleNamesByCategoryName, samplesByCategoryName) => {\n    return Object.entries(selectedSampleNamesByCategoryName).reduce((acc, [categoryName, selectedSampleNames]) => {\n      if (!samplesByCategoryName[categoryName]) {\n        return acc\n      }\n      return { ...acc, [categoryName]: samplesByCategoryName[categoryName].filter(sample => selectedSampleNames.includes(sample.name)) }\n    }, {})\n  })\n\n\nexport const getTracks = createSelector(\n  getSelectedSamplesByCategoryName,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  (selectedSamplesByCategoryName, sjOptions, vcfOptions, bamOptions) => {\n    const igvTracks = []\n\n    Object.values(selectedSamplesByCategoryName).forEach((selectedSamples) => selectedSamples.forEach((sample, i) => {\n      //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n      let junctionsTrack\n      if (sample.junctions && sjOptions.showJunctions) {\n        junctionsTrack = {\n          type: 'junctions',\n          format: 'bed',\n          url: sample.junctions,\n          indexURL: `${sample.junctions}.tbi`,\n          oauthToken: getGoogleAccessToken,\n          order: i*10,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n          minTotalReads: sjOptions.minTotalReads,\n          maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n          minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n          thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n          bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n          colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n          colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n          hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n          labelUniqueReadCount: sjOptions.labelUniqueReadCount,\n          labelMultiMappedReadCount: sjOptions.labelMultiMappedReadCount,\n          labelTotalReadCount: sjOptions.labelTotalReadCount,\n          labelMotif: sjOptions.labelMotif,\n          labelAnnotatedJunction: sjOptions.labelAnnotatedJunction && sjOptions.labelAnnotatedJunctionValue,\n          hideAnnotatedJunctions: sjOptions.hideAnnotated,\n          hideUnannotatedJunctions: sjOptions.hideUnannotated,\n          hideMotifs: MOTIFS.filter( motif => sjOptions[`hideMotif${motif}`] ), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n        }\n      }\n\n      let coverageTrack\n      if(sample.coverage && sjOptions.showCoverage) {\n        coverageTrack = {\n          type: 'wig',\n          format: 'bigwig',\n          url: sample.coverage,\n          oauthToken: getGoogleAccessToken,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          order: i*10 + 1,\n        }\n      }\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${sample.junctions} & ${sample.coverage} track #`, i*10 + 2)\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          order: i*10 + 2,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${sample.junctions} track #`, i*10 )\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [junctionsTrack],\n          order: i*10 + 3,\n        })\n      } else if (coverageTrack) {\n        console.log(`Adding ${sample.coverage} track #`, i*10 + 1)\n        igvTracks.push(coverageTrack)\n      }\n\n      if (vcfOptions.showVcfs && sample.vcf) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.vcf} track #`, i*10 + 4)\n\n        igvTracks.push({\n          type: 'variant',\n          format: 'vcf',\n          url: sample.vcf,\n          indexUrl: `${sample.vcf}.tbi`,\n          indexed: true,\n          name: `${sample.name} vcf`,\n          displayMode: vcfOptions.displayMode,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 4,\n        })\n      }\n\n      if (bamOptions.showBams && sample.bam) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.bam} track #`, i*10 + 5)\n\n        igvTracks.push({\n          type: 'alignment',\n          url: sample.bam,\n          indexed: true,\n          name: `${sample.name} bam`,\n          height: bamOptions.trackHeight,\n          colorBy: bamOptions.colorBy,\n          viewAsPairs: bamOptions.viewAsPairs,\n          showSoftClips: bamOptions.showSoftClips,\n          oauthToken: getGoogleAccessToken,\n          order: i*10 + 5,\n        })\n      }\n    }))\n\n\n    igvTracks.push({\n      name: 'Gencode v32 Genes',\n      format: \"refgene\",\n      url: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz\",\n      indexUrl: \"gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz.tbi\",\n      indexed: true,\n      searchable: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: \"EXPANDED\",\n      order: 1000001,\n      color: \"rgb(76,171,225)\",\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  }\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { EditLocusList } from './EditLocusList'\nimport { CategoryH3, OptionDiv, StyledPopup } from './SideBarUtils'\nimport AddOrEditSamplePaths from './EditSamplePaths'\nimport { getLeftSideBarLocusList, getSamplesInCategories, getSelectedSampleNamesByCategoryName, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\n\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst StyledIcon = styled.div.attrs({ name: \"stop\" })`\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\nconst JunctionsIcon = styled(StyledIcon)`\n   color: #B0B0EC;\n   border: 3px solid #B0B0EC;\n`\n\nconst CoverageIcon = styled(StyledIcon)`\n   color: #B5D29A;\n   border: 3px solid #B5D29A;\n`\n\nconst BamIcon = styled(StyledIcon)`\n   color: #5CB6EA;\n   border: 3px solid #5CB6EA;\n`\n\nconst VcfIcon = styled(StyledIcon)`\n   color: #E6A01B;\n   border: 3px solid #E6A01B;\n`\n\nconst SampleColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\nconst SampleColorLabelsWithPopup = ({sample}) => <Popup\n    content={\n      <table>\n        <tbody>\n          {sample.junctions && <tr><td style={{ paddingRight: '10px' }}><b>Junctions:</b></td><td><NoWrapDiv>{sample.junctions}</NoWrapDiv></td></tr>}\n          {sample.coverage && <tr><td><b>Coverage:</b></td><td><NoWrapDiv>{sample.coverage}</NoWrapDiv></td></tr>}\n          {sample.bam && <tr><td><b>Bam:</b></td><td><NoWrapDiv>{sample.bam}</NoWrapDiv></td></tr>}\n          {sample.vcf && <tr><td><b>Vcf:</b></td><td><NoWrapDiv>{sample.vcf}</NoWrapDiv></td></tr>}\n          <tr><td colSpan={2}><div style={{fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <SampleColorLabelsContainer onClick={() =>\n        navigator.clipboard.writeText(`${(sample.bam+\"\\n\") || \"\"}${(sample.junctions+\"\\n\") || \"\"}${(sample.coverage+\"\\n\") || \"\"}${(sample.vcf+\"\\n\") || \"\"}`)\n      }>\n        {sample.junctions && <JunctionsIcon />}\n        {sample.coverage && <CoverageIcon />}\n        {sample.bam && <BamIcon />}\n        {sample.vcf && <VcfIcon />}\n      </SampleColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />\n\n\nconst CategoryPanel = ({category, updateSelectedSampleNames}) =>\n  <div>\n    <CategoryH3>{category.categoryName.toUpperCase()}</CategoryH3>\n    {\n      category.samples.length >= 12 && <CategoryDetails>{`(N=${category.samples.length}) `}</CategoryDetails>\n    }\n    {\n      category.samples.length > 0 &&\n      <div>\n        <a href=\"#\" onClick={(e) => {\n          e.preventDefault()\n          updateSelectedSampleNames('SET', category.categoryName, [])\n        }}>Uncheck All</a>\n      </div>\n    }\n  </div>\n\n\nconst SamplesPanel = ({samplesInCategories, selectedSampleNamesByCategoryName, updateSelectedSampleNames}) =>\n  samplesInCategories.map((category, i) =>\n    <div key={category.categoryName || i}>\n      <CategoryPanel category={category} updateSelectedSampleNames={updateSelectedSampleNames} />\n      {\n        category.samples.map((sample, j) => {\n          const selectedSampleNames = selectedSampleNamesByCategoryName[category.categoryName] || []\n          return <SamplePanel key={sample.name || j} sample={sample} categoryName={category.categoryName} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n        })\n      }\n      <AddOrEditSamplePaths category={category} />\n    </div>,\n  )\n\nconst SamplePanel = ({sample, categoryName, selectedSampleNames, updateSelectedSampleNames}) =>\n  <NoWrapDiv>\n    <Checkbox\n      label={sample.name}\n      checked={selectedSampleNames.includes(sample.name)}\n      data-sample={sample.name}\n      onChange={(e, data) => updateSelectedSampleNames( data.checked ? 'ADD' : 'REMOVE', categoryName, [ data['data-sample'] ]) }\n    />\n    <SampleDetails sample={sample} />\n    <SampleColorLabelsWithPopup sample={sample} />\n  </NoWrapDiv>\n\nconst SampleDetails = ({sample}) => {\n  return (sample.description ?\n    <StyledPopup inverted\n      content={sample.description}\n      position=\"right center\"\n      trigger={\n        <Icon style={{marginLeft: '10px'}} name=\"question circle outline\" />\n      } /> : null)\n}\n\nclass LeftSideBar extends React.Component\n{\n  static propTypes = {\n    locusList: PropTypes.array,\n    samplesInCategories: PropTypes.array,\n    selectedSampleNamesByCategoryName: PropTypes.object,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    setLocus: PropTypes.func,\n    setLocusList: PropTypes.func,\n    updateSelectedSampleNames: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    return (\n      <div>\n        <EditLocusList name=\"Left Side Bar\" locusList={this.props.locusList} setLocus={this.props.setLocus} setLocusList={this.props.setLocusList} />\n        <CategoryH3>TRACK TYPES TO SHOW PER SAMPLE</CategoryH3>\n        <OptionDiv>\n          <Checkbox label=\"RNA splice-junctions\" defaultChecked={this.props.sjOptions.showJunctions} onChange={(e, data) => this.props.updateSjOptions({ showJunctions: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a splice junction track for each sample selected below.'} position=\"right center\" trigger={<JunctionsIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"RNA coverage\" defaultChecked={this.props.sjOptions.showCoverage} onChange={(e, data) => this.props.updateSjOptions({ showCoverage: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have coverage data. Select this checkbox to show a coverage track for each sample selected below.'} position=\"right center\" trigger={<CoverageIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"BAM track\" defaultChecked={this.props.bamOptions.showBams} onChange={(e, data) => this.props.updateBamOptions({ showBams: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have alignment data. Select this checkbox to show a bam track for each sample selected below.'} position=\"right center\" trigger={<BamIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"VCF track\" defaultChecked={this.props.vcfOptions.showVcfs} onChange={(e, data) => this.props.updateVcfOptions({ showVcfs: data.checked })} />\n          <SampleColorLabelsContainer><Popup content={'This color stripe marks samples that have splice junction data. Select this checkbox to show a vcf track for each sample selected below.'} position=\"right center\" trigger={<VcfIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <SamplesPanel\n          samplesInCategories={this.props.samplesInCategories}\n          selectedSampleNamesByCategoryName={this.props.selectedSampleNamesByCategoryName}\n          updateSelectedSampleNames={this.props.updateSelectedSampleNames}\n        />\n      </div>)\n  }\n}\n\nconst mapStateToProps = state => ({\n  locusList: getLeftSideBarLocusList(state),\n  samplesInCategories: getSamplesInCategories(state),\n  selectedSampleNamesByCategoryName: getSelectedSampleNamesByCategoryName(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_LEFT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSelectedSampleNames: (actionType, categoryName, selectedSampleNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_SAMPLE_NAMES`,\n      categoryName: categoryName,\n      selectedSampleNames: selectedSampleNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { LeftSideBar as LeftSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup, Radio } from 'semantic-ui-react'\nimport { EditLocusList } from './EditLocusList'\nimport { CategoryH3, OptionDiv, StyledPopup } from './SideBarUtils'\nimport { getRightSideBarLocusList, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\n\nconst OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n\nconst ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if ( sjOptions.colorBy === \"strand\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n      <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n    </div>\n  } else if ( sjOptions.colorBy === \"motif\" ) {\n    // IGV.js Dark2 color palette\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n    </div>\n  } else if ( sjOptions.colorBy === \"numUniqueReads\" || sjOptions.colorBy === \"numReads\" ) {\n    return  <div>\n      # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n      &nbsp;≤ &nbsp;\n      <OptionInput\n        type=\"text\"\n        defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n        onKeyUp={e => handleTextInput(e, 'colorByNumReadsThreshold')}\n        style={{ width: '35px'}}\n      />\n      &nbsp; &lt; &nbsp;\n      <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n\n    </div>\n  } else if ( sjOptions.colorBy === \"isAnnotatedJunction\" ) {\n    return  <div>\n      <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n      <ColorLegendIcon name=\"stop\" style={{ color: 'orange'  }} /> novel junction\n    </div>\n  } else {\n    return <div></div>\n  }\n}\n\nconst SjOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>JUNCTION TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.colorBy} onChange={e => updateSjOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">strand</option>\n        <option value=\"motif\">donor/acceptor motif</option>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n      <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n    </OptionDiv>\n    <OptionDiv>Junction thickness:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.thicknessBasedOn} onChange={e => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n        <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n        <option value=\"numReads\"># total reads</option>\n        <option value=\"isAnnotatedJunction\">is known junction</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction bounce height:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={sjOptions.bounceHeightBasedOn} onChange={e => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n        <option value=\"random\">random</option>\n        <option value=\"distance\">distance</option>\n        <option value=\"thickness\">thickness</option>\n      </select>\n    </OptionDiv>\n    <OptionDiv>Junction label:</OptionDiv>\n    <OptionDiv><Checkbox label=\"# uniquely-mapped\" defaultChecked={sjOptions.labelUniqueReadCount} onChange={(e, data) => updateSjOptions({ labelUniqueReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# multi-mapped\" defaultChecked={sjOptions.labelMultiMappedReadCount} onChange={(e, data) => updateSjOptions({ labelMultiMappedReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"# total reads\" defaultChecked={sjOptions.labelTotalReadCount} onChange={(e, data) => updateSjOptions({ labelTotalReadCount: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"donor/acceptor motif\" defaultChecked={sjOptions.labelMotif} onChange={(e, data) => updateSjOptions({ labelMotif: data.checked })} /></OptionDiv>\n    <OptionDiv>\n      <Checkbox label=\"known junction:\" defaultChecked={sjOptions.labelAnnotatedJunction} onChange={(e, data) => updateSjOptions({ labelAnnotatedJunction: data.checked })} />\n      <OptionInput type=\"text\" defaultValue={sjOptions.labelAnnotatedJunctionValue} onKeyUp={e => handleTextInput(e, 'labelAnnotatedJunctionValue')} style={{ width: '35px'}}  />\n    </OptionDiv>\n\n    <CategoryH3>JUNCTION TRACK FILTERS</CategoryH3><br />\n    <OptionDiv>\n      Show Strands:\n      <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n      <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n    </OptionDiv>\n    <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n\n    <OptionDiv><Checkbox label=\"Show known junctions\" defaultChecked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n    <div>\n      <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={e => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Total reads:</OptionDiv>\n      at least <OptionInput type=\"text\"  defaultValue={sjOptions.minTotalReads} onKeyUp={e => handleTextInput(e, 'minTotalReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Fraction multi-mapped:\n        <StyledPopup inverted\n          content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n          position=\"left center\"\n          on=\"click\"\n          trigger={\n            <Icon style={{marginLeft: '8px'}} name=\"question circle outline\" />\n          } />\n      </OptionDiv>\n      at most <OptionInput type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={e => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n      at least <OptionInput type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={e => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value))} />\n    </div>\n    <div>\n      <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n      {\n        MOTIFS.map(motif =>\n          <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} defaultChecked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>\n        )\n      }\n    </div>\n  </div>\n}\n\nconst BamOptionsPanel = ( { bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value=null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return <div>\n    <CategoryH3>BAM TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={e => handleTextInput(e, 'trackHeight', parseInt(e.target.value))} /> px</OptionDiv>\n    <OptionDiv><Checkbox label=\"View as pairs\" defaultChecked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n    <OptionDiv><Checkbox label=\"Show soft-clips\" defaultChecked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n    <OptionDiv>Color by:</OptionDiv>\n    <OptionDiv>\n      <select defaultValue={bamOptions.colorBy} onChange={e => updateBamOptions({ colorBy: e.target.value })}>\n        <option value=\"strand\">Strand</option>\n        <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n        <option value=\"pairOrientation\">Pair orientation</option>\n        <option value=\"fragmentLength\">Insert size (TLEN)</option>\n        <option value=\"none\">None</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\n\nconst VcfOptionsPanel = ( { vcfOptions, updateVcfOptions }) => {\n\n  return <div>\n    <CategoryH3>VCF TRACK <br />OPTIONS</CategoryH3><br />\n    <OptionDiv>\n      Display mode: &nbsp; <select defaultValue={vcfOptions.displayMode} onChange={e => updateVcfOptions({ displayMode: e.target.value })}>\n        <option value=\"COLLAPSED\">Collapse</option>\n        <option value=\"SQUISHED\">Squish</option>\n        <option value=\"EXPANDED\">Expand</option>\n      </select>\n    </OptionDiv>\n  </div>\n}\n\n\nclass RightSideBar extends React.Component\n{\n  static propTypes = {\n    locusList: PropTypes.array,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n    setLocus: PropTypes.func,\n    setLocusList: PropTypes.func,\n    updateSjOptions: PropTypes.func,\n    updateVcfOptions: PropTypes.func,\n    updateBamOptions: PropTypes.func,\n  }\n\n  render() {\n    return <div>\n      <EditLocusList\n        name=\"Right Side Bar\"\n        locusList={this.props.locusList}\n        setLocus={this.props.setLocus}\n        setLocusList={this.props.setLocusList}\n      />\n\n      {this.props.bamOptions.showBams && <BamOptionsPanel\n        bamOptions={this.props.bamOptions}\n        updateBamOptions={this.props.updateBamOptions}\n      />}\n      {this.props.vcfOptions.showVcfs && <VcfOptionsPanel\n        vcfOptions={this.props.vcfOptions}\n        updateVcfOptions={this.props.updateVcfOptions}\n      />}\n      {(this.props.sjOptions.showCoverage || this.props.sjOptions.showJunctions) && <SjOptionsPanel\n        sjOptions={this.props.sjOptions}\n        updateSjOptions={this.props.updateSjOptions}\n      />}\n    </div>\n  }\n}\n\nconst mapStateToProps = state => ({\n  locusList: getRightSideBarLocusList(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_RIGHT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { RightSideBar as RightSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","\nexport const throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport { getGenome, getLocus, getTracks, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\nimport { throttle } from '../utils/throttle'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\nconst StyledDiv = styled.div``\n\n\nclass IGV extends React.Component {\n\n  static propTypes = {\n    genome: PropTypes.string.isRequired,\n    locus: PropTypes.string.isRequired,\n    tracks: PropTypes.array.isRequired,\n    locusChangedHandler: PropTypes.func,\n    trackRemovedHandler: PropTypes.func,\n    userChangedHandler: PropTypes.func,\n    sjOptions: PropTypes.object,\n    vcfOptions: PropTypes.object,\n    bamOptions: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextTrackRemovedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <StyledDiv><div ref={this.setContainerElement} /></StyledDiv>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    let igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus: this.props.locus,\n      genome: this.props.genome,\n      tracks: this.props.tracks,\n    }\n\n    // TODO check if any tracks need google sign-in\n    await initGoogleClient()\n    await googleSignIn()\n    let googleUserEmail = await getGoogleUserEmail()\n    this.props.userChangedHandler(googleUserEmail)\n\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n\n      if (this.props.locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, this.props.locusChangedHandler)) //{chr, start, end, label}\n      }\n\n      if (this.props.trackRemovedHandler) {\n        this.browser.on('trackremoved', track => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            this.props.trackRemovedHandler(track)\n          }\n\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n    })\n  }\n\n  shouldComponentUpdate = nextProps => {\n    if (!this.container) {\n      return false\n    }\n\n    if (nextProps.locus && nextProps.locus !== this.props.locus) {\n      this.browser.search(nextProps.locus)\n    }\n\n    let nextTrackSettingsByTrackName = nextProps.tracks.reduce((acc, item) => {\n      return {[item.name]: item, ...acc}\n    }, {})\n\n    console.log('IGV.nextProps:', nextProps )\n    // update or remove existing tracks\n    for (let track of this.props.tracks) {\n      // TODO check if any tracks need google sign-in\n\n      const nextTrackSettings = nextTrackSettingsByTrackName[track.name]\n      if (nextTrackSettings) {\n        if ( (nextProps.sjOptions !== this.props.sjOptions && ['merged', 'wig', 'junctions'].includes(track.type) ) ||\n             (nextProps.vcfOptions !== this.props.vcfOptions && 'variant' === track.type) ||\n             (nextProps.bamOptions !== this.props.bamOptions && 'alignment' === track.type)\n        ) {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n          this.browser.loadTrack(nextTrackSettings)\n        }\n\n        // delete track from nextTrackSettingsByTrackName to indicate that it's still selected\n        delete nextTrackSettingsByTrackName[track.name]\n\n      } else {\n        // remove track that was de-selected\n        try {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n        } catch(e) {\n          console.warn('Unable to remove track', track.name, e)\n        }\n      }\n    }\n\n    // load any newly-selected track(s)\n    for (let track of Object.values(nextTrackSettingsByTrackName)) {\n      try {\n        this.browser.loadTrack(track)\n      } catch(e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    }\n\n    return false\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  locusChangedHandler: (event) => {\n    const newLocus = event.label.replace(/,/g, '')\n\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: newLocus,\n    })\n  },\n\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: {googleUserEmail}\n    })\n  },\n\n  trackRemovedHandler: (track) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLE_NAMES',\n      values: [track.name],\n    })\n  },\n})\n\nexport { IGV as IGVComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { getUser } from '../redux/selectors'\nimport { connect } from 'react-redux'\n\nconst StyledDiv = styled.div`\n  text-align: right;\n  margin: 70px 70px 0px 0px;\n  color: #999;\n`\n\nclass UserInfo extends React.Component\n{\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n  }\n\n  render() {\n    if (!this.props.user.googleUserEmail) {\n      return <StyledDiv />\n    }\n\n    return <StyledDiv>Signed in to Google Buckets as <b>{this.props.user.googleUserEmail}</b></StyledDiv>\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: getUser(state),\n\n})\n\nexport { UserInfo as UserInfoComponent }\n\nexport default connect(mapStateToProps)(UserInfo)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport IGV from './IGV'\nimport UserInfo from './UserInfo'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nconst SIDE_BAR_WIDTH = 210\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <LeftSideBar />\n        </Grid.Column>\n        <Grid.Column style={{ minWidth: '800px', width: `calc(100% - ${2*SIDE_BAR_WIDTH}px)` }}>\n          <IGV />\n          <UserInfo />\n        </Grid.Column>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <RightSideBar />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","import { combineReducers } from 'redux'\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\nimport modalReducers from './utils/modalReducer'\n\n\nconst samplesInCategoriesReducer = (state, action) => {\n  if (!action || !action.categoryName || !action.samples) {\n    return state || []\n  }\n\n  return state.map(category => {\n    if(category.categoryName !== action.categoryName) {\n      return category\n    }\n\n    let updatedSamples\n    switch (action.type) {\n      case 'SET_SAMPLES':\n        updatedSamples = [...action.samples]\n        break\n\n      case 'ADD_SAMPLES':\n        updatedSamples = [...category.samples, ...action.samples]\n        break\n\n      default:\n        updatedSamples = category.samples\n    }\n\n    return {\n      ...category,\n      samples: updatedSamples,\n    }\n  })\n}\n\n\nconst selectedSampleNamesByCategoryNameReducer = (state, action) => {\n  if (!action || !action.categoryName || !Array.isArray(action.selectedSampleNames)) {\n    return state || {}\n  }\n\n  const previousList = state[action.categoryName] || []\n  switch (action.type) {\n    case `SET_SELECTED_SAMPLE_NAMES`:\n    case `ADD_SELECTED_SAMPLE_NAMES`:\n    case `REMOVE_SELECTED_SAMPLE_NAMES`:\n      let updatedList\n      if (action.type === `SET_SELECTED_SAMPLE_NAMES`) {\n        updatedList = [ ...action.selectedSampleNames ]            // make a copy of action.values\n      } else if (action.type === `ADD_SELECTED_SAMPLE_NAMES`) {\n        updatedList = [ ...previousList, ...action.selectedSampleNames ]\n      } else {\n        const valuesToRemove = action.selectedSampleNames\n        updatedList = previousList.filter(v => !valuesToRemove.includes(v))\n      }\n\n      return {\n        ...state,\n        [action.categoryName]: updatedList,\n      }\n  }\n\n  return state\n}\n\n\n// root reducer\nconst rootReducer = combineReducers(Object.assign({\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  rightSideBarLocusList: createArrayReducer('RIGHT_SIDE_BAR_LOCUS_LIST'),\n  leftSideBarLocusList: createArrayReducer('LEFT_SIDE_BAR_LOCUS_LIST'),\n  samplesInCategories: samplesInCategoriesReducer,\n  selectedSampleNamesByCategoryName: selectedSampleNamesByCategoryNameReducer,\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n}, modalReducers))\n\nexport default rootReducer\n","/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(label, serializedState)\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\n//import logger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst INITIAL_STATE = {\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  sjOptions: {\n    trackHeight: 170,\n    showCoverage: true,\n    showJunctions: true,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 1,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelUniqueReadCount: true,\n    labelMultiMappedReadCount: true,\n    labelTotalReadCount: false,\n    labelMotif: true,\n    labelAnnotatedJunction: false,\n    labelAnnotatedJunctionValue: \" [A]\",\n  },\n  vcfOptions: {\n    displayMode: \"EXPANDED\",\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    colorBy: 'strand',\n  },\n\n  ...(window.IGV_SETTINGS || {}),\n}\n\nconst PERSIST_STATE_IN_URL = [\n  'locus', 'selectedSampleNamesByCategoryName', 'sjOptions', 'vcfOptions', 'bamOptions',\n]\n\nconst PERSIST_STATE_IN_LOCAL_STORAGE = [\n  'samplesInCategories', 'leftSideBarLocusList', 'rightSideBarLocusList',\n]\n\nconst persistStoreMiddleware = store => next => (action) => {\n  const result = next(action)\n  const nextState = store.getState()\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => { saveState(key, nextState[key]) })\n\n  const stateToSave = Object.keys(nextState)\n    .filter(key => PERSIST_STATE_IN_URL.includes(key))\n    .reduce((obj, key) => {\n      return {\n        ...obj,\n        [key]: nextState[key],\n      }\n    }, {})\n\n  window.location.hash = `#${jsurl.stringify(stateToSave)}`\n\n  return result\n}\n\nconst enhancer = compose(\n  applyMiddleware(thunkMiddleware, persistStoreMiddleware),\n)\n\n\n/**\n * Initialize the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const configureStore = (\n  rootReducer = state => state,\n  initialState = INITIAL_STATE,\n) => {\n\n  //restore any values from local storage\n  PERSIST_STATE_IN_LOCAL_STORAGE.forEach((key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      initialState[key] = v\n    }\n  })\n\n  //values from url override values from local storage\n  initialState = { ...initialState, ...jsurl.parse(window.location.hash.replace(/^#/, '')) }\n\n  console.log('Initializing store to:', initialState)\n\n  return createStore(rootReducer, initialState, enhancer)\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport rootReducer from './redux/rootReducer'\nimport { configureStore } from './redux/configureStore'\n\nfunction App() {\n  return <Provider store={configureStore(rootReducer)}>\n    <BaseLayout />\n  </Provider>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}