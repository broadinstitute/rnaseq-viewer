{"version":3,"sources":["components/SideBarUtils.jsx","components/optionsPanels/ColorPicker.jsx","constants.js","utils/googleAuth.js","redux/selectors.js","components/SelectedDataPanel.jsx","redux/utils/reducerFactories.js","redux/utils/modalReducer.js","components/Modal.jsx","components/EditLocusList.jsx","components/AddRows.jsx","components/SearchRows.jsx","components/LeftSideBar.jsx","components/optionsPanels/BamOptionsPanel.jsx","components/optionsPanels/VcfOptionsPanel.jsx","components/optionsPanels/SpliceJunctionsOptionsPanel.jsx","components/optionsPanels/GcnvOptionsPanel.jsx","components/RightSideBar.jsx","components/About.jsx","components/UserInfo.jsx","components/Header.jsx","utils/throttle.js","components/IGV.jsx","components/RequestStatus.jsx","utils/localStorage.js","redux/initialState.js","components/InitialSettingsForm.jsx","components/BaseLayout.jsx","redux/rootReducer.js","App.js","index.js"],"names":["CategoryH3","styled","h3","StyledPopup","Popup","ColorLegendIcon","Icon","OptionDiv","div","OptionInputDiv","OptionInput","input","ColorSwatchBorder","ColorSwatch","attrs","flowing","ColorPicker","props","handleChange","color","setState","handleApply","colorChangedHandler","hex","state","on","position","trigger","style","background","this","content","onChangeComplete","onChange","newColor","React","Component","SJ_MOTIFS","googleSignIn","a","gapi","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","getGoogleUserEmail","profile","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","user","reloadAuthResponse","getAuthResponse","access_token","getLocus","locus","getRightSideBarLocusList","rightSideBarLocusList","getLeftSideBarLocusList","leftSideBarLocusList","getGenome","genome","getDataTypesToShow","dataTypesToShow","getRowsInCategories","rowsInCategories","getSelectedRowNamesByCategoryName","selectedRowNamesByCategoryName","getSelectedSamplesByCategoryNameAndRowName","selectedSamplesByCategoryNameAndRowName","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getGcnvOptions","gcnvOptions","getUser","getInitialSettingsUrl","initialSettingsUrl","getInitialSettingsUrlHasBeenApplied","initialSettingsUrlHasBeenApplied","getAllDataTypes","createSelector","reduce","acc","category","rows","forEach","row","data","type","add","Set","getEnabledDataTypes","allDataTypes","length","filter","dataType","includes","getRowsByCategoryName","categoryName","getSelectedRowsByCategoryName","rowsByCategoryName","Object","entries","selectedRowNames","name","getTracks","selectedRowsByCategoryName","igvTracks","i","junctionsTrack","coverageTrack","j","console","log","url","push","format","label","indexURL","height","trackHeight","min","trackMin","max","trackMax","autoscale","highlightSamples","selectedSamples","sampleName","sampleSettings","onlyHandleClicksForHighlightedSamples","oauthToken","order","rowName","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","undefined","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelUniqueReadCount","labelMultiMappedReadCount","labelTotalReadCount","labelMotif","labelAnnotatedJunction","labelAnnotatedJunctionValue","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","value","indexed","displayMode","viewAsPairs","showSoftClips","tracks","searchable","visibilityWindow","SelectedDataCategory","span","DeleteButton","Button","basic","icon","SampleNameText","SamplePanel","sample","hideSample","updateSampleSettings","whiteSpace","onClick","marginLeft","key","connect","dispatch","updateGcnvOptions","newSettings","updates","hideRow","selectedSamplesByRowName","sampleSettingsByRowNameAndSampleName","result","categoryObj","margin","map","createSingleValueReducer","updateActionType","initialState","debug","reducer","action","newValue","error","createSingleObjectReducer","newState","createArrayReducer","actionTypeSuffix","Array","isArray","values","valuesToRemove","v","modals","updatesById","shallowCopy","id","obj","createObjectsByIdReducer","getModalOpen","modalName","open","ButtonLink","padding","fontWeight","ContainerDiv","StyledButton","CustomModal","handleClose","doClose","close","handleSave","cloneElement","Modal","isOpen","onClose","size","Header","title","floated","Content","children","tabIndex","PureComponent","defaultProps","ownProps","e","preventDefault","confirmed","getState","confirmOnClose","confirming","LinkButton","EditLocusListButtonAndModal","render","locusList","setLocusList","newLocusList","textAreaValue","split","Boolean","Form","Field","control","TextArea","minHeight","defaultValue","onKeyUp","target","placeholder","join","EditLocusList","setLocus","ExampleDiv","ExamplePath","SUPPORTED_FILE_EXTENSIONS","AddRowsButtonAndModal","getInitialState","warningMessage","errorMessage","parseTextAreaValueToRows","trim","invalidPaths","newRowsByRowName","dataPath","pathTokens","fileName","matchingExtensions","keys","ext","endsWith","filePrefix","replace","newRows","handleModalSave","addRows","handleModalClose","fullTitle","fileType","Message","SearchPanelContainer","StyledSearch","Search","INITIAL_STATE","isLoading","results","SearchRows","handleResultSelect","idTokens","updateSelectedRowNames","updateSelectedSamples","getSelectedRowNames","isRowSelected","getSelectedSamplesByRowName","getSelectedSamplesForRow","isSampleSelected","addRowsToHide","resultsByCategoryName","resultsCounter","newResult","_","some","addSamplesToHide","addMatchingSamplesFromRow","inputStringRegExp","dataItemsWithSamples","samples","warn","test","addMatchingRowsAndSamples","matchingRowsByCategoryName","handleSearchChange","setTimeout","RegExp","escapeRegExp","useCategories","resultsArray","item","actionLabel","className","loading","onResultSelect","onSearchChange","actionType","CategoryDetails","DataTypeIcon","dataTypeIconColors","junctions","coverage","alignment","vcf","gcnv_bed","default","dataTypeLabels","RowColorLabelsContainer","NoWrapDiv","ShowTrackTypesPanel","enabledDataTypes","updateDataTypesToShow","checkBoxes","charAt","toUpperCase","slice","Checkbox","toLocaleString","checked","toLowerCase","RowColorLabelsWithPopup","d","paddingRight","paddingLeft","colSpan","fontSize","marginTop","s","navigator","clipboard","writeText","CategoryPanel","RowsPanel","RowPanel","data-row","RowDetails","description","inverted","LeftSideBar","dataTypes","updateSjOptions","updateVcfOptions","updateBamOptions","editedFields","keyCode","handleTextInput","parseInt","compact","StyledRadio","Radio","ColorByLegend","width","RightSideBar","AboutLink","href","UserInfo","googleUserEmail","HeaderRow","Grid","Row","Column1","Column","Column2","About","throttle","delay","fn","timerId","args","clearTimeout","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","IGV","setContainerElement","element","container","ref","shouldTrackBeReloaded","track","nextProps","junctionTrackDisplaySettingsChanged","vcfTrackDisplaySettingsChanged","alignmentTrackDisplaySettingsChanged","gcnvTrackDisplaySettingsChanged","gcnvTrackHighlightedSamplesChanged","isEqual","getTrackId","getIgvTrackView","trackId","existingTrackViews","browser","trackViews","existingTrackView","existingTrackConfig","config","reloadRemoveAndAddTracks","nextTrackByTrackName","nextTrack","ignoreNextTrackRemovedEvent","removeTrackByName","loadTrack","locusChangedHandler","trackRemovedHandler","userChangedHandler","igvBrowserOptions","Promise","resolve","load","client","init","clientId","scope","discoveryDocs","igv","createBrowser","then","window","igvBrowser","currentIGVLocus","$searchInput","val","nextIGVLocus","search","event","newLocus","trackName","RequestStatus","status","IN_PROGRESS","SUCCEEDED","successMessage","ERROR","NONE","CACHE","DEFAULT_STATE","alignmentShading","KEYS_TO_PERSIST_IN_URL","KEYS_TO_PERSIST_IN_LOCAL_STORAGE","computeInitialState","stateFromLocalStorage","serializedState","localStorage","getItem","jsonString","LZString","decompress","JSON","parse","err","loadState","REVERSE_KEY_NAME_LOOKUP","hashString","location","hash","stateFromUrlHash","keyValue","keyValueList","jsurl","updateLocalStorageAndUrl","stringify","compress","setItem","saveState","hashKeyValueList","StyledDiv","StyledInput","Input","InitialSettingsForm","loadInitialSettingsUrl","globalState","updateInitialSettingsUrl","setInitialSettingsUrlHasBeenApplied","resetGlobalState","Error","isYaml","isJson","isUnknown","fetch","response","ok","statusText","text","fileContents","settings","yaml","safeLoad","filteredSettings","applyInitialSettingsUrl","requestStatus","startsWith","toString","exportCurrentSettings","EXCLUDED_KEYS","globalStateForExport","encodeURIComponent","textInputValue","align","download","newUrl","SideBarColumn","MiddleColumn","otherReducers","combineReducers","assign","updatedRows","existingNames","previousList","updatedList","from","trace","previousSelectedSamplesByRowName","previousSampleSettingsByRowNameAndSampleName","updatedSelectedSamplesByRowName","updatedSampleSettingsByRowNameAndSampleName","previousSampleSettingsBySampleName","newSampleSettingsBySampleName","mergedSamplesSettingsBySampleName","mergedSampleSettings","modalReducers","rootReducer","nextState","createReduxStore","createStore","compose","applyMiddleware","thunkMiddleware","App","store","BaseLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4156a76f.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Icon, Popup } from 'semantic-ui-react'\n\nexport const CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nexport const StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n\nexport const ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nexport const OptionDiv = styled.div`\n  padding-top: 3px;\n`\n\nexport const OptionInputDiv = styled(OptionDiv)`\n  margin: 10px 0px; \n`\n\nexport const OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n","/* eslint-disable react/require-optimization */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { SwatchesPicker } from 'react-color'\nimport { Popup } from 'semantic-ui-react'\n\nconst ColorSwatchBorder = styled.div`\n  display: inline-block;\n  cursor: pointer;\n  border-radius: 2px;\n  padding: 1px 2px;\n  background: #fff;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n`\n\nconst ColorSwatch = styled.div`\n  display: inline-block;\n  cursor: pointer;\n  border-radius: 2px;\n  box-shadow: 0 0 0 1px rgba(0,0,0,.1);\n  width: 10px;\n  height: 12px;\n`\n\nconst StyledPopup = styled(Popup).attrs({ flowing: true })`\n  padding: 0px !important;\n  div {\n    overflow-y: visible !important;\n  }\n`\n\n/*\nconst ApplyButton = styled(Button)`\n  margin-top: 15px !important;\n`\n<div style={{ textAlign: 'center' }}><ApplyButton onClick={() => this.handleApply(this.state.color)}>Apply</ApplyButton></div>\n*/\n\nclass ColorPicker extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = { color: this.props.color }\n  }\n\n  handleChange = (color) => {\n    this.setState({ color })\n  }\n\n  handleApply = (color) => {\n    this.props.colorChangedHandler(color.hex)\n  }\n\n  render() {\n    return (\n      <StyledPopup\n        on=\"click\"\n        position=\"left center\"\n        trigger={\n          <ColorSwatchBorder>\n            <ColorSwatch style={{ background: this.state.color }} />\n          </ColorSwatchBorder>\n        }\n        content={\n          <SwatchesPicker\n            color={this.state.color}\n            onChangeComplete={this.handleApply}\n            onChange={(newColor) => this.setState({ color: newColor })}\n          />\n        }\n      />\n    )\n  }\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.string.isRequired,\n  colorChangedHandler: PropTypes.func.isRequired,\n}\n\nexport default ColorPicker\n","\nexport const SJ_MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\nexport const SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n\nexport const GCNV_DEFAULT_HIGHLIGHT_COLOR = 'blue'\n","/* eslint-disable no-undef */\n\nconst TGG_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise((resolve) => {\n  if (typeof gapi === 'undefined') {\n    return\n  }\n\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        clientId: TGG_VIEWER_CLIENT_ID,\n        scope: 'https://www.googleapis.com/auth/devstorage.read_only',\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest'],\n      })\n\n      resolve()\n    })\n  })\n})\n\nexport const googleSignIn = async () => {\n\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (!authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const profile = authInstance.currentUser.get().getBasicProfile()\n\n  return profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance.currentUser.get()\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith('gs://')) {\n    console.error(`${gsPath} doesn't start with \"gs://\"`)\n    return []\n  }\n\n  const gsPathParts = gsPath.split('/')\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"`)\n    return []\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults: 1000 })\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable object-shorthand */\n/* eslint-disable array-callback-return */\n\nimport { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { SJ_MOTIFS, SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD, GCNV_DEFAULT_HIGHLIGHT_COLOR } from '../constants'\n\nexport const getLocus = (state) => state.locus\nexport const getRightSideBarLocusList = (state) => state.rightSideBarLocusList\nexport const getLeftSideBarLocusList = (state) => state.leftSideBarLocusList\nexport const getGenome = (state) => state.genome\nexport const getDataTypesToShow = (state) => state.dataTypesToShow\nexport const getRowsInCategories = (state) => state.rowsInCategories\nexport const getSelectedRowNamesByCategoryName = (state) => state.selectedRowNamesByCategoryName\nexport const getSelectedSamplesByCategoryNameAndRowName = (state) => state.selectedSamplesByCategoryNameAndRowName\nexport const getSjOptions = (state) => state.sjOptions\nexport const getVcfOptions = (state) => state.vcfOptions\nexport const getBamOptions = (state) => state.bamOptions\nexport const getGcnvOptions = (state) => state.gcnvOptions\nexport const getUser = (state) => state.user\nexport const getInitialSettingsUrl = (state) => state.initialSettingsUrl\nexport const getInitialSettingsUrlHasBeenApplied = (state) => state.initialSettingsUrlHasBeenApplied\n\nexport const getAllDataTypes = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return [...rowsInCategories.reduce((acc, category) => {\n      category.rows.forEach((row) => {\n        if (row.data) {\n          row.data.forEach((data) => {\n            if (data.type) {\n              acc.add(data.type)\n            }\n          })\n        }\n      })\n      return acc\n    }, new Set())]\n  })\n\n\nexport const getEnabledDataTypes = createSelector(\n  getAllDataTypes,\n  getDataTypesToShow,\n  (allDataTypes, dataTypesToShow) => {\n    return allDataTypes.length < 2 ? allDataTypes : allDataTypes.filter((dataType) => dataTypesToShow.includes(dataType))\n  })\n\nexport const getRowsByCategoryName = createSelector(\n  getRowsInCategories,\n  (rowsInCategories) => {\n    return rowsInCategories.reduce((acc, category) => {\n      return { ...acc, [category.categoryName]: category.rows }\n    }, {})\n  })\n\n\nexport const getSelectedRowsByCategoryName = createSelector(\n  getSelectedRowNamesByCategoryName,\n  getRowsByCategoryName,\n  (selectedRowNamesByCategoryName, rowsByCategoryName) => {\n    return Object.entries(selectedRowNamesByCategoryName).reduce((acc, [categoryName, selectedRowNames]) => {\n      if (!rowsByCategoryName[categoryName]) {\n        return acc\n      }\n      return { ...acc, [categoryName]: rowsByCategoryName[categoryName].filter((row) => selectedRowNames.includes(row.name)) }\n    }, {})\n  })\n\n\nexport const getTracks = createSelector(\n  getSelectedRowsByCategoryName,\n  getSelectedSamplesByCategoryNameAndRowName,\n  getDataTypesToShow,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  getGcnvOptions,\n  (\n    selectedRowsByCategoryName,\n    selectedSamplesByCategoryNameAndRowName,\n    dataTypesToShow,\n    sjOptions,\n    vcfOptions,\n    bamOptions,\n    gcnvOptions,\n  ) => {\n    const igvTracks = []\n\n    Object.entries(selectedRowsByCategoryName).forEach(([categoryName, selectedRows]) => selectedRows.forEach((row, i) => {\n      let junctionsTrack\n      let coverageTrack\n      (row.data || []).forEach((data, j) => {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n\n        if (data.type === 'gcnv_bed') { // && vcfOptions.showGcnv\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          console.log(`Adding ${data.url} track #`, i * 100 + j)\n\n          igvTracks.push({\n            type: 'gcnv',\n            format: 'gcnv',\n            name: `${row.name} ${data.label || ''}`,\n            url: data.url,\n            indexURL: `${data.url}.tbi`,\n            height: gcnvOptions.trackHeight,\n            min: gcnvOptions.trackMin,\n            max: gcnvOptions.trackMax,\n            autoscale: gcnvOptions.autoscale,\n            highlightSamples: (((selectedSamplesByCategoryNameAndRowName[categoryName] || {}).selectedSamples || {})[row.name] || []).reduce(\n              (acc, sampleName) => {\n                acc[sampleName] = ((((selectedSamplesByCategoryNameAndRowName[categoryName] || {}).sampleSettings || {})[row.name] || {})[sampleName] || {}).color || GCNV_DEFAULT_HIGHLIGHT_COLOR\n                return acc\n              }, {}),\n            onlyHandleClicksForHighlightedSamples: gcnvOptions.onlyHandleClicksForHighlightedSamples,\n            oauthToken: getGoogleAccessToken,\n            order: i * 100 + j,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n        else if ((data.type === 'junctions' || data.url.includes('junctions.bed')) && dataTypesToShow.includes('junctions')) {\n          junctionsTrack = {\n            type: 'spliceJunctions',\n            format: 'bed',\n            url: data.url,\n            indexURL: `${data.url}.tbi`,\n            oauthToken: getGoogleAccessToken,\n            order: i * 10,\n            name: row.name,\n            height: sjOptions.trackHeight,\n            minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n            minTotalReads: sjOptions.minTotalReads,\n            maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n            minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n            thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n            bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n            colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n            colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n            hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n            labelUniqueReadCount: sjOptions.labelUniqueReadCount,\n            labelMultiMappedReadCount: sjOptions.labelMultiMappedReadCount,\n            labelTotalReadCount: sjOptions.labelTotalReadCount,\n            labelMotif: sjOptions.labelMotif,\n            labelAnnotatedJunction: sjOptions.labelAnnotatedJunction && sjOptions.labelAnnotatedJunctionValue,\n            hideAnnotatedJunctions: sjOptions.hideAnnotated,\n            hideUnannotatedJunctions: sjOptions.hideUnannotated,\n            hideMotifs: SJ_MOTIFS.filter((motif) => sjOptions[`hideMotif${motif}`]), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n            rowName: row.name,\n            categoryName: categoryName,\n          }\n        }\n        else if ((data.type === 'coverage' || data.url.includes('.bigWig')) && dataTypesToShow.includes('coverage')) {\n          coverageTrack = {\n            type: 'wig',\n            format: 'bigwig',\n            url: data.url,\n            oauthToken: getGoogleAccessToken,\n            name: row.name,\n            height: sjOptions.trackHeight,\n            order: i * 10 + j,\n            rowName: row.name,\n            categoryName: categoryName,\n          }\n\n          if (data.url.includes('spliceai')) {\n            coverageTrack.color = (value) => {\n              let c\n              if (value < 0.5) {\n                c = 'rgb(180,180,180)'\n              }\n              else if (value < 0.8) {\n                c = 'rgb(180,180,0)'\n              }\n              else {\n                c = 'rgb(200,0,0)'\n              }\n\n              return c\n            }\n          }\n        }\n        else if ((data.type === 'vcf' || data.url.includes('.vcf')) && dataTypesToShow.includes('vcf')) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          console.log(`Adding ${data.url} track #`, i * 100 + j)\n\n          igvTracks.push({\n            type: 'variant',\n            format: 'vcf',\n            url: data.url,\n            indexURL: `${data.url}.tbi`,\n            indexed: true,\n            name: `${row.name} ${data.label || 'vcf'}`,\n            displayMode: vcfOptions.displayMode,\n            oauthToken: getGoogleAccessToken,\n            order: i * 100 + j,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n        else if ((data.type === 'alignment' || data.url.includes('.bam') || data.url.includes('.cram')) && dataTypesToShow.includes('alignment')) {\n          //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n          console.log(`Adding ${data.url} track #`, i * 100 + j)\n\n          igvTracks.push({\n            type: 'alignment',\n            url: data.url,\n            indexed: true,\n            name: `${row.name} ${data.label || 'bam'}`,\n            height: bamOptions.trackHeight,\n            colorBy: bamOptions.colorBy,\n            viewAsPairs: bamOptions.viewAsPairs,\n            showSoftClips: bamOptions.showSoftClips,\n            oauthToken: getGoogleAccessToken,\n            order: i * 100 + j,\n            rowName: row.name,\n            categoryName: categoryName,\n          })\n        }\n      })\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${junctionsTrack.url} & ${coverageTrack.url} track`)\n        igvTracks.push({\n          type: 'merged',\n          name: junctionsTrack.name,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          order: i * 10 + 2,\n          rowName: row.name,\n          categoryName: categoryName,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${junctionsTrack.url} track`)\n        igvTracks.push(junctionsTrack)\n      } else if (coverageTrack) {\n        console.log(`Adding ${coverageTrack.url} track`)\n        igvTracks.push(coverageTrack)\n      }\n    }))\n\n    igvTracks.push({\n      name: 'Gencode v32 Genes',\n      format: 'refgene',\n      url: 'gs://tgg-viewer/ref/GRCh38/gencode_v32/gencode_v32_knownGene.sorted.txt.gz',\n      indexURL: 'gs://tgg-viewer/ref/GRCh38/gencode_v32/gencode_v32_knownGene.sorted.txt.gz.tbi',\n      indexed: true,\n      searchable: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: 'EXPANDED',\n      order: 1000001,\n      color: 'rgb(76,171,225)',\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  },\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport ColorPicker from './optionsPanels/ColorPicker'\nimport { GCNV_DEFAULT_HIGHLIGHT_COLOR } from '../constants'\nimport { getSelectedSamplesByCategoryNameAndRowName } from '../redux/selectors'\n\nconst SelectedDataCategory = styled.span`\n  margin: 10px 0px 8px 0px;\n  font-style: italic;\n`\n\nconst DeleteButton = styled(Button).attrs({ basic: true, icon: true })`\n  padding: 0px !important;\n  box-shadow: none !important;\n`\n\nconst SampleNameText = styled.span`\n  word-wrap: break-word;\n  word-break: break-all;  \n  white-space: normal;\n`\n\nconst SamplePanel = ({ categoryName, rowName, sample, sampleSettings, hideSample, updateSampleSettings }) => (\n  <div style={{ whiteSpace: 'nowrap' }}>\n    <DeleteButton onClick={() => hideSample(categoryName, rowName, sample)}>\n      <Icon name=\"delete\" />\n    </DeleteButton>\n    <SampleNameText>{sample}</SampleNameText>\n    <span style={{ marginLeft: '8px' }}>\n      <ColorPicker\n        key={sampleSettings.color}\n        color={sampleSettings.color || GCNV_DEFAULT_HIGHLIGHT_COLOR}\n        colorChangedHandler={(newColor) => updateSampleSettings(categoryName, rowName, sample, { color: newColor })}\n      />\n    </span>\n  </div>)\n\n\nSamplePanel.propTypes = {\n  categoryName: PropTypes.string,\n  rowName: PropTypes.string,\n  sample: PropTypes.string,\n  sampleSettings: PropTypes.object,\n  hideSample: PropTypes.func,\n  updateSampleSettings: PropTypes.func,\n}\n\nconst SelectedDataPanel = ({ selectedSamplesByCategoryNameAndRowName, hideRow, hideSample, updateSampleSettings }) => {\n  const result = []\n  Object.entries(selectedSamplesByCategoryNameAndRowName).forEach(([categoryName, categoryObj]) => {\n    Object.entries(categoryObj.selectedSamples || {}).forEach(([rowName, selectedSamples]) => {\n      result.push(\n        <div key={`${categoryName}!!${rowName}`}>\n          <div style={{ whiteSpace: 'nowrap', margin: '15px 0px 7px 0px' }}>\n            {\n              /*<DeleteButton onClick={() => hideRow(categoryName, rowName)}>\n                <Icon name=\"delete\" />\n              </DeleteButton>\n              */\n            }\n            <SelectedDataCategory>{`${categoryName}: ${rowName}`}</SelectedDataCategory>\n          </div>\n          {\n            selectedSamples.map((sample) => (\n              <SamplePanel\n                key={sample}\n                categoryName={categoryName}\n                rowName={rowName}\n                sample={sample}\n                sampleSettings={((categoryObj.sampleSettings || {})[rowName] || {})[sample] || {}}\n                hideRow={hideRow}\n                hideSample={hideSample}\n                updateSampleSettings={updateSampleSettings}\n              />),\n            )\n          }\n        </div>)\n    })\n  })\n\n  return result.length > 0 ? result : null\n}\n\nSelectedDataPanel.propTypes = {\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object,\n  hideRow: PropTypes.func,\n  hideSample: PropTypes.func,\n  updateSampleSettings: PropTypes.func,\n}\n\n\nconst mapStateToProps = (state) => ({\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateGcnvOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_GCNV_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  hideRow: (categoryName, rowName) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_ROW_NAMES',\n      categoryName,\n      selectedRowNames: [rowName],\n    })\n  },\n  hideSample: (categoryName, rowName, sample) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLES',\n      categoryName,\n      selectedSamplesByRowName: {\n        [rowName]: [sample],\n      },\n    })\n  },\n  updateSampleSettings: (categoryName, rowName, sample, newSettings) => {\n    dispatch({\n      type: 'UPDATE_SAMPLE_SETTINGS',\n      categoryName,\n      sampleSettingsByRowNameAndSampleName: {\n        [rowName]: {\n          [sample]: newSettings,\n        },\n      },\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedDataPanel)\n","/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [...action.values] // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [...state, ...action.values]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter((v) => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return { ...state, isLoading: true }\n\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return { ...state, isLoading: false, errorMessage: action.error }\n\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { createObjectsByIdReducer } from './reducerFactories'\n\n\n// actions\nconst UPDATE_MODAL_STATE = 'UPDATE_MODAL_STATE'\n\n// action creators\nexport const openModal = (modalName) => (dispatch) => (\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: true } } })\n)\n\nexport const closeModal = (modalName, confirmed) => (dispatch, getState) => {\n  if (getState().modals[modalName].confirmOnClose && !confirmed) {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: true } } })\n  } else {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: false, confirming: false, confirmOnClose: null } } })\n  }\n}\n\n// root reducer\nexport default {\n  modals: createObjectsByIdReducer(UPDATE_MODAL_STATE),\n}\n\n// basic selectors\nexport const getModalOpen = (state, modalName) => state.modals[modalName] && state.modals[modalName].open\n","/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { getModalOpen, openModal, closeModal } from '../redux/utils/modalReducer'\n\nexport const ButtonLink = styled(Button).attrs({ basic: true })`\n  &.ui.button.basic {\n    white-space: nowrap;\n    border: none;\n    padding: ${(props) => props.padding || 0};\n    color: ${(props) => props.color || '#4183C4'} !important;\n    text-decoration: none;\n    font-weight: ${(props) => props.fontWeight || 'inherit'};\n    box-shadow: none !important;\n    user-select: auto;\n    \n    &:hover, &:focus, &:active {\n      color: #1e70bf !important;\n      background: transparent !important;\n    }\n    \n    &[class*=\"right labeled\"].icon {\n      padding-left: 0 !important;\n      padding-right: 2.1em !important;\n      \n      > .icon {\n        background-color: initial;\n      }\n    }\n  }\n`\n\nconst ContainerDiv = styled.div`\n  float: right;\n  padding: 0px 20px 20px 20px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px !important;\n  width: 100px;\n`\n\n\nclass CustomModal extends React.PureComponent\n{\n  handleClose = () => {\n    let doClose = true\n    if (this.props.handleClose) {\n      doClose = this.props.handleClose()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  handleSave = () => {\n    let doClose = true\n    if (this.props.handleSave) {\n      doClose = this.props.handleSave()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  render() {\n    const trigger = this.props.trigger ? React.cloneElement(this.props.trigger, { onClick: this.props.open }) : null\n    return (\n      <Modal open={this.props.isOpen} trigger={trigger} onClose={this.handleClose} size={this.props.size}>\n        <Modal.Header>\n          {this.props.title}\n          <ButtonLink floated=\"right\" onClick={this.handleClose} icon={<Icon name=\"remove\" color=\"grey\" />} />\n        </Modal.Header>\n        <Modal.Content>\n          {this.props.children}\n        </Modal.Content>\n        <ContainerDiv>\n          <StyledButton tabIndex={0} onClick={this.handleClose} type=\"button\">Cancel</StyledButton>\n          <StyledButton tabIndex={0} onClick={this.handleSave} type=\"submit\" color=\"blue\">{ this.props.handleSave ? 'Save' : 'Ok' }</StyledButton>\n        </ContainerDiv>\n      </Modal>\n    )\n  }\n}\n\nCustomModal.defaultProps = {\n  size: 'small',\n}\n\nCustomModal.propTypes = {\n  trigger: PropTypes.node,\n  title: PropTypes.string,\n  handleSave: PropTypes.func,\n  handleClose: PropTypes.func,\n  size: PropTypes.oneOf(['small', 'large', 'fullscreen']),\n  isOpen: PropTypes.bool,\n  open: PropTypes.func,\n  close: PropTypes.func,\n  children: PropTypes.node,\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  isOpen: getModalOpen(state, ownProps.modalName),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: (e) => {\n      e.preventDefault()\n      dispatch(openModal(ownProps.modalName))\n    },\n    close: () => {\n      dispatch(closeModal(ownProps.modalName, true))\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/no-array-index-key */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Form, TextArea } from 'semantic-ui-react'\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n`\n\nclass EditLocusListButtonAndModal extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    const {\n      locusList,\n    } = this.props\n\n    this.textAreaValue = (locusList || []).join('\\n') // TextArea refs don't work - probably because its a pure component, so use this hack\n  }\n\n  render = () => {\n    const {\n      locusList,\n      name,\n      setLocusList,\n    } = this.props\n\n    const title = `Locus List - ${name}`\n\n    return (\n      <Modal\n        title={title}\n        size=\"large\"\n        modalName={title}\n        trigger={\n          <LinkButton>\n            {\n              (locusList || []).length > 0\n                ? <div><br />Edit Locus List</div>\n                : <div>Add Locus List To Side Bar</div>\n            }\n          </LinkButton>\n        }\n        handleSave={() => {\n          const newLocusList = this.textAreaValue.split(/[,\\s]+/).filter(Boolean)\n          setLocusList(newLocusList)\n\n          return true\n        }}\n      >\n        <Form>\n          <Form.Field\n            control={TextArea}\n            style={{ minHeight: '300px' }}\n            defaultValue={this.textAreaValue}\n            onKeyUp={(e) => { this.textAreaValue = e.target.value }}\n            placeholder=\"Enter genomic positions, intervals, and/or gene names separated by commas, spaces, or new lines. &#10;\n              These can be in any format recognized by the IGV search bar. &#10;\n              For example: DMD, ENST00000589830, chr1:55516888, 2:152341851-152591002\"\n          />\n        </Form>\n        <br />\n        <b><i>NOTE:</i></b> This locus list will be saved across page refreshes in this browser, &nbsp;\n        but will not be recorded in the page url like other settings.&nbsp;\n        Sharing or bookmarking this page won&apos;t include the contents of this list.\n      </Modal>)\n  }\n}\n\nEditLocusListButtonAndModal.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocusList: PropTypes.func,\n}\n\nconst EditLocusList = ({ name, locusList, setLocus, setLocusList }) => (\n  <div>\n    {\n      locusList.map((locus, i) => <div key={`${locus} ${i}`}>{i + 1}. &nbsp; <LinkButton onClick={() => { setLocus(locus) }}>{locus}</LinkButton></div>)\n    }\n    <EditLocusListButtonAndModal name={name} locusList={locusList} setLocusList={setLocusList} />\n  </div>)\n\n\nEditLocusList.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n}\n\nexport default EditLocusList\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/self-closing-comp */\n/* eslint-disable object-shorthand */\n/* eslint-disable no-else-return */\n/* eslint-disable react/no-array-index-key */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Form, Icon, Message, Popup, TextArea } from 'semantic-ui-react'\n\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst ExampleDiv = styled.div`\n  font-family: monospace;\n  margin: 20px 30px;\n  padding: 10px;\n  background-color: #F7F7F7;\n  white-space: nowrap;\n`\n\nconst ExamplePath = styled.span`\n  font-family: monospace;\n  background-color: #F7F7F7;\n`\n\nconst StyledPopup = styled(Popup).attrs({ position: 'right center' })`\n`\n\nexport const SUPPORTED_FILE_EXTENSIONS = {\n  '.bigWig': 'coverage',\n  '.bw': 'coverage',\n  '.junctions.bed': 'junctions',\n  '.spliceJunctions.bed': 'junctions',\n  '.junctions.bed.gz': 'junctions',\n  '.spliceJunctions.bed.gz': 'junctions',\n\n  '.bam': 'bam',\n  '.cram': 'bam',\n\n  '.vcf': 'vcf',\n  '.vcf.gz': 'vcf',\n\n  '.wig': 'wig',\n  '.bedGraph': 'wig',\n\n  '.bed': 'bed',\n  '.bed.gz': 'bed',\n\n  /*\n  '.bed': 'annotation',\n  '.bed.gz': 'annotation',\n  '.gff3': 'annotation',\n  '.gtf': 'annotation',\n  '.gtf.gz': 'annotation',\n  '.genePred': 'annotation',\n  '.bigBed': 'annotation',\n   */\n}\n\n\nclass AddRowsButtonAndModal extends React.PureComponent {\n\n  getInitialState = () => {\n    return {\n      textAreaValue: '',\n      warningMessage: null,\n      errorMessage: null,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = this.getInitialState()\n  }\n\n  parseTextAreaValueToRows = (textAreaValue) => {\n    if (!textAreaValue.trim()) {\n      return { rows: [], errorMessage: null }\n    }\n\n    let errorMessage = null\n    const invalidPaths = []\n    const dataPaths = textAreaValue.split(/[,\\s]+/).filter(Boolean)\n\n    const newRowsByRowName = dataPaths.reduce((acc, dataPath) => {\n      const pathTokens = dataPath.split('/')\n      const fileName = pathTokens[pathTokens.length - 1]\n      const matchingExtensions = Object.keys(SUPPORTED_FILE_EXTENSIONS).filter((ext) => fileName.endsWith(ext))\n      if (matchingExtensions.length === 0) {\n        invalidPaths.push(dataPath)\n      } else {\n        const ext = matchingExtensions[0]\n        const filePrefix = fileName.replace(ext, '')\n        if (!acc[filePrefix]) {\n          acc[filePrefix] = { data: [] }\n        }\n\n        acc[filePrefix].name = filePrefix\n        acc[filePrefix].data.push(\n          { type: SUPPORTED_FILE_EXTENSIONS[ext], url: dataPath },\n        )\n      }\n      return acc\n    }, {})\n\n    if (invalidPaths.length > 0) {\n      errorMessage = `These paths have file suffixes that are not recognized: ${invalidPaths.join(', ')}`\n    }\n\n    return { newRows: Object.values(newRowsByRowName), errorMessage }\n  }\n\n  handleModalSave = () => {\n    const {\n      addRows,\n    } = this.props\n\n    const {\n      textAreaValue,\n    } = this.state\n\n    const { newRows, errorMessage } = this.parseTextAreaValueToRows(textAreaValue)\n    if (errorMessage) {\n      this.setState({ errorMessage: errorMessage })\n      return false\n    } else {\n      addRows(newRows)\n      return true\n    }\n  }\n\n  handleModalClose = () => {\n    this.setState(this.getInitialState())\n    return true\n  }\n\n  render = () => {\n    const {\n      title,\n      trigger,\n    } = this.props\n\n    const {\n      textAreaValue,\n      warningMessage,\n      errorMessage,\n    } = this.state\n\n    const fullTitle = `${title} Rows`\n\n    return (\n      <Modal\n        title={fullTitle}\n        size=\"large\"\n        modalName={fullTitle}\n        trigger={trigger}\n        handleSave={this.handleModalSave}\n        handleClose={this.handleModalClose}\n      >\n        <div>\n          Enter google bucket path(s) for data files: &nbsp;\n          <StyledPopup trigger={<Icon style={{ margin: '10px 0px' }} name=\"question circle outline\" />} content={\n            <div>\n              <b>Format</b>:<br />\n              <br />\n              Enter a list of data file paths separated by commas, spaces or new lines. <br />\n              <br />\n              Example:<br />\n              <ExampleDiv>\n                gs://your-bucket/dir/sample-name1.bigWig <br />\n                gs://your-bucket/dir/sample2.bigWig <br />\n                gs://your-bucket/dir/sample-name1.junctions.bed.gz <br />\n                gs://your-bucket/dir/sample-name1.bam <br />\n                gs://your-bucket/dir/sample2.junctions.bed.gz <br />\n              </ExampleDiv>\n              Paths that have the same prefix (eg. <ExamplePath>gs://your-bucket/dir/sample-name1</ExamplePath> above) will be interpreted as different data types for same sample.<br />\n              The order of paths doesn&apos;t matter.<br />\n              <br />\n              IGV.js track types will be inferred from file extensions as follows:<br />\n              <div style={{ margin: '10px 30px' }}>\n                <table>\n                  <tbody>\n                    <tr><td> <b> File Extension </b> </td><td> <b>IGV.js Track Type</b> </td></tr>\n                    {Object.entries(SUPPORTED_FILE_EXTENSIONS).filter(([ext]) => !ext.endsWith('.bed')).map(\n                      ([ext, fileType], i) => <tr key={`${ext} ${fileType} ${i}`}><td>{ext}</td><td>{fileType}</td></tr>,\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          }\n          />\n          <br />\n        </div>\n        <Form>\n          <TextArea\n            style={{ minHeight: '300px' }}\n            value={textAreaValue}\n            onChange={(e) => {\n              this.setState({ textAreaValue: e.target.value })\n            }}\n            placeholder=\"Enter file path(s)\"\n          >\n          </TextArea>\n        </Form>\n\n        <br />\n        <b><i>NOTE:</i></b> These paths will be saved across page refreshes in this browser, but will not be recorded in the page url like other settings. Sharing or bookmarking this page won&apos;t include these paths.\n        {\n          warningMessage && (\n          <Message color=\"yellow\">\n            {warningMessage}\n          </Message>)\n        }\n        {\n          errorMessage && (\n          <Message color=\"red\">\n            {errorMessage}\n          </Message>)\n        }\n      </Modal>)\n  }\n}\n\nAddRowsButtonAndModal.propTypes = {\n  title: PropTypes.string,\n  addRows: PropTypes.func,\n  trigger: PropTypes.node,\n}\n\n\nconst AddRows = ({ category, addRows }) => (\n  <div>\n    <AddRowsButtonAndModal\n      title={`Add ${category.categoryName}`}\n      categoryName={category.categoryName}\n      addRows={(rows) => addRows(category.categoryName, rows)}\n      trigger={<LinkButton>Add {category.rows.length === 0 ? category.categoryName : null} Rows</LinkButton>}\n    />\n  </div>)\n\n\nAddRows.propTypes = {\n  category: PropTypes.object,\n  addRows: PropTypes.func,\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addRows: (categoryName, rows) => {\n    dispatch({\n      type: 'ADD_ROWS',\n      categoryName: categoryName,\n      rows: rows,\n    })\n  },\n})\n\nexport default connect(null, mapDispatchToProps)(AddRows)\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/require-optimization */\n\nimport _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Search } from 'semantic-ui-react'\nimport { CategoryH3 } from './SideBarUtils'\nimport {\n  getRowsInCategories,\n  getSelectedRowNamesByCategoryName,\n  getSelectedSamplesByCategoryNameAndRowName,\n} from '../redux/selectors'\n\nconst SearchPanelContainer = styled.div`\n  margin: 5px 0px;\n`\n\nconst StyledSearch = styled(Search)`\n  margin: 13px 0px; \n  .prompt {\n    border-radius: 2px !important;\n    width: 155px;\n  }\n  \n  input {\n      max-width: none !important;\n      padding: 5px !important;\n  }\n  \n  .input {\n    -webkit-box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n    -moz-box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n    box-shadow: 0px 0px 1px 0px rgba(0,0,0) !important;\n  }\n  \n  .results {\n      min-width: max-content;\n  }\n\n  .red-text {\n    .title {\n      color: #CC0000 !important;\n      font-weight: 500 !important;\n     }\n  }\n`\n\nconst MAX_AUTOCOMPLETE_RESULTS = 12\nconst INITIAL_STATE = { isLoading: false, results: [], value: '' }\n\nclass SearchRows extends React.Component {\n\n  constructor() {\n    super()\n    this.state = INITIAL_STATE\n  }\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: '' })\n\n    const idTokens = result.id.split('!!')\n    const action = idTokens[0]\n    const categoryName = idTokens[1]\n    const rowName = idTokens[2]\n    const sampleName = idTokens[3]\n\n    if (sampleName) {\n      if (action === 'ADD') {\n        this.props.updateSelectedRowNames(action, categoryName, [rowName])\n      }\n      this.props.updateSelectedSamples(action, categoryName, { [rowName]: [sampleName] })\n    } else {\n      this.props.updateSelectedRowNames(action, categoryName, [rowName])\n    }\n  }\n\n  getSelectedRowNames = (categoryName) => (this.props.selectedRowNamesByCategoryName[categoryName] || [])\n\n  isRowSelected = (categoryName, rowName) => this.getSelectedRowNames(categoryName).includes(rowName)\n\n  getSelectedSamplesByRowName = (categoryName) => ((this.props.selectedSamplesByCategoryNameAndRowName[categoryName] || {}).selectedSamples || {})\n\n  getSelectedSamplesForRow = (categoryName, rowName) => (this.getSelectedSamplesByRowName(categoryName)[rowName] || [])\n\n  isSampleSelected = (categoryName, rowName, sample) => this.getSelectedSamplesForRow(categoryName, rowName).includes(sample)\n\n  addRowsToHide = (resultsByCategoryName, resultsCounter) => {\n    Object.keys(this.props.selectedRowNamesByCategoryName).forEach((categoryName) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      this.props.selectedRowNamesByCategoryName[categoryName].forEach((rowName) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n        const newResult = { action: 'REMOVE', categoryName, rowName }\n        if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n          resultsByCategoryName[categoryName].push(newResult)\n          resultsCounter += 1\n        }\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addSamplesToHide = (resultsByCategoryName, resultsCounter) => {\n    Object.keys(this.props.selectedSamplesByCategoryNameAndRowName).forEach((categoryName) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      Object.keys(this.getSelectedSamplesByRowName(categoryName)).forEach((rowName) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS || !this.isRowSelected(categoryName, rowName)) return\n        this.getSelectedSamplesForRow(categoryName, rowName).forEach((sample) => {\n          if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = { action: 'REMOVE', categoryName, rowName, sample }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        })\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addMatchingSamplesFromRow = (categoryName, row, inputStringRegExp, resultsByCategoryName, resultsCounter) => {\n    if (!row.data) {\n      return resultsCounter\n    }\n\n    const dataItemsWithSamples = row.data.filter((data) => data.samples && data.samples.length > 0)\n    if (dataItemsWithSamples.length > 1) {\n      console.warn('Found row with multiple data items each of which has a samples array. This may behave unexpectedly if there are duplicate samples')\n    }\n\n    //add samples with matching names\n    dataItemsWithSamples.forEach((data) => {\n      (data.samples || []).forEach((sample) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        if (inputStringRegExp.test(sample)) {\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = {\n            action: this.isRowSelected(categoryName, row.name) && this.isSampleSelected(categoryName, row.name, sample) ? 'REMOVE' : 'ADD',\n            categoryName,\n            rowName: row.name,\n            sample,\n          }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) {\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        }\n      })\n    })\n\n    return resultsCounter\n  }\n\n  addMatchingRowsAndSamples = (inputStringRegExp, resultsByCategoryName, resultsCounter) => {\n    const matchingRowsByCategoryName = {} //used later to add samples from this row\n    this.props.rowsInCategories.forEach((category) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      const { categoryName } = category\n      category.rows.forEach((row) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        //add rows with matching names\n        if (inputStringRegExp.test(row.name)) {\n          matchingRowsByCategoryName[categoryName] = matchingRowsByCategoryName[categoryName] || []\n          matchingRowsByCategoryName[categoryName].push(row)\n\n          resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n          const newResult = {\n            action: this.isRowSelected(categoryName, row.name) ? 'REMOVE' : 'ADD',\n            categoryName,\n            rowName: row.name,\n          }\n          if (!_.some(resultsByCategoryName[categoryName], newResult)) { //avoid duplicates\n            resultsByCategoryName[categoryName].push(newResult)\n            resultsCounter += 1\n          }\n        }\n\n        resultsCounter = this.addMatchingSamplesFromRow(categoryName, row, inputStringRegExp, resultsByCategoryName, resultsCounter)\n\n      })\n    })\n\n    Object.entries(matchingRowsByCategoryName).forEach(([categoryName, rows]) => {\n      if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n      resultsByCategoryName[categoryName] = resultsByCategoryName[categoryName] || []\n      rows.forEach((row) => {\n        if (resultsCounter >= MAX_AUTOCOMPLETE_RESULTS) return\n        resultsCounter = this.addMatchingSamplesFromRow(categoryName, row, /.*/, resultsByCategoryName, resultsCounter)\n      })\n    })\n\n    return resultsCounter\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) {\n        return this.setState(INITIAL_STATE)\n      }\n\n      const inputStringRegExp = new RegExp(_.escapeRegExp(this.state.value), 'i')\n\n      const resultsByCategoryName = {}\n      let resultsCounter = 0\n\n      // search actions\n      if (inputStringRegExp.test('Hide')) {\n        resultsCounter = this.addRowsToHide(resultsByCategoryName, resultsCounter)\n      }\n\n      if (inputStringRegExp.test('Hide') || inputStringRegExp.test('Hide sample')) {\n        // hide samples\n        resultsCounter = this.addSamplesToHide(resultsByCategoryName, resultsCounter)\n      }\n\n      // search rows\n      this.addMatchingRowsAndSamples(inputStringRegExp, resultsByCategoryName, resultsCounter)\n\n      const useCategories = this.props.rowsInCategories.length > 1\n      const results = useCategories ? {} : []\n      Object.keys(resultsByCategoryName).forEach((categoryName) => {\n        if (useCategories) {\n          results[categoryName] = { name: categoryName, results: [] }\n        }\n        const resultsArray = useCategories ? results[categoryName].results : results\n        resultsByCategoryName[categoryName].forEach((item) => {\n          if (item.sample) {\n            const actionLabel = item.action === 'ADD' ? 'Show sample' : 'Hide sample'\n            resultsArray.push({\n              id: `${item.action}!!${categoryName}!!${item.rowName}!!${item.sample}`,\n              title: `${actionLabel} ${item.rowName} > ${item.sample}`,\n              className: item.action !== 'ADD' && 'red-text',\n            })\n          } else {\n            const actionLabel = item.action === 'ADD' ? 'Show' : 'Hide'\n            resultsArray.push({\n              id: `${item.action}!!${categoryName}!!${item.rowName}`,\n              title: `${actionLabel} ${item.rowName}`,\n              className: item.action !== 'ADD' && 'red-text',\n            })\n          }\n        })\n      })\n\n      return this.setState({\n        isLoading: false,\n        results,\n      })\n    }, 1)\n  }\n\n  render = () => {\n    const { isLoading, value, results } = this.state\n\n    return (\n      <SearchPanelContainer>\n        <CategoryH3>Select Data</CategoryH3>\n        <StyledSearch\n          category={this.props.rowsInCategories.length > 1}\n          loading={isLoading}\n          onResultSelect={this.handleResultSelect}\n          onSearchChange={this.handleSearchChange}\n          placeholder=\"Select data\"\n          results={results}\n          value={value}\n        />\n      </SearchPanelContainer>)\n  }\n}\n\nSearchRows.propTypes = {\n  rowsInCategories: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n  updateSelectedSamples: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  rowsInCategories: getRowsInCategories(state),\n  selectedRowNamesByCategoryName: getSelectedRowNamesByCategoryName(state),\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSelectedRowNames: (actionType, categoryName, selectedRowNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_ROW_NAMES`,\n      categoryName,\n      selectedRowNames,\n    })\n  },\n\n  updateSelectedSamples: (actionType, categoryName, selectedSamplesByRowName) => {\n    dispatch({\n      type: `${actionType}_SELECTED_SAMPLES`,\n      categoryName,\n      selectedSamplesByRowName,\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchRows)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable react/no-array-index-key */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { CategoryH3, OptionDiv, OptionInputDiv, StyledPopup } from './SideBarUtils'\nimport SelectedDataPanel from './SelectedDataPanel'\nimport EditLocusList from './EditLocusList'\nimport AddRows from './AddRows'\nimport SearchRows from './SearchRows'\nimport {\n  getLeftSideBarLocusList,\n  getRowsInCategories,\n  getAllDataTypes,\n  getEnabledDataTypes,\n  getSelectedRowNamesByCategoryName,\n} from '../redux/selectors'\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst DataTypeIcon = styled.div.attrs({ name: 'stop' })`\n  color: ${(props) => props.color};\n  border: 3px solid ${(props) => props.color};\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\nconst dataTypeIconColors = {\n  junctions: '#B0B0EC',\n  coverage: '#B5D29A',\n  alignment: '#5DB6E9',\n  vcf: '#E6A01B',\n  gcnv_bed: '#AA3333',\n  default: '#000000',\n}\n\nconst dataTypeLabels = {\n  junctions: 'Splice Junctions',\n  vcf: 'Variants (VCF)',\n  gcnv_bed: 'gCNV',\n  alignment: 'Reads (BAM)',\n}\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst RowColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\n/*\nconst SelectedDataSectionHeading = styled.div`\n  font-weight: 700;\n  margin: 8px 0px;\n`\n*/\n\nconst ShowTrackTypesPanel = ({ allDataTypes, enabledDataTypes, updateDataTypesToShow }) => {\n  if (allDataTypes.length < 2) {\n    return null\n  }\n\n  const checkBoxes = [...allDataTypes].map((dataType, i) => {\n    const label = dataTypeLabels[dataType] || (dataType.charAt(0).toUpperCase() + dataType.slice(1)) //to Title case\n    return (\n      <OptionDiv key={`${dataType} ${i}`}>\n        <Checkbox label={`${label.toLocaleString()}`} checked={enabledDataTypes.includes(dataType)} onChange={(e, data) => updateDataTypesToShow(data.checked ? 'ADD' : 'REMOVE', [dataType])} />\n        <RowColorLabelsContainer><Popup content={`This stripe marks rows that have ${label.toLowerCase()} data. Use the checkbox on the left to show or hide ${label.toLowerCase()} tracks for all rows selected below.`} position=\"right center\" trigger={<DataTypeIcon color={dataTypeIconColors[dataType] || dataTypeIconColors.default} />} /></RowColorLabelsContainer>\n      </OptionDiv>)\n  })\n\n  return (\n    <div>\n      <CategoryH3>Show Track Types</CategoryH3>\n      {checkBoxes}\n    </div>)\n}\n\nShowTrackTypesPanel.propTypes = {\n  allDataTypes: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  updateDataTypesToShow: PropTypes.func,\n}\n\n\nconst RowColorLabelsWithPopup = ({ row }) => {\n  const handleCopyToClipboard = () => {\n    const s = (row.data || []).map((d) => d.url).join('\\n')\n    navigator.clipboard.writeText(s)\n  }\n\n  return (<Popup\n    flowing\n    content={\n      <table>\n        <tbody>\n          {\n            (row.data || []).map((d, i) =>\n              <tr key={`${d.url} ${d.type} ${i}`}>\n                <td style={{ paddingRight: '10px' }}>\n                  <b>{d.type && (dataTypeLabels[d.type] || d.type.toUpperCase())}:</b>\n                </td>\n                <td>\n                  <NoWrapDiv>{d.url}</NoWrapDiv>\n                </td>\n                <td style={{ color: 'gray', whiteSpace: 'nowrap', paddingLeft: '15px' }}>\n                  {d.samples ? `(${d.samples.length} samples)` : null}\n                </td>\n              </tr>,\n            )\n          }\n          <tr><td colSpan={2}><div style={{ fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <RowColorLabelsContainer onClick={handleCopyToClipboard}>\n        {\n          (row.data || []).map((d, i) => <DataTypeIcon key={`${d.url} ${d.type} ${i}`} color={dataTypeIconColors[d.type] || dataTypeIconColors.default} />)\n        }\n      </RowColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />)\n}\n\nRowColorLabelsWithPopup.propTypes = {\n  row: PropTypes.object,\n}\n\nconst CategoryPanel = ({ category, updateSelectedRowNames }) => (\n  <div>\n    <CategoryH3>{category.categoryName}</CategoryH3>\n    {\n      category.rows.length >= 12 && <CategoryDetails>{`(N=${category.rows.length}) `}</CategoryDetails>\n    }\n    {\n      category.rows.length > 0 && (\n      <div>\n        <LinkButton onClick={\n          (e) => {\n            e.preventDefault()\n            updateSelectedRowNames('SET', category.categoryName, [])\n          }\n        }\n        >\n          Uncheck All\n        </LinkButton>\n      </div>)\n    }\n  </div>)\n\nCategoryPanel.propTypes = {\n  category: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n}\n\nconst RowsPanel = ({ rowsInCategories, selectedRowNamesByCategoryName, updateSelectedRowNames }) => (\n  rowsInCategories.map((category, i) => (\n    <div key={`${category.categoryName} ${i}`}>\n      <CategoryPanel category={category} updateSelectedRowNames={updateSelectedRowNames} />\n      {\n        category.rows.map((row, j) => {\n          const selectedRowNames = selectedRowNamesByCategoryName[category.categoryName] || []\n          return <RowPanel key={`${row.name} ${j}`} row={row} categoryName={category.categoryName} selectedRowNames={selectedRowNames} updateSelectedRowNames={updateSelectedRowNames} />\n        })\n      }\n      <AddRows category={category} />\n    </div>),\n  ))\n\nRowsPanel.propTypes = {\n  rowsInCategories: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  updateSelectedRowNames: PropTypes.func,\n}\n\n\nconst RowPanel = ({ row, categoryName, selectedRowNames, updateSelectedRowNames }) => (\n  <NoWrapDiv>\n    <Checkbox\n      label={row.name}\n      checked={selectedRowNames.includes(row.name)}\n      data-row={row.name}\n      onChange={(e, data) => updateSelectedRowNames(data.checked ? 'ADD' : 'REMOVE', categoryName, [data['data-row']])}\n    />\n    <RowDetails row={row} />\n    <RowColorLabelsWithPopup row={row} />\n  </NoWrapDiv>)\n\nRowPanel.propTypes = {\n  row: PropTypes.object,\n  categoryName: PropTypes.string,\n  selectedRowNames: PropTypes.array,\n  updateSelectedRowNames: PropTypes.func,\n}\n/*\nconst DataSubrows = ({ data }) => {\n  if (!data) {\n    return null\n  }\n\n  const items = []\n  data.filter((d) => d.type === 'gcnv_bed' && d.samples).forEach((d) => {\n    d.samples.forEach((sample) => {\n      items.push(<Checkbox\n        key={sample}\n        label={sample}\n        checked={false}\n        onChange={(e, _) => console.log(e, _)}\n      />)\n    })\n  })\n\n  return items\n}\n\nDataSubrows.propTypes = {\n  data: PropTypes.array,\n}\n*/\n\nconst RowDetails = ({ row }) => {\n  return (\n    row.description\n      ? <StyledPopup inverted\n        content={row.description}\n        position=\"right center\"\n        trigger={\n          <Icon style={{ marginLeft: '10px' }} name=\"question circle outline\" />\n        }\n      />\n      : null)\n}\n\nRowDetails.propTypes = {\n  row: PropTypes.object,\n}\n\nclass LeftSideBar extends React.PureComponent\n{\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    const {\n      locusList,\n      rowsInCategories,\n      allDataTypes,\n      enabledDataTypes,\n      selectedRowNamesByCategoryName,\n      setLocus,\n      setLocusList,\n      updateDataTypesToShow,\n      updateSelectedRowNames,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList name=\"Left Side Bar\" locusList={locusList} setLocus={setLocus} setLocusList={setLocusList} />\n        <ShowTrackTypesPanel\n          allDataTypes={allDataTypes}\n          enabledDataTypes={enabledDataTypes}\n          updateDataTypesToShow={updateDataTypesToShow}\n        />\n        <SearchRows />\n        <OptionInputDiv>\n          {/*<SelectedDataSectionHeading>Selected data:</SelectedDataSectionHeading>*/}\n          <SelectedDataPanel />\n        </OptionInputDiv>\n        <RowsPanel\n          rowsInCategories={rowsInCategories}\n          selectedRowNamesByCategoryName={selectedRowNamesByCategoryName}\n          updateSelectedRowNames={updateSelectedRowNames}\n        />\n      </div>)\n  }\n}\n\nLeftSideBar.propTypes = {\n  locusList: PropTypes.array,\n  rowsInCategories: PropTypes.array,\n  allDataTypes: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  selectedRowNamesByCategoryName: PropTypes.object,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n  updateDataTypesToShow: PropTypes.func,\n  updateSelectedRowNames: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getLeftSideBarLocusList(state),\n  rowsInCategories: getRowsInCategories(state),\n  allDataTypes: getAllDataTypes(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n  selectedRowNamesByCategoryName: getSelectedRowNamesByCategoryName(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_LEFT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateDataTypesToShow: (actionType, dataTypes) => {\n    dispatch({\n      type: `${actionType}_DATA_TYPES_TO_SHOW`,\n      values: dataTypes,\n    })\n  },\n  updateSelectedRowNames: (actionType, categoryName, selectedRowNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_ROW_NAMES`,\n      categoryName,\n      selectedRowNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport { CategoryH3, OptionDiv, OptionInputDiv, OptionInput } from '../SideBarUtils'\nimport { getBamOptions } from '../../redux/selectors'\n\nconst editedFields = {}\n\nconst BamOptionsPanel = ({ bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ ...bamOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n\n  const handleApplyButton = () => {\n    updateBamOptions({ ...bamOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>BAM Track <br />Options</CategoryH3><br />\n      <OptionDiv><Checkbox label=\"View as pairs\" checked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"Show soft-clips\" checked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n      <OptionDiv>\n        Color by:\n        <select value={bamOptions.colorBy} onChange={(e) => updateBamOptions({ colorBy: e.target.value })}>\n          <option value=\"strand\">Strand</option>\n          <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n          <option value=\"pairOrientation\">Pair orientation</option>\n          <option value=\"fragmentLength\">Insert size (TLEN)</option>\n          <option value=\"none\">None</option>\n        </select>\n      </OptionDiv>\n      <OptionInputDiv>Track height: <OptionInput key={`track-height-${bamOptions.trackHeight}`} type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n      <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n    </div>)\n}\n\nBamOptionsPanel.propTypes = {\n  bamOptions: PropTypes.object,\n  updateBamOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BamOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { CategoryH3, OptionDiv } from '../SideBarUtils'\nimport { getVcfOptions } from '../../redux/selectors'\n\nconst VcfOptionsPanel = ({ vcfOptions, updateVcfOptions }) => {\n  return (\n    <div>\n      <CategoryH3>VCF Track <br />Options</CategoryH3><br />\n      <OptionDiv>\n        Display mode: &nbsp;\n        <select value={vcfOptions.displayMode} onChange={(e) => updateVcfOptions({ displayMode: e.target.value })}>\n          <option value=\"COLLAPSED\">Collapse</option>\n          <option value=\"SQUISHED\">Squish</option>\n          <option value=\"EXPANDED\">Expand</option>\n        </select>\n      </OptionDiv>\n    </div>)\n}\n\nVcfOptionsPanel.propTypes = {\n  vcfOptions: PropTypes.object,\n  updateVcfOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  vcfOptions: getVcfOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VcfOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Checkbox, Icon, Radio } from 'semantic-ui-react'\nimport { CategoryH3, ColorLegendIcon, OptionDiv, OptionInputDiv, OptionInput, StyledPopup } from '../SideBarUtils'\nimport { SJ_MOTIFS, SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../../constants'\nimport { getSjOptions } from '../../redux/selectors'\n\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if (sjOptions.colorBy === 'strand') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n        <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'motif') {\n    // IGV.js Dark2 color palette\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'numUniqueReads' || sjOptions.colorBy === 'numReads') {\n    return (\n      <div>\n        # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n        &nbsp;≤ &nbsp;\n        <OptionInput\n          type=\"text\"\n          key={`num-reads-${sjOptions.colorByNumReadsThreshold}`}\n          defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : SJ_DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n          onKeyUp={(e) => handleTextInput(e, 'colorByNumReadsThreshold')}\n          style={{ width: '35px' }}\n        />\n        &nbsp; &lt; &nbsp;\n        <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n      </div>)\n  }\n  if (sjOptions.colorBy === 'isAnnotatedJunction') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'orange' }} /> novel junction\n      </div>)\n  }\n\n  return <div />\n}\n\nColorByLegend.propTypes = {\n  sjOptions: PropTypes.object,\n  handleTextInput: PropTypes.func,\n}\n\nconst editedFields = {}\n\nconst SpliceJunctionsOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ ...sjOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n  const handleApplyButton = () => {\n    updateSjOptions({ ...sjOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>Junctions Track <br />Options</CategoryH3><br />\n      <OptionDiv>Color by:</OptionDiv>\n      <OptionDiv>\n        <select value={sjOptions.colorBy} onChange={(e) => updateSjOptions({ colorBy: e.target.value })}>\n          <option value=\"strand\">strand</option>\n          <option value=\"motif\">donor/acceptor motif</option>\n          <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n          <option value=\"numReads\"># total reads</option>\n          <option value=\"isAnnotatedJunction\">is known junction</option>\n        </select>\n        <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n      </OptionDiv>\n      <OptionDiv>Junction thickness:</OptionDiv>\n      <OptionDiv>\n        <select value={sjOptions.thicknessBasedOn} onChange={(e) => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n          <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n          <option value=\"numReads\"># total reads</option>\n          <option value=\"isAnnotatedJunction\">is known junction</option>\n        </select>\n      </OptionDiv>\n      <OptionDiv>Junction bounce height:</OptionDiv>\n      <OptionDiv>\n        <select value={sjOptions.bounceHeightBasedOn} onChange={(e) => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n          <option value=\"random\">random</option>\n          <option value=\"distance\">distance</option>\n          <option value=\"thickness\">thickness</option>\n        </select>\n      </OptionDiv>\n      <OptionDiv>Junction label:</OptionDiv>\n      <OptionDiv><Checkbox label=\"# uniquely-mapped\" checked={sjOptions.labelUniqueReadCount} onChange={(e, data) => updateSjOptions({ labelUniqueReadCount: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"# multi-mapped\" checked={sjOptions.labelMultiMappedReadCount} onChange={(e, data) => updateSjOptions({ labelMultiMappedReadCount: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"# total reads\" checked={sjOptions.labelTotalReadCount} onChange={(e, data) => updateSjOptions({ labelTotalReadCount: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"donor/acceptor motif\" checked={sjOptions.labelMotif} onChange={(e, data) => updateSjOptions({ labelMotif: data.checked })} /></OptionDiv>\n      <OptionDiv>\n        <Checkbox label=\"known junction:\" checked={sjOptions.labelAnnotatedJunction} onChange={(e, data) => updateSjOptions({ labelAnnotatedJunction: data.checked })} />\n        <OptionInput key={`junction-label-${sjOptions.labelAnnotatedJunctionValue}`} type=\"text\" defaultValue={sjOptions.labelAnnotatedJunctionValue} onKeyUp={(e) => handleTextInput(e, 'labelAnnotatedJunctionValue')} style={{ width: '35px' }} />\n      </OptionDiv>\n\n      <CategoryH3>Junctions Track Filters</CategoryH3><br />\n      <OptionDiv>\n        Show Strands:\n        <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n        <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n        <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n      </OptionDiv>\n      <OptionDiv><Checkbox label=\"Show known junctions\" checked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"Show novel junctions\" checked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n      <div>\n        <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n        at least <OptionInput key={`uniquely-mapped-reads-${sjOptions.minUniquelyMappedReads}`} type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={(e) => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Total reads:</OptionDiv>\n        at least <OptionInput key={`total-reads-${sjOptions.minTotalReads}`} type=\"text\" defaultValue={sjOptions.minTotalReads} onKeyUp={(e) => handleTextInput(e, 'minTotalReads', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Fraction multi-mapped:\n          <StyledPopup inverted\n            content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n            position=\"left center\"\n            on=\"click\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          />\n        </OptionDiv>\n        at most <OptionInput key={`fraction-multi-mapped-${sjOptions.maxFractionMultiMappedReads}`} type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={(e) => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n        at least <OptionInput key={`spliced-alignment-overhang-${sjOptions.minSplicedAlignmentOverhang}`} type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={(e) => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n        {\n          SJ_MOTIFS.map((motif) => <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} checked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>)\n        }\n      </div>\n      <OptionInputDiv>Track height: <OptionInput key={`track-height-${sjOptions.trackHeight}`} type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n      <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n    </div>)\n}\n\nSpliceJunctionsOptionsPanel.propTypes = {\n  sjOptions: PropTypes.object,\n  updateSjOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  sjOptions: getSjOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpliceJunctionsOptionsPanel)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n//import styled from 'styled-components'\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport { CategoryH3, OptionInputDiv, OptionInput } from '../SideBarUtils'\nimport { getGcnvOptions } from '../../redux/selectors'\n\nconst editedFields = {}\n\nconst GcnvOptionsPanel = ({ gcnvOptions, updateGcnvOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateGcnvOptions({ ...gcnvOptions, ...editedFields })\n    } else {\n      editedFields[name] = value\n    }\n  }\n\n  const handleApplyButton = () => {\n    updateGcnvOptions({ ...gcnvOptions, ...editedFields })\n  }\n\n  return (\n    <div>\n      <CategoryH3>gCNV Options</CategoryH3><br />\n      <OptionInputDiv><Checkbox label=\"Enable clicking background samples\" checked={!gcnvOptions.onlyHandleClicksForHighlightedSamples} onChange={(e, data) => updateGcnvOptions({ ...gcnvOptions, onlyHandleClicksForHighlightedSamples: !data.checked })} /></OptionInputDiv>\n      <OptionInputDiv>Y-min: <OptionInput key={`y-max-${gcnvOptions.trackMin}`} type=\"text\" defaultValue={gcnvOptions.trackMin} onKeyUp={(e) => handleTextInput(e, 'trackMin', parseInt(e.target.value, 10))} /> copies</OptionInputDiv>\n      <OptionInputDiv>Y-max: <OptionInput key={`y-max-${gcnvOptions.trackMax}`} type=\"text\" defaultValue={gcnvOptions.trackMax} onKeyUp={(e) => handleTextInput(e, 'trackMax', parseInt(e.target.value, 10))} /> copies</OptionInputDiv>\n      <OptionInputDiv>Track height: <OptionInput key={`track-height-${gcnvOptions.trackHeight}`} type=\"text\" defaultValue={gcnvOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionInputDiv>\n      <OptionInputDiv><Button compact size=\"small\" onClick={handleApplyButton}>Apply</Button></OptionInputDiv>\n    </div>)\n}\n\nGcnvOptionsPanel.propTypes = {\n  gcnvOptions: PropTypes.object,\n  updateGcnvOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  gcnvOptions: getGcnvOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateGcnvOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_GCNV_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GcnvOptionsPanel)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport EditLocusList from './EditLocusList'\nimport BamOptionsPanel from './optionsPanels/BamOptionsPanel'\nimport VcfOptionsPanel from './optionsPanels/VcfOptionsPanel'\nimport SpliceJunctionsOptionsPanel from './optionsPanels/SpliceJunctionsOptionsPanel'\nimport GcnvOptionsPanel from './optionsPanels/GcnvOptionsPanel'\n\nimport {\n  getRightSideBarLocusList,\n  getEnabledDataTypes,\n} from '../redux/selectors'\n\nclass RightSideBar extends React.PureComponent\n{\n  render() {\n    const {\n      locusList,\n      enabledDataTypes,\n      setLocus,\n      setLocusList,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList\n          name=\"Right Side Bar\"\n          locusList={locusList}\n          setLocus={setLocus}\n          setLocusList={setLocusList}\n        />\n\n        {enabledDataTypes.includes('alignment') && <BamOptionsPanel />}\n        {enabledDataTypes.includes('vcf') && <VcfOptionsPanel />}\n        {enabledDataTypes.includes('junctions') && <SpliceJunctionsOptionsPanel />}\n        {enabledDataTypes.includes('gcnv_bed') && <GcnvOptionsPanel />}\n      </div>)\n  }\n}\n\nRightSideBar.propTypes = {\n  locusList: PropTypes.array,\n  enabledDataTypes: PropTypes.array,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getRightSideBarLocusList(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_RIGHT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable  react/jsx-closing-tag-location */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Icon } from 'semantic-ui-react'\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  margin-left: 20px;\n`\n\nconst AboutLink = () => (\n  <Modal\n    title=\"About the TGG Viewer\"\n    size=\"large\"\n    modalName=\"AboutModal\"\n    trigger={<LinkButton>About</LinkButton>}\n  >\n    The Translational Genomics Group (TGG) Viewer is a free, open-source web app for visualizing splice junctions, copy number, and other data\n    genome-wide using <a href=\"https://github.com/igvteam/igv.js\" target=\"_blank\">IGV.js</a><br />\n    <br />\n    Main features: <br />\n    <ul>\n      <li>Supports most file formats supported by IGV.js, including: .bed, .vcf, .bam, .cram, .bigWig, as well as\n        several custom formats for splice junctions (.junctions.bed.gz) and gCNV copy-number variants (.gcnv.bed.gz) </li>\n      <li>Includes custom reference tracks such as splice junctions from GTEx v8 muscle, blood, and fibroblast samples.</li>\n      <li>Supports adding gene or locus lists to left or right side bar for quick navigation across a list of regions.</li>\n      <li>Can load data files or reference tracks from any Google bucket to which you have read-access.</li>\n      <li>Retrieves just the on-screen sections of the files directly from Google buckets.</li>\n      <li>All settings, gene lists, and data paths can be exported and later restored or shared with others via a .json config file.\n        To export all current settings, click the <Icon name=\"download\" /> button, upload the .json file to github (or another public url), and then\n        to restore the settings, paste the file's URL into the Initial Settings input, and Apply. </li>\n      <li>The page url also records page settings so that they can be bookmarked or shared, but does not include gene lists.</li>\n    </ul>\n\n    <a href=\"https://github.com/broadinstitute/tgg-viewer/issues\" target=\"_blank\">Issues</a>\n    &nbsp;or <a href=\"https://github.com/broadinstitute/tgg-viewer/issues\" target=\"_blank\">Feature Requests</a>\n    &nbsp;can be submitted via <a href=\"https://github.com/broadinstitute/tgg-viewer\" target=\"_blank\">GitHub</a>.\n  </Modal>\n)\n\nexport default AboutLink\n","/* eslint-disable react/jsx-one-expression-per-line */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getUser } from '../redux/selectors'\n\n\nclass UserInfo extends React.PureComponent\n{\n  render() {\n\n    const {\n      user,\n    } = this.props\n\n    if (!user.googleUserEmail) {\n      return <div>Signing in to Google Buckets...</div>\n    }\n\n    return <div>Signed in to Google Buckets as <b>{user.googleUserEmail}</b></div>\n  }\n}\n\nUserInfo.propTypes = {\n  user: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  user: getUser(state),\n\n})\n\nexport default connect(mapStateToProps)(UserInfo)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport AboutLink from './About'\nimport UserInfo from './UserInfo'\n\nconst HeaderRow = styled(Grid.Row)`\n  color: #444;\n  margin-bottom: 5px;\n`\n\nconst Column1 = styled(Grid.Column).attrs({ width: 6 })`\n  text-align: left;\n  padding-left: 75px !important;\n`\nconst Column2 = styled(Grid.Column).attrs({ width: 10 })`\n  text-align: right;\n  padding-right: 75px !important;\n`\n\nexport default () => (\n  <Grid>\n    <HeaderRow>\n      <Column1>\n        <b>TGG Viewer:</b>\n        <AboutLink />\n        {/* <a href=\"#\">Intro Video</a> &nbsp; &nbsp; */}\n      </Column1>\n      <Column2>\n        <UserInfo />\n      </Column2>\n    </HeaderRow>\n  </Grid>)\n","\nexport const throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-unused-prop-types */\n\nimport _ from 'lodash'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n//import styled from 'styled-components'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport {\n  getGenome,\n  getLocus,\n  getTracks,\n  getSelectedSamplesByCategoryNameAndRowName,\n  getEnabledDataTypes,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  getGcnvOptions,\n} from '../redux/selectors'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\nimport { throttle } from '../utils/throttle'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\n\nclass IGV extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextTrackRemovedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <div><div ref={this.setContainerElement} /></div>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    const {\n      genome,\n      locus,\n      tracks,\n      locusChangedHandler,\n      trackRemovedHandler,\n      userChangedHandler,\n    } = this.props\n\n    const igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus,\n      genome,\n      tracks,\n    }\n\n    // TODO check if any tracks need google sign-in\n    await initGoogleClient()\n    await googleSignIn()\n    const googleUserEmail = await getGoogleUserEmail()\n    userChangedHandler(googleUserEmail)\n\n    console.log('Calling igv.createBrowser(..)', igvBrowserOptions)\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n      window.igvBrowser = browser //for debugging\n\n      if (locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, locusChangedHandler))\n      }\n\n      if (trackRemovedHandler) {\n        this.browser.on('trackremoved', (track) => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            trackRemovedHandler(track.config.categoryName, track.config.rowName)\n          }\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n    })\n  }\n\n  shouldTrackBeReloaded = (track, props, nextProps) => {\n    const {\n      selectedSamplesByCategoryNameAndRowName,\n      enabledDataTypes,\n      sjOptions,\n      vcfOptions,\n      bamOptions,\n      gcnvOptions,\n    } = props\n\n    const junctionTrackDisplaySettingsChanged = ['merged', 'wig', 'spliceJunctions'].includes(track.type) && (\n      nextProps.enabledDataTypes.includes('junctions') !== enabledDataTypes.includes('junctions')\n      || nextProps.enabledDataTypes.includes('coverage') !== enabledDataTypes.includes('coverage')\n      || nextProps.sjOptions !== sjOptions)\n    const vcfTrackDisplaySettingsChanged = track.type === 'variant' && nextProps.vcfOptions !== vcfOptions\n    const alignmentTrackDisplaySettingsChanged = track.type === 'alignment' && nextProps.bamOptions !== bamOptions\n    const gcnvTrackDisplaySettingsChanged = track.type === 'gcnv' && nextProps.gcnvOptions !== gcnvOptions\n    const gcnvTrackHighlightedSamplesChanged = track.type === 'gcnv' && (\n      !_.isEqual(\n        ((nextProps.selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).selectedSamples || {})[track.rowName],\n        ((selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).selectedSamples || {})[track.rowName])\n      || !_.isEqual(\n        ((nextProps.selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).sampleSettings || {})[track.rowName],\n        ((selectedSamplesByCategoryNameAndRowName[track.categoryName] || {}).sampleSettings || {})[track.rowName])\n    )\n\n    return junctionTrackDisplaySettingsChanged\n      || vcfTrackDisplaySettingsChanged\n      || alignmentTrackDisplaySettingsChanged\n      || gcnvTrackDisplaySettingsChanged\n      || gcnvTrackHighlightedSamplesChanged\n  }\n\n  getTrackId = (track) => `${track.url}|${track.categoryName}|${track.rowName}`\n\n  getIgvTrackView = (track) => {\n    const trackId = this.getTrackId(track)\n\n    const existingTrackViews = this.browser.trackViews.filter((existingTrackView) => {\n      const existingTrackConfig = (existingTrackView.track || {}).config || {}\n      return trackId === this.getTrackId(existingTrackConfig)\n    })\n\n    return existingTrackViews.length > 0 && existingTrackViews[0]\n  }\n\n  reloadRemoveAndAddTracks = (nextProps) => {\n\n    const nextTrackByTrackName = nextProps.tracks.reduce((acc, track) => {\n      return { [track.name]: track, ...acc }\n    }, {})\n\n    //console.log('IGV.nextProps:', nextProps)\n\n    // reload or remove existing tracks\n    this.props.tracks.forEach((track) => {\n      const nextTrack = nextTrackByTrackName[track.name]\n      if (nextTrack) {\n        if (this.shouldTrackBeReloaded(track, this.props, nextProps))\n        {\n          console.log('Reloading track', track.name)\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n          if (!this.getIgvTrackView(track)) { // double-check that the track isn't already loaded\n            //console.log('calling this.browser.loadTrack for', track.name)\n            this.browser.loadTrack(nextTrack)\n          }\n        }\n\n        // delete track from nextTrackByTrackName to indicate that it's still selected\n        delete nextTrackByTrackName[track.name]\n\n      } else {\n        // remove track that was de-selected\n        try {\n          console.log('Removing track', track.name)\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n        } catch (e) {\n          console.warn('Unable to remove track', track.name, e)\n        }\n      }\n    })\n\n    // load any newly-selected track(s)\n    const remainingTracks = Object.values(nextTrackByTrackName)\n    remainingTracks.forEach((track) => {\n      try {\n        if (!this.getIgvTrackView(track)) { // double-check that the track isn't already loaded\n          console.log('Loading new track', track.name)\n          this.browser.loadTrack(track)\n        }\n      } catch (e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (!this.container || !this.browser) {\n      return false\n    }\n\n    //update locus\n    const currentIGVLocus = this.browser.$searchInput.val()\n    const nextIGVLocus = nextProps.locus\n    if (nextProps.locus && (!currentIGVLocus || nextIGVLocus.replace(/,/g, '') !== currentIGVLocus.replace(/,/g, ''))) {\n      this.browser.search(nextIGVLocus)\n    }\n\n    this.reloadRemoveAndAddTracks(nextProps)\n\n    return false\n  }\n}\n\nIGV.propTypes = {\n  genome: PropTypes.string.isRequired,\n  locus: PropTypes.string.isRequired,\n  tracks: PropTypes.array.isRequired,\n  selectedSamplesByCategoryNameAndRowName: PropTypes.object.isRequired,\n  enabledDataTypes: PropTypes.array.isRequired,\n  locusChangedHandler: PropTypes.func,\n  trackRemovedHandler: PropTypes.func,\n  userChangedHandler: PropTypes.func,\n  sjOptions: PropTypes.object,\n  vcfOptions: PropTypes.object,\n  bamOptions: PropTypes.object,\n  gcnvOptions: PropTypes.object,\n}\n\nconst mapStateToProps = (state) => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  enabledDataTypes: getEnabledDataTypes(state),\n  selectedSamplesByCategoryNameAndRowName: getSelectedSamplesByCategoryNameAndRowName(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n  gcnvOptions: getGcnvOptions(state),\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  locusChangedHandler: (event) => {\n    const newLocus = event.label.replace(/,/g, '')\n\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: newLocus,\n    })\n  },\n\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: { googleUserEmail },\n    })\n  },\n\n  trackRemovedHandler: (categoryName, trackName) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_ROW_NAMES',\n      categoryName,\n      selectedRowNames: [trackName],\n    })\n  },\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n","/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon, Popup } from 'semantic-ui-react'\n\n\nclass RequestStatus extends React.PureComponent {\n\n  static NONE = 'NONE'\n\n  static IN_PROGRESS = 'IN_PROGRESS'\n\n  static SUCCEEDED = 'SUCCEEDED'\n\n  static ERROR = 'ERROR'\n\n  render() {\n    switch (this.props.status) {\n      case RequestStatus.IN_PROGRESS:\n        return <Icon loading name=\"spinner\" style={{ color: '#4183c4' }} />\n      case RequestStatus.SUCCEEDED:\n        return <Popup\n          trigger={\n            <Icon name=\"check circle\" style={{ color: '#00C000' }} />\n          }\n          content={this.props.successMessage || 'Success'}\n          position=\"top center\"\n          size=\"small\"\n        />\n      case RequestStatus.ERROR:\n        return <Popup\n          trigger={\n            <Icon name=\"warning circle\" style={{ color: '#F00000' }} />\n          }\n          content={this.props.errorMessage || ''}\n          position=\"top center\"\n          size=\"small\"\n        />\n      default:\n        return <Icon name=\"warning circle\" style={{ color: 'rgb(0,0,0,0.0)' }} />\n    }\n  }\n}\n\nRequestStatus.propTypes = {\n  status: PropTypes.string,\n  errorMessage: PropTypes.string,\n  successMessage: PropTypes.string,\n}\n\nexport default RequestStatus\n","import LZString from 'lz-string'\n\n/* in-memory cache to avoid unnecessary compression/decompression */\nconst CACHE = {}\n\n/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const jsonString = JSON.stringify(state)\n    if (CACHE[label] === jsonString) {\n      return\n    }\n    console.warn(`LocalStorage: compressing ${label}`)\n    const serializedState = LZString.compress(jsonString)\n    localStorage.setItem(label, serializedState)\n    CACHE[label] = jsonString\n  } catch (err) {\n    console.warn('Unable to save state: ', label, state, err)\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    const jsonString = LZString.decompress(serializedState)\n    CACHE[label] = jsonString\n\n    if (jsonString === null) {\n      return undefined\n    }\n\n    return JSON.parse(jsonString)\n  } catch (err) {\n    return undefined\n  }\n}\n","/* eslint-disable operator-linebreak */\n/* eslint-disable no-unused-vars */\n\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\n\nconst INITIAL_ROWS_IN_CATEGORIES = []\n\nexport const DEFAULT_STATE = {\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  dataTypesToShow: ['junctions', 'coverage', 'vcf', 'gcnv_bed'],\n  leftSideBarLocusList: [],\n  rightSideBarLocusList: [],\n  rowsInCategories: INITIAL_ROWS_IN_CATEGORIES,\n  selectedRowNamesByCategoryName: {},\n  sjOptions: {\n    trackHeight: 170,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 0,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelUniqueReadCount: true,\n    labelMultiMappedReadCount: false,\n    labelTotalReadCount: false,\n    labelMotif: false,\n    labelAnnotatedJunction: false,\n    labelAnnotatedJunctionValue: ' [A]',\n  },\n  vcfOptions: {\n    displayMode: 'EXPANDED',\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    alignmentShading: 'strand',\n  },\n  gcnvOptions: {\n    trackHeight: 200,\n    trackMin: 0,\n    trackMax: 5,\n    autoscale: false,\n    onlyHandleClicksForHighlightedSamples: true,\n  },\n  initialSettingsUrl: '',\n}\n\nconst KEYS_TO_PERSIST_IN_URL = {\n  locus: 'locus',\n  dataTypesToShow: 'show',\n  selectedRowNamesByCategoryName: 'selectedRows',\n  selectedSamplesByCategoryNameAndRowName: 'selectedSamples',\n  sjOptions: 'sjOptions',\n  vcfOptions: 'vcfOptions',\n  bamOptions: 'bamOptions',\n  gcnvOptions: 'gcnvOptions',\n  initialSettingsUrl: 'settingsUrl',\n  initialSettingsUrlHasBeenApplied: 'settingsUrlApplied',\n}\n\nconst KEYS_TO_PERSIST_IN_LOCAL_STORAGE = [\n  'rowsInCategories', 'leftSideBarLocusList', 'rightSideBarLocusList',\n]\n\n\nexport const computeInitialState = () => {\n\n  // restore values from local storage\n  const stateFromLocalStorage = KEYS_TO_PERSIST_IN_LOCAL_STORAGE.reduce((acc, key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      acc[key] = v\n    }\n    return acc\n  }, {})\n\n  // restore values from url\n  const REVERSE_KEY_NAME_LOOKUP = Object.entries(KEYS_TO_PERSIST_IN_URL).reduce(\n    (acc, [key, value]) => {\n      return { ...acc, [value]: key }\n    }, {})\n  const hashString = window.location.hash.replace(/^#/, '')\n\n  const stateFromUrlHash = hashString ?\n    hashString.split('&').reduce((acc, keyValue) => {\n      const keyValueList = keyValue.split('=')\n      const key = (keyValueList[0] in REVERSE_KEY_NAME_LOOKUP) ? REVERSE_KEY_NAME_LOOKUP[keyValueList[0]] : keyValueList[0]\n      if (key === 'locus') {\n        acc = { ...acc, [key]: keyValueList[1] }\n      } else {\n        try {\n          acc[key] = jsurl.parse(keyValueList[1])\n        } catch (e) {\n          console.error('Couldn\\'t parse url hash param', keyValueList[0], ': ', keyValueList[1])\n        }\n      }\n      return acc\n    }, {})\n    : {}\n\n  // default values are over-ridden by values from local storage, which are over-ridden by values from the url\n  const initialState = { ...DEFAULT_STATE, ...stateFromLocalStorage, ...stateFromUrlHash }\n\n  return initialState\n}\n\n\nexport const updateLocalStorageAndUrl = (state) => {\n  //update local storage\n\n  KEYS_TO_PERSIST_IN_LOCAL_STORAGE.forEach((key) => {\n    saveState(key, state[key])\n  })\n\n  //update url\n  const hashString = Object.keys(state)\n    .filter((key) => (key in KEYS_TO_PERSIST_IN_URL))\n    .reduce((hashKeyValueList, key) => {\n      const value = key === 'locus' ? state[key].replace(',', '') : jsurl.stringify(state[key])\n      return [\n        ...hashKeyValueList,\n        `${KEYS_TO_PERSIST_IN_URL[key]}=${value}`,\n      ]\n    }, []).join('&')\n\n  window.location.hash = `#${hashString}`\n}\n","/* eslint-disable react/no-find-dom-node */\n/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Input, Popup } from 'semantic-ui-react'\nimport delay from 'timeout-as-promise'\nimport yaml from 'js-yaml'\nimport { getInitialSettingsUrl, getInitialSettingsUrlHasBeenApplied } from '../redux/selectors'\nimport RequestStatus from './RequestStatus'\nimport { DEFAULT_STATE } from '../redux/initialState'\n\nconst StyledDiv = styled.div`\n  color: #999;\n  width: 100%;\n  text-align: center;\n  \n  .ui.label {\n    color: #444;\n    background-color: #f3f3f3;\n  }\n`\n\nconst StyledInput = styled(Input)`\n  margin-top: 100px;\n  width: calc(100% - 350px);\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 20px !important;\n  margin-right: 15px !important;\n`\n\nclass InitialSettingsForm extends React.PureComponent\n{\n  constructor(props) {\n    super(props)\n    this.textInputValue = props.initialSettingsUrl || ''\n    this.state = {\n      requestStatus: RequestStatus.NONE,\n      successMessage: '',\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      initialSettingsUrl,\n      initialSettingsUrlHasBeenApplied,\n    } = this.props\n\n    if (initialSettingsUrl && !initialSettingsUrlHasBeenApplied) {\n      // download url\n      console.log('Loading settings from url', initialSettingsUrl)\n      await this.applyInitialSettingsUrl(initialSettingsUrl)\n    }\n  }\n\n  loadInitialSettingsUrl = async (url) => {\n    const {\n      globalState,\n      updateInitialSettingsUrl,\n      setInitialSettingsUrlHasBeenApplied,\n      resetGlobalState,\n    } = this.props\n\n    if (!url) {\n      //reset url to empty\n      resetGlobalState({ ...DEFAULT_STATE, ...{ user: globalState.user } })\n      updateInitialSettingsUrl('')\n      setInitialSettingsUrlHasBeenApplied()\n      return\n    }\n\n    //validate url\n    if (url.search(':') === -1 || url.search('/') === -1) {\n      throw new Error(`Invalid url: \"${url}\"`)\n    }\n\n    const isYaml = url.search('.yaml') !== -1 || url.search('.yml') !== -1\n    const isJson = url.search('.json') !== -1\n    const isUnknown = !isYaml && !isJson\n\n    //NOTE: changed my mind about requiring a .yaml or .json extension to allow for more flexibility.\n    //if (!isYamlURL && !isJsonURL) {\n    //  throw new Error('Expected file extensions (\".yaml\", \".yml\", or \".json\") not found in the URL')\n    //}\n\n    const response = await fetch(url)\n    if (!response.ok) {\n      throw new Error(`Couldn't load URL. Error: ${response.statusText.toLowerCase()} (${response.status})`)\n    }\n\n    const fileContents = await response.text()\n\n    let settings = null\n    if (!settings && (isYaml || isUnknown)) {\n      try {\n        settings = yaml.safeLoad(fileContents)\n      } catch (e) {\n        if (isYaml) {\n          console.error(`Unable to parse YAML file: ${url}. ${e}`)\n          return\n        }\n      }\n    }\n\n    if (!settings && (isJson || isUnknown)) {\n      try {\n        settings = JSON.parse(fileContents)\n      } catch (e) {\n        if (isJson) {\n          console.error(`Unable to parse JSON file: ${url}. ${e}`)\n          return\n        }\n      }\n    }\n\n    if (!settings) {\n      console.error(`Unable to parse JSON or YAML from: ${url}`)\n      return\n    }\n\n    // TODO validate settings more\n\n    // filter settings to keys in globalState\n    const filteredSettings = Object.keys(globalState).reduce((acc, key) => {\n      if (key in settings) {\n        return { ...acc, [key]: settings[key] }\n      }\n      return acc\n    }, {})\n\n    // apply settings\n    resetGlobalState({ ...globalState, ...filteredSettings })\n    updateInitialSettingsUrl(url)\n    setInitialSettingsUrlHasBeenApplied()\n  }\n\n  applyInitialSettingsUrl = async (url) => {\n\n    this.setState({ requestStatus: RequestStatus.IN_PROGRESS })\n\n    if (url.startsWith('https://github.com/')) {\n      // switch to the github raw url\n      url = url.replace('https://github.com', 'https://raw.githubusercontent.com').replace('blob/', '')\n    }\n\n    try {\n      await this.loadInitialSettingsUrl(url)\n\n      this.setState({ requestStatus: RequestStatus.SUCCEEDED, successMessage: url ? 'Successfully loaded URL and applied settings' : 'Reset all settings to defaults' })\n    } catch (e) {\n      this.setState({ requestStatus: RequestStatus.ERROR, errorMessage: e.toString() })\n    }\n\n    // wait and then clear the message\n    await delay(10000)\n    if (this.state.requestStatus !== RequestStatus.IN_PROGRESS) {\n      this.setState({ requestStatus: RequestStatus.NONE, errorMessage: '' })\n    }\n  }\n\n  exportCurrentSettings = () => {\n    //convert global state to a JSON string\n    const EXCLUDED_KEYS = ['initialSettings', 'initialSettingsUrlHasBeenApplied', 'user', 'modals']\n    const globalStateForExport = Object.keys(this.props.globalState).reduce((acc, key) => {\n      if (!EXCLUDED_KEYS.includes(key)) {\n        acc[key] = this.props.globalState[key]\n      }\n      return acc\n    }, {})\n\n    return encodeURIComponent(JSON.stringify(globalStateForExport, null, 5))\n  }\n\n  render() {\n    const {\n      initialSettingsUrl,\n    } = this.props\n\n    return (\n      <StyledDiv align=\"center\">\n        <StyledInput\n          label=\"Initial settings:\"\n          defaultValue={initialSettingsUrl}\n          placeholder=\"URL of .yaml or .json settings file (eg. http://.../settings.json), or blank to reset all settings to defaults.\"\n          onChange={(e) => { this.textInputValue = e.target.value }}\n          onKeyUp={(e) => e.keyCode === 13 && this.applyInitialSettingsUrl(e.target.value)}\n        />\n        <StyledButton\n          content=\"Apply\"\n          onClick={() => this.applyInitialSettingsUrl(this.textInputValue)}\n        />\n        <RequestStatus\n          status={this.state.requestStatus}\n          errorMessage={this.state.errorMessage}\n          successMessage={this.state.successMessage}\n        />\n        <Popup\n          content=\"Export current settings to a .json file. If you then upload this file to a public url (for example to github) and then paste the url here, these settings will be restored.\"\n          position=\"right center\"\n          trigger={\n            <a download=\"settings.json\" href={`data:text/json;charset=utf-8,${this.exportCurrentSettings()}`}>\n              <Button icon=\"download\" />\n            </a>\n          }\n        />\n      </StyledDiv>)\n  }\n}\n\nInitialSettingsForm.propTypes = {\n  initialSettingsUrl: PropTypes.string.isRequired,\n  initialSettingsUrlHasBeenApplied: PropTypes.bool.isRequired,\n  globalState: PropTypes.object,\n  updateInitialSettingsUrl: PropTypes.func,\n  setInitialSettingsUrlHasBeenApplied: PropTypes.func,\n  resetGlobalState: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  globalState: state,\n  initialSettingsUrl: getInitialSettingsUrl(state),\n  initialSettingsUrlHasBeenApplied: getInitialSettingsUrlHasBeenApplied(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateInitialSettingsUrl: (newUrl) => {\n    dispatch({\n      type: 'UPDATE_INITIAL_SETTINGS_URL',\n      newValue: newUrl,\n    })\n  },\n  setInitialSettingsUrlHasBeenApplied: () => {\n    dispatch({\n      type: 'UPDATE_INITIAL_SETTINGS_URL_HAS_BEEN_APPLIED',\n      newValue: true,\n    })\n  },\n  resetGlobalState: (state) => {\n    dispatch({\n      type: 'RESET_GLOBAL_STATE',\n      newState: state,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialSettingsForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport Header from './Header'\nimport IGV from './IGV'\nimport InitialSettingsForm from './InitialSettingsForm'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nconst SIDE_BAR_WIDTH = 210\n\nconst SideBarColumn = styled(Grid.Column)`\n  min-width: ${SIDE_BAR_WIDTH}px !important;\n`\n\nconst MiddleColumn = styled(Grid.Column)`\n  min-width: calc(99% - ${2 * SIDE_BAR_WIDTH + 5}px) !important;\n`\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <SideBarColumn><LeftSideBar /></SideBarColumn>\n        <MiddleColumn>\n          <Header />\n          <IGV />\n          <InitialSettingsForm />\n        </MiddleColumn>\n        <SideBarColumn><RightSideBar /></SideBarColumn>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","/* eslint-disable prefer-object-spread */\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { updateLocalStorageAndUrl, computeInitialState } from './initialState'\n\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\nimport modalReducers from './utils/modalReducer'\n\n\nconst rowsInCategoriesReducer = (state, action) => {\n  if (!action || !action.categoryName || !action.rows) {\n    return state || []\n  }\n\n  return state.map((category) => {\n    if (category.categoryName !== action.categoryName) {\n      return category\n    }\n\n    let updatedRows\n    switch (action.type) {\n      case 'SET_ROWS': {\n        updatedRows = [...action.rows]\n        break\n      }\n      case 'ADD_ROWS': {\n        const existingNames = category.rows.map((row) => row.name)\n        updatedRows = [...category.rows, ...action.rows.filter((row) => !existingNames.includes(row.name))]\n        break\n      }\n      default:\n        updatedRows = category.rows\n    }\n\n    const result = {\n      ...category,\n      rows: updatedRows,\n    }\n    return result\n  })\n}\n\n\nconst selectedRowNamesByCategoryNameReducer = (state, action) => {\n  if (!action || !action.categoryName || !Array.isArray(action.selectedRowNames)) {\n    return state || {}\n  }\n  const previousList = state[action.categoryName] || []\n  switch (action.type) {\n    case 'SET_SELECTED_ROW_NAMES':\n    case 'ADD_SELECTED_ROW_NAMES':\n    case 'REMOVE_SELECTED_ROW_NAMES': {\n      let updatedList\n      if (action.type === 'SET_SELECTED_ROW_NAMES') {\n        updatedList = Array.from(new Set(action.selectedRowNames)) // make a copy of action.values\n      } else if (action.type === 'ADD_SELECTED_ROW_NAMES') {\n        updatedList = Array.from(new Set([...previousList, ...action.selectedRowNames]))\n      } else {\n        const valuesToRemove = action.selectedRowNames\n        updatedList = previousList.filter((v) => !valuesToRemove.includes(v))\n      }\n\n      return {\n        ...state,\n        [action.categoryName]: updatedList,\n      }\n    }\n    default:\n      console.trace(`Unknown action type: ${action.type}`)\n  }\n\n  return state\n}\n\n\nconst selectedSamplesByCategoryNameAndRowNameReducer = (state, action) => {\n  if (!action || !action.categoryName || (!action.selectedSamplesByRowName && !action.sampleSettingsByRowNameAndSampleName)) {\n    return state || {}\n  }\n\n  const categoryObj = state[action.categoryName] || {}\n  const previousSelectedSamplesByRowName = categoryObj.selectedSamples || {}\n  const previousSampleSettingsByRowNameAndSampleName = categoryObj.sampleSettings || {}\n  let updatedSelectedSamplesByRowName = previousSelectedSamplesByRowName\n  let updatedSampleSettingsByRowNameAndSampleName = previousSampleSettingsByRowNameAndSampleName\n\n  switch (action.type) {\n    case 'SET_SELECTED_SAMPLES':\n    case 'ADD_SELECTED_SAMPLES':\n    case 'REMOVE_SELECTED_SAMPLES': {\n      if (action.type === 'SET_SELECTED_SAMPLES') {\n        updatedSelectedSamplesByRowName = { ...previousSelectedSamplesByRowName, ...action.selectedSamplesByRowName }\n      } else if (action.type === 'ADD_SELECTED_SAMPLES') {\n        updatedSelectedSamplesByRowName = Array.from(new Set([\n          ...Object.keys(previousSelectedSamplesByRowName),\n          ...Object.keys(action.selectedSamplesByRowName),\n        ])).reduce((acc, rowName) => {\n          acc[rowName] = Array.from(new Set([...(previousSelectedSamplesByRowName[rowName] || []), ...(action.selectedSamplesByRowName[rowName] || [])]))\n\n          return acc\n        }, {})\n      } else {\n        updatedSelectedSamplesByRowName = Object.keys(previousSelectedSamplesByRowName).reduce((acc, rowName) => {\n          const valuesToRemove = action.selectedSamplesByRowName[rowName] || []\n          const updatedList = (previousSelectedSamplesByRowName[rowName] || []).filter((v) => !valuesToRemove.includes(v))\n          if (updatedList.length > 0) {\n            acc[rowName] = updatedList\n          }\n          return acc\n        }, {})\n      }\n      break\n    }\n\n    case 'UPDATE_SAMPLE_SETTINGS': {\n      updatedSampleSettingsByRowNameAndSampleName = {\n        ...previousSampleSettingsByRowNameAndSampleName,\n        ...action.sampleSettingsByRowNameAndSampleName,\n      }\n      Object.keys(action.sampleSettingsByRowNameAndSampleName).forEach((rowName) => {\n        const previousSampleSettingsBySampleName = previousSampleSettingsByRowNameAndSampleName[rowName] || {}\n        const newSampleSettingsBySampleName = action.sampleSettingsByRowNameAndSampleName[rowName]\n        const mergedSamplesSettingsBySampleName = {\n          ...previousSampleSettingsBySampleName,\n          ...newSampleSettingsBySampleName,\n        }\n        Object.entries(newSampleSettingsBySampleName).forEach(\n          ([sampleName, sampleSettings]) => {\n            const mergedSampleSettings = {\n              ...previousSampleSettingsBySampleName[sampleName] || {},\n              ...sampleSettings,\n            }\n            mergedSamplesSettingsBySampleName[sampleName] = mergedSampleSettings\n          })\n        updatedSampleSettingsByRowNameAndSampleName[rowName] = mergedSamplesSettingsBySampleName\n      })\n      break\n    }\n\n    default: {\n      console.trace(`Unknown action type: ${action.type}`)\n      return state\n    }\n  }\n\n  return {\n    ...state,\n    [action.categoryName]: {\n      selectedSamples: updatedSelectedSamplesByRowName,\n      sampleSettings: updatedSampleSettingsByRowNameAndSampleName,\n    },\n  }\n}\n\n// combined reducers\nconst otherReducers = combineReducers(Object.assign({\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  rightSideBarLocusList: createArrayReducer('RIGHT_SIDE_BAR_LOCUS_LIST'),\n  leftSideBarLocusList: createArrayReducer('LEFT_SIDE_BAR_LOCUS_LIST'),\n  dataTypesToShow: createArrayReducer('DATA_TYPES_TO_SHOW'),\n  rowsInCategories: rowsInCategoriesReducer,\n  selectedRowNamesByCategoryName: selectedRowNamesByCategoryNameReducer,\n  selectedSamplesByCategoryNameAndRowName: selectedSamplesByCategoryNameAndRowNameReducer,\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  gcnvOptions: createSingleObjectReducer('UPDATE_GCNV_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n  initialSettingsUrl: createSingleValueReducer('UPDATE_INITIAL_SETTINGS_URL', ''),\n  initialSettingsUrlHasBeenApplied: createSingleValueReducer('UPDATE_INITIAL_SETTINGS_URL_HAS_BEEN_APPLIED', false),\n}, modalReducers))\n\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'RESET_GLOBAL_STATE') {\n    return action.newState\n  }\n\n  const nextState = otherReducers(state, action)\n\n  updateLocalStorageAndUrl(nextState)\n  return nextState\n}\n\n\n/**\n * Initialize and return the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const createReduxStore = () => {\n\n  const initialState = computeInitialState()\n\n  console.log('Initializing store to:', initialState)\n\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunkMiddleware)))\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport { createReduxStore } from './redux/rootReducer'\n\nfunction App() {\n  return (\n    <Provider store={createReduxStore()}>\n      <BaseLayout />\n    </Provider>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}