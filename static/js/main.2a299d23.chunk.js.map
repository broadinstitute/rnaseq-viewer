{"version":3,"sources":["redux/utils/reducerFactories.js","redux/utils/modalReducer.js","components/Modal.jsx","components/EditLocusList.jsx","components/SideBarUtils.jsx","constants.js","utils/googleAuth.js","redux/selectors.js","components/EditSamplePaths.jsx","components/LeftSideBar.jsx","components/RightSideBar.jsx","components/UserInfo.jsx","components/Header.jsx","utils/throttle.js","components/IGV.jsx","components/InitialSettingsForm.jsx","components/BaseLayout.jsx","redux/rootReducer.js","utils/localStorage.js","redux/configureStore.js","App.js","index.js"],"names":["createSingleValueReducer","updateActionType","initialState","debug","reducer","state","action","type","undefined","newValue","console","error","log","createSingleObjectReducer","updates","newState","createArrayReducer","actionTypeSuffix","Array","isArray","values","valuesToRemove","filter","v","includes","modals","key","updatesById","shallowCopy","Object","entries","forEach","id","obj","createObjectsByIdReducer","getModalOpen","modalName","open","ButtonLink","styled","Button","attrs","basic","props","padding","color","fontWeight","ContainerDiv","div","StyledButton","CustomModal","handleClose","doClose","close","handleSave","trigger","this","React","cloneElement","onClick","Modal","isOpen","onClose","size","Header","title","floated","icon","Icon","name","Content","children","tabIndex","PureComponent","defaultProps","connect","ownProps","dispatch","e","preventDefault","confirmed","getState","confirmOnClose","confirming","LinkButton","a","EditLocusListButtonAndModal","render","locusList","setLocusList","length","newLocusList","textAreaValue","split","Boolean","Form","Field","control","TextArea","style","minHeight","defaultValue","onKeyUp","target","value","placeholder","join","EditLocusList","setLocus","map","locus","i","CategoryH3","h3","OptionDiv","StyledPopup","Popup","SUPPORTED_FILE_EXTENSIONS","MOTIFS","googleSignIn","async","gapi","auth2","getAuthInstance","authInstance","isSignedIn","get","signIn","getGoogleUserEmail","profile","currentUser","getBasicProfile","getEmail","getGoogleAccessToken","user","reloadAuthResponse","getAuthResponse","access_token","getLocus","getRightSideBarLocusList","rightSideBarLocusList","getLeftSideBarLocusList","leftSideBarLocusList","getGenome","genome","getSamplesInCategories","samplesInCategories","getSelectedSampleNamesByCategoryName","selectedSampleNamesByCategoryName","getSjOptions","sjOptions","getVcfOptions","vcfOptions","getBamOptions","bamOptions","getUser","getInitialSettingsUrl","initialSettingsUrl","getInitialSettings","initialSettings","getSamplesByCategoryName","createSelector","reduce","acc","category","categoryName","samples","getSelectedSamplesByCategoryName","samplesByCategoryName","selectedSampleNames","sample","getTracks","selectedSamplesByCategoryName","igvTracks","selectedSamples","junctionsTrack","coverageTrack","junctions","showJunctions","format","url","indexURL","oauthToken","order","height","trackHeight","minUniquelyMappedReads","minTotalReads","maxFractionMultiMappedReads","minSplicedAlignmentOverhang","thicknessBasedOn","bounceHeightBasedOn","colorBy","colorByNumReadsThreshold","hideStrand","showOnlyPlusStrand","showOnlyMinusStrand","labelUniqueReadCount","labelMultiMappedReadCount","labelTotalReadCount","labelMotif","labelAnnotatedJunction","labelAnnotatedJunctionValue","hideAnnotatedJunctions","hideAnnotated","hideUnannotatedJunctions","hideUnannotated","hideMotifs","motif","coverage","showCoverage","push","tracks","showVcfs","vcf","indexUrl","indexed","displayMode","showBams","bam","viewAsPairs","showSoftClips","searchable","visibilityWindow","ExampleDiv","ExamplePath","span","StyledRadio","Radio","position","EditSamplePathsButtonAndModal","getInitialState","convertSamplesToTextAreaValue","warningMessage","errorMessage","parseTextAreaValueToSamples","trim","invalidPaths","samplesBySampleName","samplePath","pathTokens","fileName","matchingExtensions","keys","ext","endsWith","filePrefix","replace","yaml","safeLoad","JSON","parse","flat","safeDump","flowLevel","stringify","formatRadioButtonChangeHandler","data","setState","checked","label","getInitialSamplesInCategory","showResetButton","initialSamplesInCategories","originalCategories","resetButtonClickHandler","initialSamplesInCategory","handleModalSave","setSamples","handleModalClose","fullTitle","someSamplesHaveDescriptionOrMultipleDataFiles","some","description","disabled","onChange","marginLeft","content","float","Message","updateSamples","actionType","CategoryDetails","StyledIcon","JunctionsIcon","CoverageIcon","BamIcon","VcfIcon","SampleColorLabelsContainer","NoWrapDiv","SampleColorLabelsWithPopup","paddingRight","colSpan","fontSize","marginTop","s","navigator","clipboard","writeText","CategoryPanel","updateSelectedSampleNames","toUpperCase","SamplesPanel","j","SamplePanel","Checkbox","data-sample","SampleDetails","inverted","LeftSideBar","updateSjOptions","updateVcfOptions","updateBamOptions","defaultChecked","newSettings","OptionInput","input","ColorLegendIcon","ColorByLegend","handleTextInput","width","SjOptionsPanel","keyCode","parseInt","on","BamOptionsPanel","VcfOptionsPanel","RightSideBar","UserInfo","googleUserEmail","HeaderRow","Grid","Row","Column1","Column","Column2","href","window","location","throttle","delay","fn","timerId","args","clearTimeout","setTimeout","IGV_SETTINGS","showIdeogram","showNavigation","showRuler","showCenterGuide","showCursorTrackingGuide","showCommandBar","StyledDiv","IGV","setContainerElement","element","container","ref","browser","ignoreNextTrackRemovedEvent","locusChangedHandler","trackRemovedHandler","userChangedHandler","igvBrowserOptions","Promise","resolve","load","client","init","clientId","scope","discoveryDocs","igv","createBrowser","then","track","nextProps","search","nextTrackSettingsByTrackName","item","nextTrackSettings","removeTrackByName","loadTrack","warn","Component","event","newLocus","StyledInput","Input","InitialSettingsForm","align","minWidth","rootReducer","combineReducers","assign","updatedSamples","previousList","updatedList","trace","modalReducers","loadState","serializedState","localStorage","getItem","err","REFERENCE_DATA_ROOT","INITIAL_STATE","alignmentShading","PERSIST_KEYS_IN_URL","PERSIST_KEYS_IN_LOCAL_STORAGE","enhancer","compose","applyMiddleware","thunkMiddleware","store","next","result","nextState","setItem","saveState","hashString","hashKeyValueList","jsurl","hash","configureStore","REVERSE_KEY_NAME_LOOKUP","stateFromUrlHash","keyValue","keyValueList","createStore","App","BaseLayout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a299d23.chunk.js","sourcesContent":["/**\n * Redux reducers take a 'state' object representing the current application\n * state, and an 'action' object specifying some change to that state.\n * They apply the change and return the updated 'state' object.\n * For more details, see: http://redux.js.org/docs/basics/Reducers.html\n *\n * This module provides generic reducers that can be used to manage the following common types of\n * state shapes:\n *\n * { ... } - zero actions - arbitrary state shape that doesn't change after it's initialized, so\n *          this reducer doesn't perform any actions.\n *\n * value - single value - reducer supports 1 action that replaces the value with a new value.\n *\n * { key1: value1, key2: value2 .. } - single object - reducer supports 1 action that allows\n *          changing the values of one or more keys.\n *\n * { id1: { key1: value1, key2: value2, .. },\n *   id2: { key1: value1, key2: value2, .. },\n *   id3: ... }  -  objects by id - reducer supports several actions:\n *          adding or deleting objects by id, and updating the values within one or more objects\n *          specified by id.\n *\n *\n * ==========\n * Additional state shapes that may be implemnted as needed:\n *\n * { id1: value1, id2: value2 .. } - values by id - reducer supports several actions:\n *          adding or deleting values by id, and replacing one or more values by id.\n *\n * [ value1, value2, .. ] - single array - supports actions that add and remove values from the array\n *\n * { id1: [ value1, value2, .. ]\n *   id2: [ value1, value2, .. ] - arrays by id\n */\n\n/**\n * Reducer that can be used to manage any state that doesn't change after it's initialized.\n */\nexport const zeroActionsReducer = (state = {}) => {\n  return state\n}\n\n/**\n * Factory function that creates a reducer for managing any state object that's treated as a single\n * atomic value, where the only supported modification is to replace this value with a new value.\n *\n * As an example use case, lets say an app has one or more on/off toggles. Each of these toggles is\n * bound to a single state variable: 'isOn' which is either true or false.\n *\n * This function can be used to create the reducer(s) for managing a toggle's state:\n *\n * const rootReducer = combineReducers({\n *        toggleA: createSingleValueReducer('UPDATE_TOGGLE_A'),\n *        toggleB: createSingleValueReducer('UPDATE_TOGGLE_B'),\n *        ...\n *      })\n *\n * Here, the argument 'UPDATE_TOGGLE_A' specifies the action type that will later be dispatched\n * to update that toggle's state. For example, to set a toggle to \"off\":\n *\n * dispatch({\n *      type: 'UPDATE_TOGGLE_A',\n *      newValue: false,\n * })\n *\n * @param updateActionType (string) action.type that will later be used to replace the state with a\n * new state.\n */\nexport const createSingleValueReducer = (updateActionType, initialState, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.newValue === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.newValue is undefined: `, action)\n          return state\n        }\n        if (debug) {\n          console.log('singleValueReducer: applying action: ', action, 'State changing from ', state, ' to ', action.newValue)\n        }\n        return action.newValue\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object with some fixed set of keys.\n * The reducer supports an 'UPDATE' action that can be used to set one or more\n * of these keys to new values.\n *\n * As an example use case, lets say an app displays several instances of a widget whose state\n * consists of this state object:\n *\n *    { isVisible: true, size: 5, names:  ['bob', 'gary', .. ], ... }\n *\n * This function can be used to create a reducer for this state:\n *\n *    const widgetReducer = createSingleObjectReducer('UPDATE_WIDGET')\n *\n * Here, the argument 'UPDATE_WIDGET' specifies the action type that will later be dispatched to\n * update the widget's state.\n *\n * After this, an action with type 'UPDATE_WIDGET' can be dispatched:\n *\n *    dispatch({\n *      type: 'UPDATE_WIDGET',\n *      updates: { isVisible: false, names: ['jim', 'liza'] }\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    { isVisible: false, size: 5, names:  ['jim', 'liza'], ... }\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        widget1: createSingleObjectReducer('UPDATE_WIDGET1'),\n *        widget2: createSingleObjectReducer('UPDATE_WIDGET2'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createSingleObjectReducer = (updateActionType, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updates === undefined) {\n          console.error(`Invalid ${updateActionType} action: action.updates is undefined: `, action)\n          return state\n        }\n\n        const newState = { ...state, ...action.updates }\n        if (debug) {\n          console.log('singleObjectReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing an array of items.\n * The reducer supports 'ADD' and 'REMOVE' actions for adding/removing one or more items from the array.\n * It also supports a 'SET' action that replaces the existing array with a new one (or can be used to set\n * it to an empty array).\n *\n * An example use case is a list of track names in IGV:\n *\n *    [ 'Sample1', 'Sample2']\n *\n * This function can be used to create a reducer for this state:\n *\n *    const samplesReducer = createArrayReducer('SAMPLES', [ 'Sample1', 'Sample2'])\n *\n * Here, the argument 'SAMPLES' means the reducer will support the following action types:\n *    'ADD_SAMPLES'     (to add one or more samples to the end of the list)\n *    'REMOVE_SAMPLES'  (to remove or more samples from the list)\n *    'SET_SAMPLES'     (to replace existing samples with a new array of 0 or more samples)\n *\n * After this, an 'ADD_SAMPLES' action can be dispatched as follows:\n *\n *    dispatch({\n *      type: 'ADD_SAMPLES',\n *      values: ['Sample3', 'Sample4']\n *    })\n *\n * which will cause the state object to be updated to:\n *\n *    [ 'Sample1', 'Sample2', 'Sample3', 'Sample4']\n *\n * These reducers can also be used with combineReducers(..):\n *\n *    const rootReducer = combineReducers({\n *        samples: createArrayReducer('SAMPLES', ['Sample1', 'Sample2']),\n *        tags: createArrayReducer('TAGS'),\n *        other: ..,\n *        ..\n *    })\n *\n * @param updateActionType (string) action.type that will later be used to update the state object.\n */\nexport const createArrayReducer = (actionTypeSuffix, initialState = [], debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case `SET_${actionTypeSuffix}`:\n      case `ADD_${actionTypeSuffix}`:\n      case `REMOVE_${actionTypeSuffix}`: {\n        if (!Array.isArray(action.values)) {\n          console.error(`Invalid ${action.type} action: action.values is undefined or not an array: `, action)\n          return state\n        }\n\n        let newState\n        if (action.type === `SET_${actionTypeSuffix}`) {\n          newState = [...action.values] // make a copy of action.values\n        } else if (action.type === `ADD_${actionTypeSuffix}`) {\n          newState = [...state, ...action.values]\n        } else {\n          const valuesToRemove = action.values\n          newState = state.filter((v) => !valuesToRemove.includes(v))\n        }\n\n        if (debug) {\n          console.log('createArrayReducer: applying action: ', action, 'State changing from ', state, ' to ', newState)\n        }\n        return newState\n      }\n\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * { id1: { key1: valueA, key2: valueB, key3: valueC },\n *   id2: { key1: valueI, key2: valueJ, key3: valueK },\n *   id3: ...\n * }\n *\n * This state object is analogous to a database table, where the contained objects represent table\n * rows and have identical sets of keys but different values, so that each key can be thought of as\n * a column in the table.\n *\n * This reducer supports a single action type that can be used to transform the underlying state\n * in several ways:\n *    - adding new objects by id\n *    - deleting objects by id\n *    - updating the values within one or more existing objects by id\n *\n * As an example, the reducer can be created as follows:\n *\n *      const tableRowReducer = createObjectsByIdReducer('UPDATE_TABLE_X')\n *\n * Here, the 'UPDATE_TABLE_X' argument specifies the action type that will later be dispatched\n * to perform modifications. For example, the action below will change some of the values and also\n * both delete some ids and add some new ids:\n *\n * dispatch({\n *   type: 'UPDATE_TABLE_X',\n *   updatesById: {\n *     id1: { key2: valueM },                                 // update key2 value in object with id1\n *     idNew: { key1: valueX, key2: valueY, key3: valueZ },   // add new object and id\n *     id2: null,                                             // delete id2\n *   }\n *  })\n *\n * The resulting state after this action would look like:\n *\n * { id1: { key1: valueA, key2: valueM, key3: valueC },\n *   idNew: { key1: valueX, key2: valueY, key3: valueZ },\n *   id3: ...\n * }\n *\n * @param updateStateActionId (string) action.type that will later be used to update the state object.\n */\nexport const createObjectsByIdReducer = (updateActionType, key, initialState = {}, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    if (!action) {\n      return state\n    }\n\n    switch (action.type) {\n      case updateActionType: {\n        if (action.updatesById === undefined) {\n          console.error(`Invalid ${updateActionType} action. action.updatesById is undefined: `, action)\n          return state\n        }\n        let updates = action.updatesById\n        if (key) {\n          if (!(key in updates)) {\n            return state\n          }\n          updates = updates[key]\n        }\n        const shallowCopy = { ...state }\n        Object.entries(updates).forEach(([id, obj]) => {\n          if (obj == null) {\n            // if the id is mapped to a null or undefined value, then delete this id\n            delete shallowCopy[id]\n          } else if (shallowCopy[id]) {\n            shallowCopy[id] = { ...shallowCopy[id], ...obj }\n          } else {\n            shallowCopy[id] = { ...obj }\n          }\n        })\n\n        if (debug) {\n          console.log('objectsByIdReducer: applying action: ', action, 'State changing from: ', state, ' to ', shallowCopy)\n        }\n        return shallowCopy\n      }\n      default:\n        return state\n    }\n  }\n\n  return reducer\n}\n\n\n/**\n * Factory function that creates a reducer for managing a state object that looks like:\n *\n * {\n *    loading: false,\n *    error: null,\n * }\n *\n * This state object encapsulates an entity type that is fetched from the server\n *\n * This reducer supports a two action types:\n * 1) A request action that sets the state to loading\n * 2) A receive action that indicates the loading has completed\n *\n * @param requestActionType (string) action.type representing a \"request\" event\n * @param receiveActionType (string) action.type representing a \"receive\" event\n */\nexport const loadingReducer = (requestActionType, receiveActionType, initialState = { isLoading: false, errorMessage: null }, debug = false) => {\n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case requestActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to loading`)\n        }\n        return { ...state, isLoading: true }\n\n      case receiveActionType:\n        if (debug) {\n          console.log(`fetchObjectsReducer: applying action: ${action.type}. State changing to received: ${action.byGuid}`)\n        }\n        return { ...state, isLoading: false, errorMessage: action.error }\n\n      default:\n        return state\n    }\n  }\n  return reducer\n}\n","import { createObjectsByIdReducer } from './reducerFactories'\n\n\n// actions\nconst UPDATE_MODAL_STATE = 'UPDATE_MODAL_STATE'\n\n// action creators\nexport const openModal = (modalName) => (dispatch) => (\n  dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: true } } })\n)\n\nexport const closeModal = (modalName, confirmed) => (dispatch, getState) => {\n  if (getState().modals[modalName].confirmOnClose && !confirmed) {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { confirming: true } } })\n  } else {\n    dispatch({ type: UPDATE_MODAL_STATE, updatesById: { [modalName]: { open: false, confirming: false, confirmOnClose: null } } })\n  }\n}\n\n// root reducer\nexport default {\n  modals: createObjectsByIdReducer(UPDATE_MODAL_STATE),\n}\n\n// basic selectors\nexport const getModalOpen = (state, modalName) => state.modals[modalName] && state.modals[modalName].open\n","/* eslint-disable react/destructuring-assignment */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Modal, Icon } from 'semantic-ui-react'\n\nimport { getModalOpen, openModal, closeModal } from '../redux/utils/modalReducer'\n\nexport const ButtonLink = styled(Button).attrs({ basic: true })`\n  &.ui.button.basic {\n    white-space: nowrap;\n    border: none;\n    padding: ${(props) => props.padding || 0};\n    color: ${(props) => props.color || '#4183C4'} !important;\n    text-decoration: none;\n    font-weight: ${(props) => props.fontWeight || 'inherit'};\n    box-shadow: none !important;\n    user-select: auto;\n    \n    &:hover, &:focus, &:active {\n      color: #1e70bf !important;\n      background: transparent !important;\n    }\n    \n    &[class*=\"right labeled\"].icon {\n      padding-left: 0 !important;\n      padding-right: 2.1em !important;\n      \n      > .icon {\n        background-color: initial;\n      }\n    }\n  }\n`\n\nconst ContainerDiv = styled.div`\n  float: right;\n  padding: 0px 20px 20px 20px;\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px !important;\n  width: 100px;\n`\n\n\nclass CustomModal extends React.PureComponent\n{\n  handleClose = () => {\n    let doClose = true\n    if (this.props.handleClose) {\n      doClose = this.props.handleClose()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  handleSave = () => {\n    let doClose = true\n    if (this.props.handleSave) {\n      doClose = this.props.handleSave()\n    }\n    if (doClose) {\n      this.props.close()\n    }\n  }\n\n  render() {\n    const trigger = this.props.trigger ? React.cloneElement(this.props.trigger, { onClick: this.props.open }) : null\n    return (\n      <Modal open={this.props.isOpen} trigger={trigger} onClose={this.handleClose} size={this.props.size}>\n        <Modal.Header>\n          {this.props.title}\n          <ButtonLink floated=\"right\" onClick={this.handleClose} icon={<Icon name=\"remove\" color=\"grey\" />} />\n        </Modal.Header>\n        <Modal.Content>\n          {this.props.children}\n        </Modal.Content>\n        <ContainerDiv>\n          <StyledButton tabIndex={0} onClick={this.handleClose} type=\"button\">Cancel</StyledButton>\n          <StyledButton tabIndex={0} onClick={this.handleSave} type=\"submit\" color=\"blue\">Save</StyledButton>\n        </ContainerDiv>\n      </Modal>\n    )\n  }\n}\n\nCustomModal.defaultProps = {\n  size: 'small',\n}\n\nCustomModal.propTypes = {\n  trigger: PropTypes.node,\n  title: PropTypes.string,\n  handleSave: PropTypes.func,\n  handleClose: PropTypes.func,\n  size: PropTypes.oneOf(['small', 'large', 'fullscreen']),\n  isOpen: PropTypes.bool,\n  open: PropTypes.func,\n  close: PropTypes.func,\n  children: PropTypes.node,\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  isOpen: getModalOpen(state, ownProps.modalName),\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    open: (e) => {\n      e.preventDefault()\n      dispatch(openModal(ownProps.modalName))\n    },\n    close: () => {\n      dispatch(closeModal(ownProps.modalName, true))\n    },\n  }\n}\n\nexport { CustomModal as ModalComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Form, TextArea } from 'semantic-ui-react'\nimport Modal from './Modal'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n`\n\nclass EditLocusListButtonAndModal extends React.PureComponent {\n\n  constructor(props) {\n    super(props)\n\n    const {\n      locusList,\n    } = this.props\n\n    this.textAreaValue = (locusList || []).join('\\n') // TextArea refs don't work - probably because its a pure component, so use this hack\n  }\n\n  render = () => {\n    const {\n      locusList,\n      name,\n      setLocusList,\n    } = this.props\n\n    const title = `Locus List - ${name}`\n\n    return (\n      <Modal\n        title={title}\n        size=\"large\"\n        modalName={title}\n        trigger={\n          <LinkButton>\n            {\n              (locusList || []).length > 0\n                ? <div><br />Edit Locus List</div>\n                : <div>Add Locus List To Side Bar</div>\n            }\n          </LinkButton>\n        }\n        handleSave={() => {\n          const newLocusList = this.textAreaValue.split(/[,\\s]+/).filter(Boolean)\n          setLocusList(newLocusList)\n        }}\n      >\n        <Form>\n          <Form.Field\n            control={TextArea}\n            style={{ minHeight: '300px' }}\n            defaultValue={this.textAreaValue}\n            onKeyUp={(e) => { this.textAreaValue = e.target.value }}\n            placeholder=\"Enter genomic positions, intervals, and/or gene names separated by commas, spaces, or new lines. &#10;\n              These can be in any format recognized by the IGV search bar. &#10;\n              For example: DMD, ENST00000589830, chr1:55516888, 2:152341851-152591002\"\n          >\n          </Form.Field>\n        </Form>\n        <br />\n        <b><i>NOTE:</i></b> This locus list will be saved across page refreshes in this browser, but is not recorded in the page url, so sharing a page link is not sufficient for sharing the locus list.\n      </Modal>)\n  }\n}\n\nEditLocusListButtonAndModal.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocusList: PropTypes.func,\n}\n\nexport const EditLocusList = ({ name, locusList, setLocus, setLocusList }) => {\n\n  return (\n    <div>\n      {\n        locusList.map((locus, i) => <div key={locus}>{i + 1}. &nbsp; <LinkButton onClick={() => { setLocus(locus) }}>{locus}</LinkButton></div>)\n      }\n      <EditLocusListButtonAndModal name={name} locusList={locusList} setLocusList={setLocusList} />\n    </div>)\n}\n\nEditLocusList.propTypes = {\n  name: PropTypes.string,\n  locusList: PropTypes.array,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n}\n","import styled from 'styled-components'\nimport { Popup } from 'semantic-ui-react'\n\nexport const CategoryH3 = styled.h3` \n  display: inline-block;\n  margin: 12px 0px 0px 0px !important;\n`\n\nexport const OptionDiv = styled.div`\n  padding-top: 3px;\n`\n\nexport const StyledPopup = styled(Popup)`\n  opacity: 0.95;\n`\n","\nexport const SUPPORTED_FILE_EXTENSIONS = {\n  '.bigWig': 'coverage',\n  '.junctions.bed': 'spliceJunctions',\n  '.spliceJunctions.bed': 'spliceJunctions',\n  '.junctions.bed.gz': 'spliceJunctions',\n  '.spliceJunctions.bed.gz': 'spliceJunctions',\n  '.bam': 'bam',\n  '.cram': 'bam',\n  '.vcf': 'vcf',\n  '.vcf.gz': 'vcf',\n}\n\nexport const MOTIFS = ['GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical']\n\nexport const DEFAULT_COLOR_BY_NUM_READS_THRESHOLD = 5\n","/* eslint-disable no-undef */\n\nconst RNA_VIEWER_CLIENT_ID = '61200892608-qphtf65o323setqdcfj4hnf601mmetvs.apps.googleusercontent.com'\n\nexport const initGoogleClient = () => new Promise((resolve) => {\n  if (typeof gapi === 'undefined') {\n    return\n  }\n\n  // init all gapi modules\n  gapi.load('client:auth2', () => {\n    gapi.client.load('storage', 'v1', () => {\n      gapi.client.init({\n        clientId: RNA_VIEWER_CLIENT_ID,\n        scope: 'https://www.googleapis.com/auth/devstorage.read_only',\n        discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/storage/v1/rest'],\n      })\n\n      resolve()\n    })\n  })\n})\n\nexport const googleSignIn = async () => {\n\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (!authInstance.isSignedIn.get()) {\n    await authInstance.signIn()\n  }\n}\n\nexport const getGoogleUserEmail = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const profile = authInstance.currentUser.get().getBasicProfile()\n\n  return profile.getEmail()\n}\n\nexport const getGoogleAccessToken = async () => {\n  // use OAuth2 to get an access token for RNA-seq viewer to access the google storage API on behalf of the user\n  const authInstance = await gapi.auth2.getAuthInstance()\n  const user = authInstance.currentUser.get()\n  if (!authInstance.isSignedIn.get()) {\n    user.reloadAuthResponse()\n  }\n\n  return user.getAuthResponse().access_token\n}\n\nexport const googleSignOut = async () => {\n  const authInstance = await gapi.auth2.getAuthInstance()\n  if (authInstance.isSignedIn.get()) {\n    await authInstance.signOut()\n  }\n}\n\nexport const listGoogleStorageFiles = async (gsPath) => {\n  if (!gsPath.startsWith('gs://')) {\n    console.error(`${gsPath} doesn't start with \"gs://\"`)\n    return []\n  }\n\n  const gsPathParts = gsPath.split('/')\n  if (gsPathParts.length < 3) {\n    console.error(`${gsPath} must be of the form \"gs://bucket-name/...\"`)\n    return []\n  }\n\n  const bucketName = gsPathParts[2]\n  const bucketSubdir = gsPathParts.slice(3).join('/')\n\n  return gapi.client.storage.objects.list({ bucket: bucketName, prefix: bucketSubdir, maxResults: 1000 })\n}\n","/* eslint-disable no-nested-ternary */\n\nimport { createSelector } from 'reselect'\nimport { getGoogleAccessToken } from '../utils/googleAuth'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\nexport const getLocus = (state) => state.locus\nexport const getRightSideBarLocusList = (state) => state.rightSideBarLocusList\nexport const getLeftSideBarLocusList = (state) => state.leftSideBarLocusList\nexport const getGenome = (state) => state.genome\nexport const getSamplesInCategories = (state) => state.samplesInCategories\nexport const getSelectedSampleNamesByCategoryName = (state) => state.selectedSampleNamesByCategoryName\nexport const getSjOptions = (state) => state.sjOptions\nexport const getVcfOptions = (state) => state.vcfOptions\nexport const getBamOptions = (state) => state.bamOptions\nexport const getUser = (state) => state.user\nexport const getInitialSettingsUrl = (state) => state.initialSettingsUrl\nexport const getInitialSettings = (state) => state.initialSettings\n\n\n/**\n * Expects sample info like:\n *\n * [\n *    {\n *      label: 'category1',\n *      samples : [\n *          { sample1 .. },\n *          { sample2 .. },\n *          ...\n *      ]\n *    },\n *    {\n *      label: 'category2',\n *      samples : [\n *        { sample3 .. },\n *        { sample4 .. },\n *        ...\n *      ]\n *    },\n * ]\n */\n\n\nexport const getSamplesByCategoryName = createSelector(\n  getSamplesInCategories,\n  (samplesInCategories) => {\n    return samplesInCategories.reduce((acc, category) => {\n      return { ...acc, [category.categoryName]: category.samples }\n    }, {})\n  })\n\n\nexport const getSelectedSamplesByCategoryName = createSelector(\n  getSelectedSampleNamesByCategoryName,\n  getSamplesByCategoryName,\n  (selectedSampleNamesByCategoryName, samplesByCategoryName) => {\n    return Object.entries(selectedSampleNamesByCategoryName).reduce((acc, [categoryName, selectedSampleNames]) => {\n      if (!samplesByCategoryName[categoryName]) {\n        return acc\n      }\n      return { ...acc, [categoryName]: samplesByCategoryName[categoryName].filter((sample) => selectedSampleNames.includes(sample.name)) }\n    }, {})\n  })\n\n\nexport const getTracks = createSelector(\n  getSelectedSamplesByCategoryName,\n  getSjOptions,\n  getVcfOptions,\n  getBamOptions,\n  (selectedSamplesByCategoryName, sjOptions, vcfOptions, bamOptions) => {\n    const igvTracks = []\n\n    Object.values(selectedSamplesByCategoryName).forEach((selectedSamples) => selectedSamples.forEach((sample, i) => {\n      //docs @ https://github.com/igvteam/igv.js/wiki/Wig-Track\n      let junctionsTrack\n      if (sample.junctions && sjOptions.showJunctions) {\n        junctionsTrack = {\n          type: 'spliceJunctions',\n          format: 'bed',\n          url: sample.junctions,\n          indexURL: `${sample.junctions}.tbi`,\n          oauthToken: getGoogleAccessToken,\n          order: i * 10,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          minUniquelyMappedReads: sjOptions.minUniquelyMappedReads,\n          minTotalReads: sjOptions.minTotalReads,\n          maxFractionMultiMappedReads: sjOptions.maxFractionMultiMappedReads,\n          minSplicedAlignmentOverhang: sjOptions.minSplicedAlignmentOverhang,\n          thicknessBasedOn: sjOptions.thicknessBasedOn, //options: numUniqueReads (default), numReads, isAnnotatedJunction\n          bounceHeightBasedOn: sjOptions.bounceHeightBasedOn, //options: random (default), distance, thickness\n          colorBy: sjOptions.colorBy, //options: numUniqueReads (default), numReads, isAnnotatedJunction, strand, motif\n          colorByNumReadsThreshold: sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD,\n          hideStrand: sjOptions.showOnlyPlusStrand ? '-' : (sjOptions.showOnlyMinusStrand ? '+' : undefined),\n          labelUniqueReadCount: sjOptions.labelUniqueReadCount,\n          labelMultiMappedReadCount: sjOptions.labelMultiMappedReadCount,\n          labelTotalReadCount: sjOptions.labelTotalReadCount,\n          labelMotif: sjOptions.labelMotif,\n          labelAnnotatedJunction: sjOptions.labelAnnotatedJunction && sjOptions.labelAnnotatedJunctionValue,\n          hideAnnotatedJunctions: sjOptions.hideAnnotated,\n          hideUnannotatedJunctions: sjOptions.hideUnannotated,\n          hideMotifs: MOTIFS.filter((motif) => sjOptions[`hideMotif${motif}`]), //options: 'GT/AG', 'CT/AC', 'GC/AG', 'CT/GC', 'AT/AC', 'GT/AT', 'non-canonical'\n        }\n      }\n\n      let coverageTrack\n      if (sample.coverage && sjOptions.showCoverage) {\n        coverageTrack = {\n          type: 'wig',\n          format: 'bigwig',\n          url: sample.coverage,\n          oauthToken: getGoogleAccessToken,\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          order: i * 10 + 1,\n        }\n      }\n\n      if (coverageTrack && junctionsTrack) {\n        console.log(`Adding ${sample.junctions} & ${sample.coverage} track #`, i * 10 + 2)\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [coverageTrack, junctionsTrack],\n          order: i * 10 + 2,\n        })\n      } else if (junctionsTrack) {\n        console.log(`Adding ${sample.junctions} track #`, i * 10)\n        igvTracks.push({\n          type: 'merged',\n          name: sample.name,\n          height: sjOptions.trackHeight,\n          tracks: [junctionsTrack],\n          order: i * 10 + 3,\n        })\n      } else if (coverageTrack) {\n        console.log(`Adding ${sample.coverage} track #`, i * 10 + 1)\n        igvTracks.push(coverageTrack)\n      }\n\n      if (vcfOptions.showVcfs && sample.vcf) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.vcf} track #`, i * 10 + 4)\n\n        igvTracks.push({\n          type: 'variant',\n          format: 'vcf',\n          url: sample.vcf,\n          indexUrl: `${sample.vcf}.tbi`,\n          indexed: true,\n          name: `${sample.name} vcf`,\n          displayMode: vcfOptions.displayMode,\n          oauthToken: getGoogleAccessToken,\n          order: i * 10 + 4,\n        })\n      }\n\n      if (bamOptions.showBams && sample.bam) {\n        //docs @ https://github.com/igvteam/igv.js/wiki/Alignment-Track\n        console.log(`Adding ${sample.bam} track #`, i * 10 + 5)\n\n        igvTracks.push({\n          type: 'alignment',\n          url: sample.bam,\n          indexed: true,\n          name: `${sample.name} bam`,\n          height: bamOptions.trackHeight,\n          colorBy: bamOptions.colorBy,\n          viewAsPairs: bamOptions.viewAsPairs,\n          showSoftClips: bamOptions.showSoftClips,\n          oauthToken: getGoogleAccessToken,\n          order: i * 10 + 5,\n        })\n      }\n    }))\n\n\n    igvTracks.push({\n      name: 'Gencode v32 Genes',\n      format: 'refgene',\n      url: 'gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz',\n      indexUrl: 'gs://macarthurlab-rnaseq/reference_tracks/gencode_v32_knownGene.sorted.txt.gz.tbi',\n      indexed: true,\n      searchable: true,\n      height: 350,\n      visibilityWindow: -1,\n      displayMode: 'EXPANDED',\n      order: 1000001,\n      color: 'rgb(76,171,225)',\n      oauthToken: getGoogleAccessToken,\n    })\n\n    return igvTracks\n  },\n)\n","/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/self-closing-comp */\n/* eslint-disable object-shorthand */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Form, Icon, Message, Popup, Radio, TextArea } from 'semantic-ui-react'\nimport yaml from 'js-yaml'\n\nimport Modal from './Modal'\nimport { SUPPORTED_FILE_EXTENSIONS } from '../constants'\nimport { getInitialSettings } from '../redux/selectors'\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst ExampleDiv = styled.div`\n  font-family: monospace;\n  margin: 20px 30px;\n  padding: 10px;\n  background-color: #F7F7F7;\n  white-space: nowrap;\n`\n\nconst ExamplePath = styled.span`\n  font-family: monospace;\n  background-color: #F7F7F7;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin: 10px 0px 10px 20px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst StyledPopup = styled(Popup).attrs({ position: 'bottom center' })`\n`\n\n\nclass EditSamplePathsButtonAndModal extends React.PureComponent {\n\n  getInitialState = () => {\n    const {\n      samples,\n    } = this.props\n    const format = samples && samples.length > 0 ? 'yaml' : 'basic'\n\n    return {\n      format: format,\n      textAreaValue: this.convertSamplesToTextAreaValue(samples || [], format),\n      warningMessage: null,\n      errorMessage: null,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = this.getInitialState()\n  }\n\n  parseTextAreaValueToSamples = (textAreaValue, format) => {\n    if (!textAreaValue.trim()) {\n      return { samples: [], errorMessage: null }\n    }\n\n    let samples = []\n    let errorMessage = null\n    const invalidPaths = []\n\n    if (format === 'basic') {\n      const samplePaths = textAreaValue.split(/[,\\s]+/).filter(Boolean)\n\n      const samplesBySampleName = samplePaths.reduce((acc, samplePath) => {\n        const pathTokens = samplePath.split('/')\n        const fileName = pathTokens[pathTokens.length - 1]\n        const matchingExtensions = Object.keys(SUPPORTED_FILE_EXTENSIONS).filter((ext) => fileName.endsWith(ext))\n        if (matchingExtensions.length === 0) {\n          invalidPaths.push(samplePath)\n        } else {\n          const ext = matchingExtensions[0]\n          const filePrefix = fileName.replace(ext, '')\n          if (!acc[filePrefix]) {\n            acc[filePrefix] = {}\n          }\n          acc[filePrefix].name = filePrefix\n          acc[filePrefix][SUPPORTED_FILE_EXTENSIONS[ext]] = samplePath\n        }\n        return acc\n      }, {})\n\n      samples = Object.values(samplesBySampleName)\n\n    } else if (format === 'yaml' || format === 'json') {\n      try {\n        samples = yaml.safeLoad(textAreaValue)\n        //TODO validate\n      } catch (e) {\n        errorMessage = `Unable to parse YAML: ${e}`\n      }\n    } else if (format === 'json') {\n      try {\n        samples = JSON.parse(textAreaValue)\n        //TODO validate\n      } catch (e) {\n        errorMessage = `Unable to parse JSON: ${e}`\n      }\n    }\n\n    if (invalidPaths.length > 0) {\n      errorMessage = `These paths have unexpected file suffixes: ${invalidPaths.join(', ')}`\n    }\n\n    return { samples, errorMessage }\n  }\n\n  convertSamplesToTextAreaValue = (samples, format) => {\n    if (!samples || samples.length === 0) {\n      return ''\n    }\n\n    let textAreaValue\n    if (format === 'basic') {\n      textAreaValue = samples.map((sample) => Object.keys(sample).filter((key) => key !== 'name' && key !== 'description').map((key) => sample[key])).flat().join('\\n')\n    } else if (format === 'yaml') {\n      textAreaValue = yaml.safeDump(samples, { flowLevel: 2 })\n    } else if (format === 'json') {\n      textAreaValue = JSON.stringify(samples, null, 2)\n    }\n\n    return textAreaValue\n  }\n\n  formatRadioButtonChangeHandler = (e, data) => {\n    const {\n      textAreaValue,\n      format,\n    } = this.state\n\n    const { samples, errorMessage } = this.parseTextAreaValueToSamples(textAreaValue, format)\n    if (errorMessage) {\n      e.preventDefault()\n      this.setState({ errorMessage: errorMessage })\n      return false\n    }\n    this.setState({ errorMessage: '' })\n\n    if (data.checked) {\n      this.setState({ format: data.label, textAreaValue: this.convertSamplesToTextAreaValue(samples, data.label) })\n    }\n\n    return true\n  }\n\n  getInitialSamplesInCategory = () => {\n    // cache originalSamples for reset button\n    const {\n      categoryName,\n      showResetButton,\n      initialSamplesInCategories,\n    } = this.props\n\n    if (showResetButton && initialSamplesInCategories) {\n      const originalCategories = initialSamplesInCategories.filter((category) => category.categoryName === categoryName)\n      if (originalCategories.length > 0) {\n        return originalCategories[0].samples\n      }\n    }\n\n    return []\n  }\n\n  resetButtonClickHandler = () => {\n    const {\n      format,\n    } = this.state\n\n    const initialSamplesInCategory = this.getInitialSamplesInCategory()\n    const textAreaValue = this.convertSamplesToTextAreaValue(initialSamplesInCategory, format)\n    this.setState({ textAreaValue: textAreaValue })\n  }\n\n  handleModalSave = () => {\n    const {\n      setSamples,\n    } = this.props\n\n    const {\n      textAreaValue,\n      format,\n    } = this.state\n\n    const { samples, errorMessage } = this.parseTextAreaValueToSamples(textAreaValue, format)\n\n    if (errorMessage) {\n      this.setState({ errorMessage: errorMessage })\n      return false\n    }\n\n    setSamples(samples)\n    return true\n\n  }\n\n  handleModalClose = () => {\n    this.setState(this.getInitialState())\n    return true\n  }\n\n  render = () => {\n    const {\n      samples,\n      title,\n      showResetButton,\n      trigger,\n    } = this.props\n\n    const {\n      format,\n      textAreaValue,\n      warningMessage,\n      errorMessage,\n    } = this.state\n\n    const fullTitle = `${title} Paths`\n    let initialSamplesInCategory\n    if (showResetButton) {\n      initialSamplesInCategory = this.getInitialSamplesInCategory()\n    }\n\n    const someSamplesHaveDescriptionOrMultipleDataFiles = samples.some(\n      (sample) => sample.description || Object.keys(sample).filter((key) => key !== 'name' && key !== 'description').length > 1,\n    )\n\n    return (\n      <Modal\n        title={fullTitle}\n        size=\"large\"\n        modalName={fullTitle}\n        trigger={trigger}\n        handleSave={this.handleModalSave}\n        handleClose={this.handleModalClose}\n      >\n        <div>\n          Enter google bucket path(s) for <i>.bigWig</i>, <i>.junctions.bed.gz</i>, <i>.bam/.cram</i>, or <i>.vcf.gz</i> files:<br />\n          <br />\n          <div>\n            <b>Format:</b>\n            <StyledRadio name=\"format\" label=\"basic\" disabled={someSamplesHaveDescriptionOrMultipleDataFiles} checked={format === 'basic'} onChange={this.formatRadioButtonChangeHandler} />\n            <StyledPopup trigger={<Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />} content={\n              <div>\n                {\n                  someSamplesHaveDescriptionOrMultipleDataFiles && (\n                  <div>\n                    <b>[Disabled]</b> because some samples have multiple data files and/or a description.<br />\n                    <br />\n                  </div>)\n                }\n                <b>Basic format</b>:<br />\n                <br />\n                Enter a list of paths separated by commas, spaces or new lines. <br />\n                <br />\n                Example:<br />\n                <ExampleDiv>\n                 gs://your-bucket/dir/sample-name1.bigWig <br />\n                 gs://your-bucket/dir/sample2.bigWig <br />\n                 gs://your-bucket/dir/sample-name1.junctions.bed.gz <br />\n                 gs://your-bucket/dir/sample-name1.bam <br />\n                 gs://your-bucket/dir/sample2.junctions.bed.gz <br />\n                </ExampleDiv>\n                Paths that have the same prefix (like <ExamplePath>gs://your-bucket/dir/sample-name1</ExamplePath> in the example) will be interpreted as different data types from the same sample.<br />\n                <br />\n                The order of paths doesn&apos;t matter.\n              </div>\n            }\n            />\n\n            <StyledRadio name=\"format\" label=\"yaml\" checked={format === 'yaml'} onChange={this.formatRadioButtonChangeHandler} />\n            <StyledPopup trigger={<Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />}\n              content={\n                <div>\n                  <b>YAML format</b>:<br />\n                  <br />\n                  Provides per-sample file paths just like the Basic format, but allows additional meta-data to be specified - such as sample descriptions - as well as more flexibility in file names.<br />\n                  <ExampleDiv>\n                    - name: sample1 <br />\n                      &nbsp; description: description of sample1 <br />\n                      &nbsp; coverage: gs://your-bucket/dir/sample-name1.bigWig <br />\n                      &nbsp; junctions: gs://your-bucket/dir2/sample-name1.junctions.bed.gz <br />\n                      &nbsp; bam: gs://your-bucket/dir3/sample-name1.bam <br />\n                      &nbsp; vcf: gs://your-bucket/dir3/sample-name1-wgs-variants.vcf.gz <br />\n                    - name: sample2 <br />\n                      &nbsp; coverage: gs://your-bucket/dir/sample2.bigWig <br />\n                      &nbsp; junctions: gs://your-bucket/dir2/sample2.junctions.bed.gz <br />\n                  </ExampleDiv>\n                </div>\n              }\n            />\n            <StyledRadio name=\"format\" label=\"json\" checked={format === 'json'} onChange={this.formatRadioButtonChangeHandler} />\n            <StyledPopup trigger={<Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />}\n              content={\n                <div>\n                  <b>JSON format</b>:<br />\n                  <br />\n                  Identical to YAML, but represented in the JSON format.<br />\n                  <ExampleDiv>\n                    {'[{'}<br />\n                    {' \"name\": \"sample1\",'}<br />\n                    {' \"coverage\": \"gs://your-bucket/dir/sample-name1.bigWig\", '}<br />\n                    {' \"junctions\": \"gs://your-bucket/dir2/sample-name1.junctions.bed.gz\", '}<br />\n                    {' \"bam\": \"gs://your-bucket/dir3/sample-name1.bam\", '}<br />\n                    {' \"vcf\": \"gs://your-bucket/dir3/sample-name1-wgs-variants.vcf.gz\" '}<br />\n                    {'}, {'}<br />\n                    {' \"name\": \"sample2\", '}<br />\n                    {' \"coverage\": \"gs://your-bucket/dir/sample2.bigWig\", '}<br />\n                    {' \"junctions\": \"gs://your-bucket/dir2/sample2.junctions.bed.gz\" '}<br />\n                    {'}]'}<br />\n                  </ExampleDiv>\n                </div>\n              }\n            />\n            {\n              showResetButton && (\n              <LinkButton style={{ float: 'right' }} onClick={this.resetButtonClickHandler}>Reset To {initialSamplesInCategory ? initialSamplesInCategory.length : 0} Original Samples</LinkButton>)\n            }\n          </div>\n        </div>\n        <Form>\n          <TextArea\n            style={{ minHeight: '300px' }}\n            value={textAreaValue}\n            onChange={(e) => {\n              this.setState({ textAreaValue: e.target.value })\n            }}\n            placeholder=\"Enter file path(s)\"\n          >\n          </TextArea>\n        </Form>\n\n        <br />\n        <b><i>NOTE:</i></b> These paths will be saved across page refreshes in this browser, but will not be recorded in the page url like other settings. Sharing or bookmarking this page url won&apos;t include these paths.\n        {\n          warningMessage && (\n          <Message color=\"yellow\">\n            {warningMessage}\n          </Message>)\n        }\n        {\n          errorMessage && (\n          <Message color=\"red\">\n            {errorMessage}\n          </Message>)\n        }\n      </Modal>)\n  }\n}\n\nEditSamplePathsButtonAndModal.propTypes = {\n  title: PropTypes.string,\n  categoryName: PropTypes.string,\n  samples: PropTypes.array,\n  setSamples: PropTypes.func,\n  trigger: PropTypes.node,\n  showResetButton: PropTypes.bool,\n  initialSamplesInCategories: PropTypes.array,\n}\n\n\nconst AddOrEditSamplePaths = ({ category, initialSamplesInCategories, updateSamples }) => {\n  return (\n    <div>\n      <EditSamplePathsButtonAndModal\n        key={`${JSON.stringify(category.samples)}_add`}\n        title={`Add ${category.categoryName}`}\n        categoryName={category.categoryName}\n        samples={[]}\n        setSamples={(samples) => updateSamples('ADD', category.categoryName, samples)}\n        initialSamplesInCategories={initialSamplesInCategories}\n        trigger={<LinkButton>Add {category.samples.length === 0 ? category.categoryName : null} Paths</LinkButton>}\n      />\n      {category.samples.length > 0 && <EditSamplePathsButtonAndModal\n        key={`${JSON.stringify(category.samples)}_edit`}\n        title={`Edit ${category.categoryName}`}\n        categoryName={category.categoryName}\n        samples={category.samples}\n        setSamples={(samples) => updateSamples('SET', category.categoryName, samples)}\n        initialSamplesInCategories={initialSamplesInCategories}\n        trigger={<LinkButton>Edit Paths</LinkButton>}\n        showResetButton\n      />}\n    </div>)\n}\n\nAddOrEditSamplePaths.propTypes = {\n  category: PropTypes.object,\n  initialSamplesInCategories: PropTypes.array,\n  updateSamples: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  initialSamplesInCategories: getInitialSettings(state).samplesInCategories,\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSamples: (actionType, categoryName, samples) => {\n    dispatch({\n      type: `${actionType}_SAMPLES`,\n      categoryName: categoryName,\n      samples: samples,\n    })\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrEditSamplePaths)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Popup } from 'semantic-ui-react'\nimport { EditLocusList } from './EditLocusList'\nimport { CategoryH3, OptionDiv, StyledPopup } from './SideBarUtils'\nimport AddOrEditSamplePaths from './EditSamplePaths'\nimport { getLeftSideBarLocusList, getSamplesInCategories, getSelectedSampleNamesByCategoryName, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\n\n\nconst CategoryDetails = styled.div`\n  display: inline-block;\n  margin: 0px 0px 0px 15px;\n  color: #999;\n  white-space: nowrap;\n`\n\nconst StyledIcon = styled.div.attrs({ name: 'stop' })`\n  display: inline-block;\n  width: 6px;\n  border-radius: 1px;\n  height: 10px;\n  cursor: pointer;\n`\n\nconst JunctionsIcon = styled(StyledIcon)`\n   color: #B0B0EC;\n   border: 3px solid #B0B0EC;\n`\n\nconst CoverageIcon = styled(StyledIcon)`\n   color: #B5D29A;\n   border: 3px solid #B5D29A;\n`\n\nconst BamIcon = styled(StyledIcon)`\n   color: #5CB6EA;\n   border: 3px solid #5CB6EA;\n`\n\nconst VcfIcon = styled(StyledIcon)`\n   color: #E6A01B;\n   border: 3px solid #E6A01B;\n`\n\nconst LinkButton = styled.a`\n  cursor: pointer;\n  padding: 10px 10px 10px 0px;\n  display: inline-block;\n`\n\nconst SampleColorLabelsContainer = styled.span`\n  padding-left: 5px;\n  white-space: nowrap;\n`\n\nconst NoWrapDiv = styled.div`\n  white-space: nowrap;\n`\n\nconst SampleColorLabelsWithPopup = ({ sample }) => {\n  const handleCopyToClipboard = () => {\n    let s = ''\n    if (sample.coverage) {\n      s += `${sample.coverage}\\n`\n    }\n    if (sample.junctions) {\n      s += `${sample.junctions}\\n`\n    }\n    if (sample.vcf) {\n      s += `${sample.vcf}\\n`\n    }\n    if (sample.bam) {\n      s += `${sample.bam}\\n`\n    }\n    navigator.clipboard.writeText(s)\n  }\n\n  return (<Popup\n    content={\n      <table>\n        <tbody>\n          { sample.junctions && <tr><td style={{ paddingRight: '10px' }}><b>Junctions:</b></td><td><NoWrapDiv>{sample.junctions}</NoWrapDiv></td></tr>}\n          { sample.coverage && <tr><td><b>Coverage:</b></td><td><NoWrapDiv>{sample.coverage}</NoWrapDiv></td></tr>}\n          { sample.bam && <tr><td><b>Bam:</b></td><td><NoWrapDiv>{sample.bam}</NoWrapDiv></td></tr>}\n          { sample.vcf && <tr><td><b>Vcf:</b></td><td><NoWrapDiv>{sample.vcf}</NoWrapDiv></td></tr>}\n          <tr><td colSpan={2}><div style={{ fontSize: 'small', color: 'grey', marginTop: '10px' }}>(click to copy paths)</div></td></tr>\n        </tbody>\n      </table>\n    }\n    position=\"right center\"\n    trigger={\n      <SampleColorLabelsContainer onClick={handleCopyToClipboard}>\n        {sample.junctions && <JunctionsIcon />}\n        {sample.coverage && <CoverageIcon />}\n        {sample.bam && <BamIcon />}\n        {sample.vcf && <VcfIcon />}\n      </SampleColorLabelsContainer>\n    }\n    style={{ marginLeft: '2px' }}\n  />)\n}\nSampleColorLabelsWithPopup.propTypes = {\n  sample: PropTypes.object,\n}\n\nconst CategoryPanel = ({ category, updateSelectedSampleNames }) => (\n  <div>\n    <CategoryH3>{category.categoryName.toUpperCase()}</CategoryH3>\n    {\n      category.samples.length >= 12 && <CategoryDetails>{`(N=${category.samples.length}) `}</CategoryDetails>\n    }\n    {\n      category.samples.length > 0 && (\n      <div>\n        <LinkButton onClick={\n          (e) => {\n            e.preventDefault()\n            updateSelectedSampleNames('SET', category.categoryName, [])\n          }\n        }\n        >\n          Uncheck All\n        </LinkButton>\n      </div>)\n    }\n  </div>)\n\nCategoryPanel.propTypes = {\n  category: PropTypes.object,\n  updateSelectedSampleNames: PropTypes.func,\n}\n\nconst SamplesPanel = ({ samplesInCategories, selectedSampleNamesByCategoryName, updateSelectedSampleNames }) => (\n  samplesInCategories.map((category, i) => (\n    <div key={category.categoryName || i}>\n      <CategoryPanel category={category} updateSelectedSampleNames={updateSelectedSampleNames} />\n      {\n        category.samples.map((sample, j) => {\n          const selectedSampleNames = selectedSampleNamesByCategoryName[category.categoryName] || []\n          return <SamplePanel key={sample.name || j} sample={sample} categoryName={category.categoryName} selectedSampleNames={selectedSampleNames} updateSelectedSampleNames={updateSelectedSampleNames} />\n        })\n      }\n      <AddOrEditSamplePaths category={category} />\n    </div>),\n  ))\n\nSamplesPanel.propTypes = {\n  samplesInCategories: PropTypes.array,\n  selectedSampleNamesByCategoryName: PropTypes.object,\n  updateSelectedSampleNames: PropTypes.func,\n}\n\n\nconst SamplePanel = ({ sample, categoryName, selectedSampleNames, updateSelectedSampleNames }) => (\n  <NoWrapDiv>\n    <Checkbox\n      label={sample.name}\n      checked={selectedSampleNames.includes(sample.name)}\n      data-sample={sample.name}\n      onChange={(e, data) => updateSelectedSampleNames(data.checked ? 'ADD' : 'REMOVE', categoryName, [data['data-sample']])}\n    />\n    <SampleDetails sample={sample} />\n    <SampleColorLabelsWithPopup sample={sample} />\n  </NoWrapDiv>)\n\nSamplePanel.propTypes = {\n  sample: PropTypes.object,\n  categoryName: PropTypes.string,\n  selectedSampleNames: PropTypes.array,\n  updateSelectedSampleNames: PropTypes.func,\n}\n\nconst SampleDetails = ({ sample }) => {\n  return (\n    sample.description\n      ? <StyledPopup inverted\n        content={sample.description}\n        position=\"right center\"\n        trigger={\n          <Icon style={{ marginLeft: '10px' }} name=\"question circle outline\" />\n        }\n      />\n      : null)\n}\n\nSampleDetails.propTypes = {\n  sample: PropTypes.object,\n}\n\n\nclass LeftSideBar extends React.PureComponent\n{\n  render() {\n    //const params = new URLSearchParams(window.location.search)\n    const {\n      locusList,\n      samplesInCategories,\n      selectedSampleNamesByCategoryName,\n      sjOptions,\n      vcfOptions,\n      bamOptions,\n      setLocus,\n      setLocusList,\n      updateSelectedSampleNames,\n      updateSjOptions,\n      updateVcfOptions,\n      updateBamOptions,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList name=\"Left Side Bar\" locusList={locusList} setLocus={setLocus} setLocusList={setLocusList} />\n        <CategoryH3>TRACK TYPES TO SHOW PER SAMPLE</CategoryH3>\n        <OptionDiv>\n          <Checkbox label=\"RNA splice junctions\" defaultChecked={sjOptions.showJunctions} onChange={(e, data) => updateSjOptions({ showJunctions: data.checked })} />\n          <SampleColorLabelsContainer><Popup content=\"This color stripe marks samples that have splice junction data. Select this checkbox to show a splice junction track for each sample selected below.\" position=\"right center\" trigger={<JunctionsIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"RNA coverage\" defaultChecked={sjOptions.showCoverage} onChange={(e, data) => updateSjOptions({ showCoverage: data.checked })} />\n          <SampleColorLabelsContainer><Popup content=\"This color stripe marks samples that have coverage data. Select this checkbox to show a coverage track for each sample selected below.\" position=\"right center\" trigger={<CoverageIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"BAM track\" defaultChecked={bamOptions.showBams} onChange={(e, data) => updateBamOptions({ showBams: data.checked })} />\n          <SampleColorLabelsContainer><Popup content=\"This color stripe marks samples that have alignment data. Select this checkbox to show a bam track for each sample selected below.\" position=\"right center\" trigger={<BamIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <OptionDiv>\n          <Checkbox label=\"VCF track\" defaultChecked={vcfOptions.showVcfs} onChange={(e, data) => updateVcfOptions({ showVcfs: data.checked })} />\n          <SampleColorLabelsContainer><Popup content=\"This color stripe marks samples that have splice junction data. Select this checkbox to show a vcf track for each sample selected below.\" position=\"right center\" trigger={<VcfIcon />} /></SampleColorLabelsContainer>\n        </OptionDiv>\n        <SamplesPanel\n          samplesInCategories={samplesInCategories}\n          selectedSampleNamesByCategoryName={selectedSampleNamesByCategoryName}\n          updateSelectedSampleNames={updateSelectedSampleNames}\n        />\n      </div>)\n  }\n}\n\nLeftSideBar.propTypes = {\n  locusList: PropTypes.array,\n  samplesInCategories: PropTypes.array,\n  selectedSampleNamesByCategoryName: PropTypes.object,\n  sjOptions: PropTypes.object,\n  vcfOptions: PropTypes.object,\n  bamOptions: PropTypes.object,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n  updateSelectedSampleNames: PropTypes.func,\n  updateSjOptions: PropTypes.func,\n  updateVcfOptions: PropTypes.func,\n  updateBamOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getLeftSideBarLocusList(state),\n  samplesInCategories: getSamplesInCategories(state),\n  selectedSampleNamesByCategoryName: getSelectedSampleNamesByCategoryName(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_LEFT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSelectedSampleNames: (actionType, categoryName, selectedSampleNames) => {\n    dispatch({\n      type: `${actionType}_SELECTED_SAMPLE_NAMES`,\n      categoryName,\n      selectedSampleNames,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { LeftSideBar as LeftSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Checkbox, Icon, Radio } from 'semantic-ui-react'\nimport { EditLocusList } from './EditLocusList'\nimport { CategoryH3, OptionDiv, StyledPopup } from './SideBarUtils'\nimport { getRightSideBarLocusList, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { MOTIFS, DEFAULT_COLOR_BY_NUM_READS_THRESHOLD } from '../constants'\n\n\nconst OptionInput = styled.input`\n  display: inline;\n  width: 50px;\n  margin-left: 5px;\n  padding-left: 5px;\n`\n\nconst ColorLegendIcon = styled(Icon)`\n  margin-top: 5px !important;\n`\n\nconst StyledRadio = styled(Radio)`\n  label {\n    margin-left: 10px;\n    margin-bottom: 10px;\n    padding-left: 1.4em !important;\n  }\n`\n\nconst ColorByLegend = ({ sjOptions, handleTextInput }) => {\n  if (sjOptions.colorBy === 'strand') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> plus\n        <ColorLegendIcon name=\"stop\" style={{ color: '#ecb0b0', marginLeft: '10px' }} /> minus\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'motif') {\n    // IGV.js Dark2 color palette\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(27,158,119)' }} /> GT/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(217,95,2)' }} /> CT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(117,112,179)' }} /> GC/AG <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(231,41,138)' }} /> CT/GC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(102,166,30)' }} /> AT/AC <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(230,171,2)' }} /> GT/AT <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'rgb(166,118,29)' }} /> non-canonical <br />\n      </div>)\n  }\n\n  if (sjOptions.colorBy === 'numUniqueReads' || sjOptions.colorBy === 'numReads') {\n    return (\n      <div>\n        # reads<ColorLegendIcon name=\"stop\" style={{ color: '#AAAAAA', marginLeft: '10px' }} />\n        &nbsp;≤ &nbsp;\n        <OptionInput\n          type=\"text\"\n          defaultValue={sjOptions.colorByNumReadsThreshold !== undefined ? sjOptions.colorByNumReadsThreshold : DEFAULT_COLOR_BY_NUM_READS_THRESHOLD}\n          onKeyUp={(e) => handleTextInput(e, 'colorByNumReadsThreshold')}\n          style={{ width: '35px' }}\n        />\n        &nbsp; &lt; &nbsp;\n        <ColorLegendIcon name=\"stop\" style={{ color: 'blue' }} />\n      </div>)\n  }\n  if (sjOptions.colorBy === 'isAnnotatedJunction') {\n    return (\n      <div>\n        <ColorLegendIcon name=\"stop\" style={{ color: '#b0b0ec' }} /> known junction <br />\n        <ColorLegendIcon name=\"stop\" style={{ color: 'orange' }} /> novel junction\n      </div>)\n  }\n\n  return <div />\n}\n\nColorByLegend.propTypes = {\n  sjOptions: PropTypes.object,\n  handleTextInput: PropTypes.func,\n}\n\nconst SjOptionsPanel = ({ sjOptions, updateSjOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateSjOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return (\n    <div>\n      <CategoryH3>JUNCTION TRACK <br />OPTIONS</CategoryH3><br />\n      <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={sjOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionDiv>\n      <OptionDiv>Color by:</OptionDiv>\n      <OptionDiv>\n        <select defaultValue={sjOptions.colorBy} onChange={(e) => updateSjOptions({ colorBy: e.target.value })}>\n          <option value=\"strand\">strand</option>\n          <option value=\"motif\">donor/acceptor motif</option>\n          <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n          <option value=\"numReads\"># total reads</option>\n          <option value=\"isAnnotatedJunction\">is known junction</option>\n        </select>\n        <ColorByLegend sjOptions={sjOptions} handleTextInput={handleTextInput} />\n      </OptionDiv>\n      <OptionDiv>Junction thickness:</OptionDiv>\n      <OptionDiv>\n        <select defaultValue={sjOptions.thicknessBasedOn} onChange={(e) => updateSjOptions({ thicknessBasedOn: e.target.value })}>\n          <option value=\"numUniqueReads\"># uniquely-mapped reads</option>\n          <option value=\"numReads\"># total reads</option>\n          <option value=\"isAnnotatedJunction\">is known junction</option>\n        </select>\n      </OptionDiv>\n      <OptionDiv>Junction bounce height:</OptionDiv>\n      <OptionDiv>\n        <select defaultValue={sjOptions.bounceHeightBasedOn} onChange={(e) => updateSjOptions({ bounceHeightBasedOn: e.target.value })}>\n          <option value=\"random\">random</option>\n          <option value=\"distance\">distance</option>\n          <option value=\"thickness\">thickness</option>\n        </select>\n      </OptionDiv>\n      <OptionDiv>Junction label:</OptionDiv>\n      <OptionDiv><Checkbox label=\"# uniquely-mapped\" defaultChecked={sjOptions.labelUniqueReadCount} onChange={(e, data) => updateSjOptions({ labelUniqueReadCount: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"# multi-mapped\" defaultChecked={sjOptions.labelMultiMappedReadCount} onChange={(e, data) => updateSjOptions({ labelMultiMappedReadCount: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"# total reads\" defaultChecked={sjOptions.labelTotalReadCount} onChange={(e, data) => updateSjOptions({ labelTotalReadCount: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"donor/acceptor motif\" defaultChecked={sjOptions.labelMotif} onChange={(e, data) => updateSjOptions({ labelMotif: data.checked })} /></OptionDiv>\n      <OptionDiv>\n        <Checkbox label=\"known junction:\" defaultChecked={sjOptions.labelAnnotatedJunction} onChange={(e, data) => updateSjOptions({ labelAnnotatedJunction: data.checked })} />\n        <OptionInput type=\"text\" defaultValue={sjOptions.labelAnnotatedJunctionValue} onKeyUp={(e) => handleTextInput(e, 'labelAnnotatedJunctionValue')} style={{ width: '35px' }} />\n      </OptionDiv>\n\n      <CategoryH3>JUNCTION TRACK FILTERS</CategoryH3><br />\n      <OptionDiv>\n        Show Strands:\n        <StyledRadio label=\"both\" name=\"strandButton\" checked={!sjOptions.showOnlyPlusStrand && !sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: false })} />\n        <StyledRadio label=\"plus\" name=\"strandButton\" checked={sjOptions.showOnlyPlusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: true, showOnlyMinusStrand: false })} />\n        <StyledRadio label=\"minus\" name=\"strandButton\" checked={sjOptions.showOnlyMinusStrand} onChange={(e, data) => data.checked && updateSjOptions({ showOnlyPlusStrand: false, showOnlyMinusStrand: true })} />\n      </OptionDiv>\n      <OptionDiv><Checkbox label=\"Show known junctions\" defaultChecked={!sjOptions.hideAnnotated} onChange={(e, data) => updateSjOptions({ hideAnnotated: !data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"Show novel junctions\" defaultChecked={!sjOptions.hideUnannotated} onChange={(e, data) => updateSjOptions({ hideUnannotated: !data.checked })} /></OptionDiv>\n      <div>\n        <OptionDiv>Uniquely-mapped reads:</OptionDiv>\n        at least <OptionInput type=\"text\" defaultValue={sjOptions.minUniquelyMappedReads} onKeyUp={(e) => handleTextInput(e, 'minUniquelyMappedReads', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Total reads:</OptionDiv>\n        at least <OptionInput type=\"text\" defaultValue={sjOptions.minTotalReads} onKeyUp={(e) => handleTextInput(e, 'minTotalReads', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Fraction multi-mapped:\n          <StyledPopup inverted\n            content=\"Allows filtering of junctions where most reads that span the junction are multi-mapped reads. For example, setting this to 0.79 will hide junctions where 8 out of 10 (or more) reads that span the junction are not uniquely mapped reads.\"\n            position=\"left center\"\n            on=\"click\"\n            trigger={\n              <Icon style={{ marginLeft: '8px' }} name=\"question circle outline\" />\n            }\n          />\n        </OptionDiv>\n        at most <OptionInput type=\"text\" defaultValue={sjOptions.maxFractionMultiMappedReads} onKeyUp={(e) => handleTextInput(e, 'maxFractionMultiMappedReads', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Splice overhang base-pairs:</OptionDiv>\n        at least <OptionInput type=\"text\" defaultValue={sjOptions.minSplicedAlignmentOverhang} onKeyUp={(e) => handleTextInput(e, 'minSplicedAlignmentOverhang', parseInt(e.target.value, 10))} />\n      </div>\n      <div>\n        <OptionDiv>Donor/Acceptor Motifs:</OptionDiv>\n        {\n          MOTIFS.map((motif) => <OptionDiv key={motif}><Checkbox label={`Show ${motif}`} defaultChecked={!sjOptions[`hideMotif${motif}`]} onChange={(e, data) => updateSjOptions({ [`hideMotif${motif}`]: !data.checked })} /></OptionDiv>)\n        }\n      </div>\n    </div>)\n}\n\nSjOptionsPanel.propTypes = {\n  sjOptions: PropTypes.object,\n  updateSjOptions: PropTypes.func,\n}\n\n\nconst BamOptionsPanel = ({ bamOptions, updateBamOptions }) => {\n  const handleTextInput = (e, name, value = null) => {\n    if (e.keyCode === 13) {\n      updateBamOptions({ [name]: value || e.target.value })\n    }\n  }\n\n  return (\n    <div>\n      <CategoryH3>BAM TRACK <br />OPTIONS</CategoryH3><br />\n      <OptionDiv>Track height: <OptionInput type=\"text\" defaultValue={bamOptions.trackHeight} onKeyUp={(e) => handleTextInput(e, 'trackHeight', parseInt(e.target.value, 10))} /> px</OptionDiv>\n      <OptionDiv><Checkbox label=\"View as pairs\" defaultChecked={bamOptions.viewAsPairs} onChange={(e, data) => updateBamOptions({ viewAsPairs: data.checked })} /></OptionDiv>\n      <OptionDiv><Checkbox label=\"Show soft-clips\" defaultChecked={bamOptions.showSoftClips} onChange={(e, data) => updateBamOptions({ showSoftClips: data.checked })} /></OptionDiv>\n      <OptionDiv>Color by:</OptionDiv>\n      <OptionDiv>\n        <select defaultValue={bamOptions.colorBy} onChange={(e) => updateBamOptions({ colorBy: e.target.value })}>\n          <option value=\"strand\">Strand</option>\n          <option value=\"firstOfPairStrand\">First-of-pair strand</option>\n          <option value=\"pairOrientation\">Pair orientation</option>\n          <option value=\"fragmentLength\">Insert size (TLEN)</option>\n          <option value=\"none\">None</option>\n        </select>\n      </OptionDiv>\n    </div>)\n}\n\nBamOptionsPanel.propTypes = {\n  bamOptions: PropTypes.object,\n  updateBamOptions: PropTypes.func,\n}\n\n\nconst VcfOptionsPanel = ({ vcfOptions, updateVcfOptions }) => {\n\n  return (\n    <div>\n      <CategoryH3>VCF TRACK <br />OPTIONS</CategoryH3><br />\n      <OptionDiv>\n        Display mode: &nbsp;\n        <select defaultValue={vcfOptions.displayMode} onChange={(e) => updateVcfOptions({ displayMode: e.target.value })}>\n          <option value=\"COLLAPSED\">Collapse</option>\n          <option value=\"SQUISHED\">Squish</option>\n          <option value=\"EXPANDED\">Expand</option>\n        </select>\n      </OptionDiv>\n    </div>)\n}\n\nVcfOptionsPanel.propTypes = {\n  vcfOptions: PropTypes.object,\n  updateVcfOptions: PropTypes.func,\n}\n\n\nclass RightSideBar extends React.PureComponent\n{\n  render() {\n    const {\n      locusList,\n      sjOptions,\n      vcfOptions,\n      bamOptions,\n      updateSjOptions,\n      updateVcfOptions,\n      updateBamOptions,\n      setLocus,\n      setLocusList,\n    } = this.props\n\n    return (\n      <div>\n        <EditLocusList\n          name=\"Right Side Bar\"\n          locusList={locusList}\n          setLocus={setLocus}\n          setLocusList={setLocusList}\n        />\n\n        {bamOptions.showBams && <BamOptionsPanel\n          bamOptions={bamOptions}\n          updateBamOptions={updateBamOptions}\n        />}\n        {vcfOptions.showVcfs && <VcfOptionsPanel\n          vcfOptions={vcfOptions}\n          updateVcfOptions={updateVcfOptions}\n        />}\n        {(sjOptions.showCoverage || sjOptions.showJunctions) && <SjOptionsPanel\n          sjOptions={sjOptions}\n          updateSjOptions={updateSjOptions}\n        />}\n      </div>)\n  }\n}\n\nRightSideBar.propTypes = {\n  locusList: PropTypes.array,\n  sjOptions: PropTypes.object,\n  vcfOptions: PropTypes.object,\n  bamOptions: PropTypes.object,\n  setLocus: PropTypes.func,\n  setLocusList: PropTypes.func,\n  updateSjOptions: PropTypes.func,\n  updateVcfOptions: PropTypes.func,\n  updateBamOptions: PropTypes.func,\n}\n\nconst mapStateToProps = (state) => ({\n  locusList: getRightSideBarLocusList(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setLocus: (locus) => {\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: locus,\n    })\n  },\n  setLocusList: (locusList) => {\n    dispatch({\n      type: 'SET_RIGHT_SIDE_BAR_LOCUS_LIST',\n      values: locusList,\n    })\n  },\n  updateSjOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_SJ_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateBamOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_BAM_OPTIONS',\n      updates: newSettings,\n    })\n  },\n  updateVcfOptions: (newSettings) => {\n    dispatch({\n      type: 'UPDATE_VCF_OPTIONS',\n      updates: newSettings,\n    })\n  },\n})\n\n\nexport { RightSideBar as RightSideBarComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSideBar)\n","/* eslint-disable react/jsx-one-expression-per-line */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getUser } from '../redux/selectors'\n\n\nclass UserInfo extends React.PureComponent\n{\n  render() {\n\n    const {\n      user,\n    } = this.props\n\n    if (!user.googleUserEmail) {\n      return <div>Signing in to Google Buckets...</div>\n    }\n\n    return <div>Signed in to Google Buckets as <b>{user.googleUserEmail}</b></div>\n  }\n}\n\nUserInfo.propTypes = {\n  user: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  user: getUser(state),\n\n})\n\nexport { UserInfo as UserInfoComponent }\n\nexport default connect(mapStateToProps)(UserInfo)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport UserInfo from './UserInfo'\n\nconst HeaderRow = styled(Grid.Row)`\n  color: #444;\n  margin-bottom: 5px;\n`\n\nconst Column1 = styled(Grid.Column).attrs({ width: 6 })`\n  text-align: left;\n  padding-left: 75px !important;\n`\nconst Column2 = styled(Grid.Column).attrs({ width: 10 })`\n  text-align: right;\n  padding-right: 75px !important;\n`\n\nexport default () => (\n  <Grid>\n    <HeaderRow>\n      <Column1>\n        <b>RNA-seq Viewer:</b>\n        &nbsp; &nbsp; &nbsp;\n        {/* <a href=\"#\">Intro Video</a> &nbsp; &nbsp; */}\n        <a href={window.location}>More Details</a>\n      </Column1>\n      <Column2>\n        <UserInfo />\n      </Column2>\n    </HeaderRow>\n  </Grid>)\n","\nexport const throttle = (delay, fn) => {\n  let timerId\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId)\n    }\n    timerId = setTimeout(() => {\n      fn(...args)\n      timerId = null\n    }, delay)\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport igv from 'igv/dist/igv.esm'\nimport { connect } from 'react-redux'\n\nimport { getGenome, getLocus, getTracks, getSjOptions, getVcfOptions, getBamOptions } from '../redux/selectors'\nimport { getGoogleUserEmail, googleSignIn, initGoogleClient } from '../utils/googleAuth'\nimport { throttle } from '../utils/throttle'\n\nconst IGV_SETTINGS = {\n  showIdeogram: true,\n  showNavigation: true,\n  showRuler: true,\n  showCenterGuide: true,\n  showCursorTrackingGuide: true,\n  showCommandBar: true,\n}\n\nconst StyledDiv = styled.div``\n\n\nclass IGV extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.container = null\n    this.browser = null\n    this.ignoreNextTrackRemovedEvent = false\n  }\n\n  setContainerElement = (element) => {\n    this.container = element\n  }\n\n  render = () => <StyledDiv><div ref={this.setContainerElement} /></StyledDiv>\n\n  async componentDidMount() {\n\n    if (!this.container) {\n      return\n    }\n\n    const {\n      genome,\n      locus,\n      tracks,\n      locusChangedHandler,\n      trackRemovedHandler,\n      userChangedHandler,\n    } = this.props\n\n    const igvBrowserOptions = {\n      ...IGV_SETTINGS,\n      locus,\n      genome,\n      tracks,\n    }\n\n    // TODO check if any tracks need google sign-in\n    await initGoogleClient()\n    await googleSignIn()\n    const googleUserEmail = await getGoogleUserEmail()\n    userChangedHandler(googleUserEmail)\n\n    igv.createBrowser(this.container, igvBrowserOptions).then((browser) => {\n      this.browser = browser\n\n      if (locusChangedHandler) {\n        this.browser.on('locuschange', throttle(300, locusChangedHandler)) //{chr, start, end, label}\n      }\n\n      if (trackRemovedHandler) {\n        this.browser.on('trackremoved', (track) => {\n          if (!this.ignoreNextTrackRemovedEvent) {\n            trackRemovedHandler(track)\n          }\n\n          this.ignoreNextTrackRemovedEvent = false\n        })\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (!this.container) {\n      return false\n    }\n\n    const {\n      locus,\n      tracks,\n      sjOptions,\n      vcfOptions,\n      bamOptions,\n    } = this.props\n\n\n    if (nextProps.locus && nextProps.locus !== locus) {\n      this.browser.search(nextProps.locus)\n    }\n\n    const nextTrackSettingsByTrackName = nextProps.tracks.reduce((acc, item) => {\n      return { [item.name]: item, ...acc }\n    }, {})\n\n    console.log('IGV.nextProps:', nextProps)\n\n    // update or remove existing tracks\n    tracks.forEach((track) => {\n      // TODO check if any tracks need google sign-in\n\n      const nextTrackSettings = nextTrackSettingsByTrackName[track.name]\n      if (nextTrackSettings) {\n        if ((nextProps.sjOptions !== sjOptions && ['merged', 'wig', 'spliceJunctions'].includes(track.type))\n          || (nextProps.vcfOptions !== vcfOptions && track.type === 'variant')\n          || (nextProps.bamOptions !== bamOptions && track.type === 'alignment')\n        ) {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n          this.browser.loadTrack(nextTrackSettings)\n        }\n\n        // delete track from nextTrackSettingsByTrackName to indicate that it's still selected\n        delete nextTrackSettingsByTrackName[track.name]\n\n      } else {\n        // remove track that was de-selected\n        try {\n          this.ignoreNextTrackRemovedEvent = true\n          this.browser.removeTrackByName(track.name)\n        } catch (e) {\n          console.warn('Unable to remove track', track.name, e)\n        }\n      }\n    })\n\n    // load any newly-selected track(s)\n    Object.values(nextTrackSettingsByTrackName).forEach((track) => {\n      try {\n        this.browser.loadTrack(track)\n      } catch (e) {\n        console.warn('Unable to add track', track.name, e)\n      }\n    })\n\n    return false\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  genome: getGenome(state),\n  locus: getLocus(state),\n  tracks: getTracks(state),\n  sjOptions: getSjOptions(state),\n  vcfOptions: getVcfOptions(state),\n  bamOptions: getBamOptions(state),\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  locusChangedHandler: (event) => {\n    const newLocus = event.label.replace(/,/g, '')\n\n    dispatch({\n      type: 'UPDATE_LOCUS',\n      newValue: newLocus,\n    })\n  },\n\n  userChangedHandler: (googleUserEmail) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      updates: { googleUserEmail },\n    })\n  },\n\n  trackRemovedHandler: (track) => {\n    dispatch({\n      type: 'REMOVE_SELECTED_SAMPLE_NAMES',\n      values: [track.name],\n    })\n  },\n})\n\nIGV.propTypes = {\n  genome: PropTypes.string.isRequired,\n  locus: PropTypes.string.isRequired,\n  tracks: PropTypes.array.isRequired,\n  locusChangedHandler: PropTypes.func,\n  trackRemovedHandler: PropTypes.func,\n  userChangedHandler: PropTypes.func,\n  sjOptions: PropTypes.object,\n  vcfOptions: PropTypes.object,\n  bamOptions: PropTypes.object,\n}\n\nexport { IGV as IGVComponent }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IGV)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { Button, Input } from 'semantic-ui-react'\nimport { getInitialSettingsUrl } from '../redux/selectors'\n\nconst StyledDiv = styled.div`\n  color: #999;\n  width: 100%;\n  text-align: center;\n  \n  .ui.label {\n    color: #444;\n    background-color: #f3f3f3;\n  }\n`\n\nconst StyledInput = styled(Input)`\n  margin-top: 100px;\n  width: calc(100% - 300px);\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 20px !important;\n`\n\nclass InitialSettingsForm extends React.PureComponent\n{\n  render() {\n    const {\n      initialSettingsUrl,\n    } = this.props\n    return (\n      <StyledDiv align=\"center\">\n        <StyledInput\n          label=\"Initial settings:\"\n          defaultValue={initialSettingsUrl}\n          placeholder=\"URL of .yaml or .json settings file (eg. http://.../settings.json)\"\n        />\n        <StyledButton content=\"Save URL\" />\n      </StyledDiv>)\n  }\n}\n\nInitialSettingsForm.propTypes = {\n  initialSettingsUrl: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  initialSettingsUrl: getInitialSettingsUrl(state),\n})\n\nexport { InitialSettingsForm as InitialSettingsFormComponent }\n\nexport default connect(mapStateToProps)(InitialSettingsForm)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport LeftSideBar from './LeftSideBar'\nimport RightSideBar from './RightSideBar'\nimport Header from './Header'\nimport IGV from './IGV'\nimport InitialSettingsForm from './InitialSettingsForm'\n\nconst StyledDiv = styled.div`\n  padding: 10px 20px;\n`\n\nconst SIDE_BAR_WIDTH = 210\n\nexport default () => (\n  <StyledDiv>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <LeftSideBar />\n        </Grid.Column>\n        <Grid.Column style={{ minWidth: '800px', width: `calc(100% - ${2 * SIDE_BAR_WIDTH}px)` }}>\n          <Header />\n          <IGV />\n          <InitialSettingsForm />\n\n        </Grid.Column>\n        <Grid.Column width={2} style={{ minWidth: `${SIDE_BAR_WIDTH}px` }}>\n          <RightSideBar />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </StyledDiv>\n)\n","/* eslint-disable prefer-object-spread */\n\nimport { combineReducers } from 'redux'\n\nimport {\n  zeroActionsReducer,\n  createSingleValueReducer,\n  createSingleObjectReducer,\n  createArrayReducer,\n} from './utils/reducerFactories'\n\nimport modalReducers from './utils/modalReducer'\n\n\nconst samplesInCategoriesReducer = (state, action) => {\n  if (!action || !action.categoryName || !action.samples) {\n    return state || []\n  }\n\n  return state.map((category) => {\n    if (category.categoryName !== action.categoryName) {\n      return category\n    }\n\n    let updatedSamples\n    switch (action.type) {\n      case 'SET_SAMPLES':\n        updatedSamples = [...action.samples]\n        break\n\n      case 'ADD_SAMPLES':\n        updatedSamples = [...category.samples, ...action.samples]\n        break\n\n      default:\n        updatedSamples = category.samples\n    }\n\n    return {\n      ...category,\n      samples: updatedSamples,\n    }\n  })\n}\n\n\nconst selectedSampleNamesByCategoryNameReducer = (state, action) => {\n  if (!action || !action.categoryName || !Array.isArray(action.selectedSampleNames)) {\n    return state || {}\n  }\n\n  const previousList = state[action.categoryName] || []\n\n  switch (action.type) {\n    case 'SET_SELECTED_SAMPLE_NAMES':\n    case 'ADD_SELECTED_SAMPLE_NAMES':\n    case 'REMOVE_SELECTED_SAMPLE_NAMES': {\n      let updatedList\n      if (action.type === 'SET_SELECTED_SAMPLE_NAMES') {\n        updatedList = [...action.selectedSampleNames] // make a copy of action.values\n      } else if (action.type === 'ADD_SELECTED_SAMPLE_NAMES') {\n        updatedList = [...previousList, ...action.selectedSampleNames]\n      } else {\n        const valuesToRemove = action.selectedSampleNames\n        updatedList = previousList.filter((v) => !valuesToRemove.includes(v))\n      }\n\n      return {\n        ...state,\n        [action.categoryName]: updatedList,\n      }\n    }\n    default:\n      console.trace(`Unknown action type: ${action.type}`)\n  }\n\n  return state\n}\n\n// root reducer\nconst rootReducer = combineReducers(Object.assign({\n  genome: zeroActionsReducer,\n  locus: createSingleValueReducer('UPDATE_LOCUS', ''),\n  rightSideBarLocusList: createArrayReducer('RIGHT_SIDE_BAR_LOCUS_LIST'),\n  leftSideBarLocusList: createArrayReducer('LEFT_SIDE_BAR_LOCUS_LIST'),\n  samplesInCategories: samplesInCategoriesReducer,\n  selectedSampleNamesByCategoryName: selectedSampleNamesByCategoryNameReducer,\n  sjOptions: createSingleObjectReducer('UPDATE_SJ_OPTIONS'),\n  vcfOptions: createSingleObjectReducer('UPDATE_VCF_OPTIONS'),\n  bamOptions: createSingleObjectReducer('UPDATE_BAM_OPTIONS'),\n  user: createSingleObjectReducer('UPDATE_USER'),\n  initialSettingsUrl: createSingleValueReducer('UPDATE_INITIAL_SETTINGS_URL', 'https://raw.githubusercontent.com/macarthur-lab/rnaseq-methods/master/rnaseq_viewer/settings.yaml', true),\n  initialSettings: createSingleValueReducer('UPDATE_INITIAL_SETTINGS', {}),\n}, modalReducers))\n\nexport default rootReducer\n","/**\n * Uses the localStorage API to save a state object in the browser under the given label.\n * @param label {string}\n * @param state {object}\n */\nexport const saveState = (label, state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(label, serializedState)\n  } catch (err) {\n    // Ignore write errors.\n  }\n}\n\n\n/**\n * Uses the localStorage API to restored a previously-saved state object.\n * @param label {string}\n * @param state {object}\n */\nexport const loadState = (label) => {\n  try {\n    const serializedState = localStorage.getItem(label)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\n//import logger from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport jsurl from 'jsurl'\n\nimport { loadState, saveState } from '../utils/localStorage'\n\nconst REFERENCE_DATA_ROOT = 'gs://macarthurlab-rnaseq/reference_tracks/GTEx_ref_data'\nconst REFERENCE_DATA_INFO_LIST = [\n  {\n    name: 'GTEx 100 Muscle',\n    description: '100 randomly-chosen GTEx v3 muscle samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all 100 samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/muscle_100_GTEx_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/muscle_100_GTEx_samples.bigWig`,\n  },\n  {\n    name: 'GTEx 100 Blood',\n    description: '100 randomly-chosen GTEx v3 blood samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all 100 samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/blood_100_GTEx_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/blood_100_GTEx_samples.bigWig`,\n  },\n  {\n    name: 'GTEx 100 Fibs',\n    description: '100 randomly-chosen GTEx v3 fibroblast samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all 100 samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/fibs_100_GTEx_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/fibs_100_GTEx_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Muscle',\n    description: 'All 803 GTEx v3 muscle samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Blood',\n    description: 'All 755 GTEx v3 blood samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Fibs',\n    description: 'All 504 GTEx v3 fibroblast samples combined by summing raw coverage values and raw splice-junction-spanning read counts across all samples.',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Muscle - Norm.',\n    description: 'All 803 GTEx v3 muscle samples combined by summing raw coverage values across all samples and also summing normalized splice-junction-spanning read counts across all samples. The normalization is done by computing the normalized read count for each junction as normalized_read_count = raw_read_count * scalar. Here scalar = average_unique_reads_per_muscle_sample / (total_unqiue_reads_in_this_sample * number_of_muscle_samples), and average_unique_reads_per_muscle_sample = (total_unqiue_reads_in_all_muscle_samples / number_of_muscle_samples)',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.normalized.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_muscle.803_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Blood - Norm.',\n    description: 'All 755 GTEx v3 blood samples combined by summing raw coverage values across all samples and also summing normalized splice-junction-spanning read counts across all samples. The normalization is done by computing the normalized read count for each junction as normalized_read_count = raw_read_count * scalar. Here scalar = average_unique_reads_per_blood_sample / (total_unqiue_reads_in_this_sample * number_of_blood_samples), and average_unique_reads_per_blood_sample = (total_unqiue_reads_in_all_blood_samples / number_of_blood_samples)',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.normalized.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_blood.755_samples.bigWig`,\n  },\n  {\n    name: 'GTEx All Fibs - Norm.',\n    description: 'All 504 GTEx v3 fibroblast samples combined by summing raw coverage values across all samples and also summing normalized splice-junction-spanning read counts across all samples. The normalization is done by computing the normalized read count for each junction as normalized_read_count = raw_read_count * scalar. Here scalar = average_unique_reads_per_fibs_sample / (total_unqiue_reads_in_this_sample * number_of_fibs_samples), and average_unique_reads_per_fibs_sample = (total_unqiue_reads_in_all_fibs_samples / number_of_fibs_samples)',\n    junctions: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.normalized.junctions.bed.gz`,\n    coverage: `${REFERENCE_DATA_ROOT}/GTEX_fibs.504_samples.bigWig`,\n  },\n  /*\n  {\n    name: 'Gencode v32 Genes',\n    description: 'Comprehensive gene annotations for GRCh38 reference chromosomes. Source: https://www.gencodegenes.org/human/release_32.html',\n    annotation: 'gs://macarthurlab-rnaseq/reference_tracks/gencode.v32.annotation.sorted.gtf.gz'\n  },\n  {\n    name: 'RefSeq Genes',\n    path: 'https://s3.amazonaws.com/igv.org.genomes/hg38/refGene.sorted.txt.gz'\n  }\n  */\n]\n\nconst SAMPLE_INFO_LIST = []\n\nconst INITIAL_SAMPLES_IN_CATEGORIES = [\n  {\n    categoryName: 'Reference Data',\n    samples: REFERENCE_DATA_INFO_LIST,\n  },\n  {\n    categoryName: 'Samples',\n    samples: SAMPLE_INFO_LIST,\n  },\n]\n\nconst INITIAL_STATE = {\n  genome: 'hg38',\n  locus: 'chr15:92,835,700-93,031,800',\n  sjOptions: {\n    trackHeight: 170,\n    showCoverage: true,\n    showJunctions: true,\n    hideAnnotated: false,\n    hideUnannotated: false,\n    colorBy: 'strand',\n    minUniquelyMappedReads: 1,\n    minTotalReads: 1,\n    maxFractionMultiMappedReads: 1,\n    minSplicedAlignmentOverhang: 0,\n    thicknessBasedOn: 'numUniqueReads', //options: numUniqueReads (default), numReads, isAnnotatedJunction\n    bounceHeightBasedOn: 'random', //options: random (default), distance, thickness\n    labelUniqueReadCount: true,\n    labelMultiMappedReadCount: false,\n    labelTotalReadCount: false,\n    labelMotif: false,\n    labelAnnotatedJunction: false,\n    labelAnnotatedJunctionValue: ' [A]',\n  },\n  vcfOptions: {\n    displayMode: 'EXPANDED',\n  },\n  bamOptions: {\n    trackHeight: 200,\n    showSoftClips: true,\n    alignmentShading: 'strand',\n  },\n  samplesInCategories: INITIAL_SAMPLES_IN_CATEGORIES,\n  selectedSampleNamesByCategoryName: {},\n  leftSideBarLocusList: [],\n  rightSideBarLocusList: [],\n}\n\nINITIAL_STATE.initialSettings = JSON.parse(JSON.stringify(INITIAL_STATE)) // create a deep-copy of INITIAL_STATE\n\nconst PERSIST_KEYS_IN_URL = {\n  locus: 'locus',\n  selectedSampleNamesByCategoryName: 'selectedSamples',\n  sjOptions: 'sjOptions',\n  bamOptions: 'bamOptions',\n  vcfOptions: 'vcfOptions',\n  initialSettingsUrl: 'initialSettingUrl',\n}\n\nconst PERSIST_KEYS_IN_LOCAL_STORAGE = [\n  'samplesInCategories', 'leftSideBarLocusList', 'rightSideBarLocusList',\n]\n\nconst persistStoreMiddleware = (store) => (next) => (action) => {\n  const result = next(action)\n  const nextState = store.getState()\n  PERSIST_KEYS_IN_LOCAL_STORAGE.forEach((key) => { saveState(key, nextState[key]) })\n\n  const hashString = Object.keys(nextState)\n    .filter((key) => (key in PERSIST_KEYS_IN_URL))\n    .reduce((hashKeyValueList, key) => {\n      const value = key === 'locus' ? nextState[key].replace(',', '') : jsurl.stringify(nextState[key])\n      return [\n        ...hashKeyValueList,\n        `${PERSIST_KEYS_IN_URL[key]}=${value}`,\n      ]\n    }, []).join('&')\n\n  window.location.hash = `#${hashString}`\n\n  return result\n}\n\nconst enhancer = compose(\n  applyMiddleware(thunkMiddleware, persistStoreMiddleware),\n)\n\n\n/**\n * Initialize the Redux store\n * @param rootReducer\n * @param initialState\n * @returns {*}\n */\nexport const configureStore = (\n  rootReducer = (state) => state,\n  initialState = INITIAL_STATE,\n) => {\n\n  //restore any values from local storage\n  PERSIST_KEYS_IN_LOCAL_STORAGE.forEach((key) => {\n    const v = loadState(key)\n    if (v !== undefined) {\n      initialState[key] = v\n    }\n  })\n\n  const REVERSE_KEY_NAME_LOOKUP = Object.entries(PERSIST_KEYS_IN_URL).reduce((acc, [key, value]) => { return { ...acc, [value]: key } }, {})\n  const hashString = window.location.hash.replace(/^#/, '')\n  const stateFromUrlHash = hashString && hashString.split('&').reduce((acc, keyValue) => {\n    const keyValueList = keyValue.split('=')\n    const key = (keyValueList[0] in REVERSE_KEY_NAME_LOOKUP) ? REVERSE_KEY_NAME_LOOKUP[keyValueList[0]] : keyValueList[0]\n    if (key === 'locus') {\n      acc = { ...acc, [key]: keyValueList[1] }\n    } else {\n      try {\n        acc[key] = jsurl.parse(keyValueList[1])\n      } catch (e) {\n        console.error('Couldn\\'t parse url hash param', keyValueList[0], ': ', keyValueList[1])\n      }\n    }\n    return acc\n  }, {})\n\n  //values from url override values from local storage\n  if (stateFromUrlHash) {\n    initialState = { ...initialState, ...stateFromUrlHash }\n  }\n\n  console.log('Initializing store to:')\n  console.log(initialState)\n\n  return createStore(rootReducer, initialState, enhancer)\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport BaseLayout from './components/BaseLayout'\nimport rootReducer from './redux/rootReducer'\nimport { configureStore } from './redux/configureStore'\n\nfunction App() {\n  return (\n    <Provider store={configureStore(rootReducer)}>\n      <BaseLayout />\n    </Provider>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}